## 任务：分析所有API资产并生成完整的业务流程
### API列表：
#### API 1
- ID: 2523e73c-f79c-4c60-a44a-b7eb320a1088
- 名称: CommitteeKanBanController_queryStudyDuration
- 描述: 管理端-查询人均学习时长。该API接收一个包含委员会代码、查询类型和员工类型的请求体，通过解析委员会代码获取最高权限选项，然后根据这些信息查询并返回人均学习时长。
- 端点: /committee/kanban/queryStudyDuration
- 方法: POST

#### API 2
- ID: 25d90594-3e10-405c-8817-207bc1563aec
- 名称: RenovationController_publishDecoration
- 描述: 管理端-发布装修方式一。该API接收一个RenovationWayOneVO对象，用于发布新的装修方式。在发布过程中，会停用之前的相同装修方式，并更新当前装修方式的状态。最后，清除相关的缓存。
- 端点: /renovation/publishDecoration
- 方法: POST

#### API 3
- ID: ed4fce59-3244-45ba-9252-1ec727eafbe0
- 名称: CourseCategoryController_deleteCourseCategory
- 描述: 管理端-删除课程分类。该API用于删除指定ID的课程分类。在删除前，会检查该分类是否存在，是否有关联的课程，以及当前用户是否有权限删除该分类。如果分类是由超级管理员创建且映射到其他组织的课程目录，则会更新相关映射信息并删除关联的课程目录。
- 端点: /course/category/delete/{id}
- 方法: POST
- 请求参数:
  * id (Long): 要删除的课程分类的ID

#### API 4
- ID: 7e573224-83fa-423e-8f54-7e5d9f7e1bdb
- 名称: RecentStudyController_addRecentLearn
- 描述: 学员端-添加最近学习。该API接收一个RecentStudyVo对象，用于记录学员最近学习的课程信息。在添加之前，会进行一系列的数据校验和权限检查，包括业务类型、业务ID的有效性以及学员对课程的可见性。如果学员已经存在最近学习记录，则更新记录的时间；否则，插入新的记录。
- 端点: /learn/addRecentLearn
- 方法: POST

#### API 5
- ID: fde2a5ba-b814-4570-8ddf-e73414b7a403
- 名称: UserRatingDataController_refreshCourseRatingData
- 描述: 管理端接口-刷新地图状态。该API接收一个UserRatingDataDto对象作为请求体，用于刷新地图、课程和专委会的满意度数据。
- 端点: /userRatingReport/refresh-ratingData
- 方法: POST

#### API 6
- ID: 8c2a6834-855d-43bd-bee0-dd2ff00ee397
- 名称: CourseController_getCourseReportData
- 描述: 该API用于查询课程学习数据列表。根据传入的CourseReportDataVo参数，查询相应的课程详情数据，并返回分页结果。如果perCode字段等于'category-warningEducation'，则查询预警教育相关的课程数据。
- 端点: /course/getCourseReportData
- 方法: POST

#### API 7
- ID: 647ce22a-d67b-408f-82b5-07f334067194
- 名称: CourseSectionLearnController_batchRefreshStudyInfo
- 描述: 批量刷新课程章节的学习信息。该API接收一个查询参数fullRefresh，用于指示是否进行全量刷新。调用sectionLearnService的batchRefreshStudyInfo方法来执行刷新操作，并返回一个ResultVo<Void>类型的响应。
- 端点: /learn/batchRefreshStudyInfo
- 方法: GET
- 请求参数:
  * fullRefresh (Boolean): 指示是否进行全量刷新，默认值为false。

#### API 8
- ID: 81483823-d1c7-4db8-a616-63c03f18e079
- 名称: CourseController_deleteCourse
- 描述: 管理端-删除课程。该API首先判断指定ID的课程是否正在被某个地图中的任务使用。如果课程正在被使用，则返回一个包含相关信息的响应，提示需要先删除地图中的任务；否则，删除课程并返回成功的响应。
- 端点: /course/deleteCourse/{id}
- 方法: GET
- 请求参数:
  * id (String): 课程的唯一标识符

#### API 9
- ID: 15263023-0768-4712-a85a-566c96ec83f9
- 名称: CourseStudentController_getById
- 描述: 管理端-根据id查询课程学生信息。该API接收一个可选的查询参数id，通过调用courseStudentService.getCourseStudentById方法获取对应的CourseStudentVo对象，并将其封装在ResultVo中返回。如果未找到对应的学生信息，则抛出BizBaseException异常。
- 端点: /course/student/getById
- 方法: GET
- 请求参数:
  * id (Long): 课程学生的唯一标识符

#### API 10
- ID: 45d17b79-6c8e-4555-a665-d02ef82d583f
- 名称: SceneCourseController_getSceneCategoryTree
- 描述: 该API用于获取场景课程分类树结构。根据传入的clientType参数，从数据库中查询未删除的场景分类，并按照特定规则构建分类树。对于专业专区和胜任发展场景，会进一步处理以添加子节点。最后返回构建好的分类树。
- 端点: /sceneCourse/getSceneCategoryTree
- 方法: GET
- 请求参数:
  * clientType (Integer): 客户端类型，用于区分不同的展示逻辑

#### API 11
- ID: b5d5b7a5-dc4e-40ae-a915-d0ce1b8c9cf3
- 名称: MsgRecordController_save
- 描述: 该API用于保存消息记录。客户端通过POST请求发送MsgRecordRequest类型的请求体，服务器端接收后调用recordService的saveUpdate方法进行保存操作，最后返回ResultVo<Void>类型的响应表示操作成功。
- 端点: /msg/save
- 方法: POST

#### API 12
- ID: 49912ddc-c4f8-43ce-b44e-cf053319124d
- 名称: WarningEducationController_queryBannerFirst
- 描述: 学员端-警示教育专委会发布的装修banner查询。该API接收一个可选的查询参数'source'，默认值为'RenovationConstants.PC'，用于指定请求来源。API会调用warningEducationService.queryBannerFirstNew(source)方法获取banner列表，并将其封装在ResultVo<List<BannerResponse>>对象中返回。
- 端点: /warningEducation/queryBannerFirst
- 方法: GET
- 请求参数:
  * source (String): 请求来源，默认值为'RenovationConstants.PC'

#### API 13
- ID: 5368a20f-d639-49ce-af4a-9c9eeea8ebc9
- 名称: CourseController_getCourseEvaluationData
- 描述: 该API用于查询课程评价数据。它通过调用courseService的getCourseEvaluationData方法获取课程评价信息，并将其封装在CourseEvaluationDto对象中返回给客户端。
- 端点: /course/getCourseEvaluationData
- 方法: GET

#### API 14
- ID: cbdb46da-eba0-4beb-ae24-8bb980325b3f
- 名称: UserLearnReportController_examLearnDetailExport
- 描述: 该API用于导出用户的考试学习明细报告。客户端通过POST请求发送一个包含查询条件的ExamLearnReportRequest对象，服务器端根据请求参数查询相关的考试学习明细数据，并使用EasyExcel工具将数据写入Excel文件，然后通过HttpServletResponse返回给客户端。
- 端点: /report/user/examLearnDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流的对象，非必需参数，由框架自动注入。

#### API 15
- ID: bbd6d22d-91a5-4e98-9a16-aa5655bb2a6a
- 名称: OrganizationKanBanController_courseCommentDetail
- 描述: 该API用于获取课程满意度详情。客户端通过POST请求发送一个OrgBoardThirdRequest类型的请求体，服务器端解析请求体后调用courseRatingDataService的courseCommentDetail方法获取课程评论详情，并以ResultVo<IPage<OrgBoardCourseCommentDetailResponse>>的形式返回。
- 端点: /org/board/courseCommentDetail
- 方法: POST

#### API 16
- ID: 2e086dfa-c11e-4564-bbd0-ba145305b684
- 名称: CourseController_editCourse
- 描述: 管理端-修改课程基本信息。该API接收一个CourseVo对象作为请求体，用于更新课程的相关信息。在更新之前，会对请求体中的某些字段进行验证，例如安全等级不能为空，讲师名称不能超过200字符，讲师简介不能超过500字符，课程是否存在等。此外，还会对课程封面进行处理，添加水印，并将相关附件信息转换为JSON字符串存储。最后，更新课程信息到数据库，并将数据冗余到映射课。
- 端点: /course/editcourse
- 方法: POST

#### API 17
- ID: 9330ba72-6581-46bb-a93d-5fdbe13e3e8a
- 名称: CourseStudentController_calByRules
- 描述: 管理端-通过规则计算人员数量。该API接收一个CourseStudentVo对象作为请求体，根据其中的规则配置计算特定课程的学生数量，并返回一个ResultVo<Object>对象，其中包含添加和排除的学生数量。
- 端点: /course/student/calByRules
- 方法: POST

#### API 18
- ID: fff338be-d07f-4c9f-84dc-4a86e8d0802c
- 名称: CourseSectionLearnController_getUserLearnRank
- 描述: 获取指定委员会和类型的人员累计学习时长排行榜。该API通过查询参数接收委员会代码和类型，并返回一个包含用户学习排名信息的结果对象。
- 端点: /learn/getUserLearnRank
- 方法: GET
- 请求参数:
  * committeeCode (String): 委员会代码，用于筛选特定委员会的学习排名
  * type (String): 类型，用于筛选特定类型的学习排名

#### API 19
- ID: 4f75ad3b-a4ad-4064-9982-e83772b3258b
- 名称: OrganizationKanBanController_planningCommentDetail
- 描述: 该API用于获取组织看板三级页面的地图满意度详情。客户端通过POST请求发送一个OrgBoardThirdRequest对象，服务器端处理后返回一个ResultVo<IPage<OrgBoardPlanningCommentDetailResponse>>对象。
- 端点: /org/board/planningCommentDetail
- 方法: POST

#### API 20
- ID: 0b2e517d-e2c1-4053-9794-3c7e6af290fe
- 名称: NewComerEventController_addEvent
- 描述: 该API用于添加新人活动事件。首先，它接收一个TNewComerEvent类型的请求体，然后验证事件类型是否正确。接着，从请求头中获取用户账号，并设置当前时间为创建时间。最后，将事件保存到数据库中，并返回一个ResultVo<Boolean>类型的响应，表示操作是否成功。
- 端点: /newcomer/eventadd/add
- 方法: POST

#### API 21
- ID: 58df723c-eacd-42a3-8c09-272629d6c35e
- 名称: RenovationZoneController_pageZoneModuleCourse
- 描述: 学员端-专区模块课程查询。该API接收一个包含模块ID、当前页码和每页大小的请求体，查询指定模块下的课程，并根据用户的可见性过滤课程列表，返回分页后的课程详情。
- 端点: /zone/course
- 方法: POST

#### API 22
- ID: 09d0daa7-fe62-4dfc-b6be-6f1872f79596
- 名称: CourseController_getCourseCode
- 描述: 管理端-查询最新课程编码。该API会根据数据库中的记录生成最新的课程编码。如果数据库中已有编码，则在此基础上加一；如果没有，则从1开始。生成的编码格式为'SJ_PREFIX-yyyyMMdd-0000'。
- 端点: /course/getcode
- 方法: GET

#### API 23
- ID: 6b6bc9f4-7959-4288-87d3-133fdbfe3bd5
- 名称: UserLearnReportController_studyLearnPage
- 描述: 该API用于获取用户的课程学习报告，包括每日学习时长、总学习时长和学习天数。它接受一个StudyReportRequest对象作为请求体，并返回一个ResultVo<IPage<UserStudyReportResponse>>对象。
- 端点: /report/user/learnPage
- 方法: POST

#### API 24
- ID: d335df2d-9ff8-47a1-b3e2-fbb4a3c7041e
- 名称: CourseCategoryController_getCategorytByUserAndFirst
- 描述: 学员端-根据当前用户领域和一级标签id查询在线课程导航。该API首先获取当前用户的领域编码，然后查询与该领域相关的课程分类信息，并根据传入的一级标签id筛选出相应的分类树。
- 端点: /course/category/getCategorytByUserAndFirst
- 方法: GET
- 请求参数:
  * domainCode (String): 领域编码，用于指定查询的领域范围
  * id (Long): 一级标签id，用于指定查询的一级标签

#### API 25
- ID: f9989e05-8a39-4270-9020-43a308f3334b
- 名称: OrganizationKanBanController_planningScorePage
- 描述: 该API用于获取组织看板中的规划评分分页数据。客户端通过POST请求发送一个OrgBoardPlanningRequest对象，服务器端处理后返回一个ResultVo<IPage<OrgBoardPlanningScoreResponse>>对象。
- 端点: /org/board/planningScorePage
- 方法: POST

#### API 26
- ID: d45252b7-0854-4691-8658-64fb7c47e943
- 名称: RenovationController_renovationDynamic
- 描述: 该API用于获取指定ID的翻新动态详情。首先，它接收一个可选的查询参数'id'，然后通过调用renovationService.renovationDynamic方法来获取对应的翻新动态数据。如果找到对应的数据，则将其转换为RenovationDynamicVo对象并返回；否则，返回一个空的RenovationDynamicVo对象。
- 端点: /renovation/renovationDynamic
- 方法: GET
- 请求参数:
  * id (Long): 翻新动态的唯一标识符。如果未提供，则可能返回默认或所有动态的信息。

#### API 27
- ID: 744d7ec6-0be1-4ea4-b004-f64938b28ce7
- 名称: SceneCourseController_queryThemeAndCourseList
- 描述: 该API用于根据给定的场景ID查询相关的主题和课程列表。如果未提供场景ID，则可能返回默认的主题和课程列表。API首先检查场景ID是否为空，如果为空则抛出异常。否则，调用sceneCategoryService的queryThemeAndCourseList方法获取主题和课程列表，并将其封装在ResultVo对象中返回。
- 端点: /sceneCourse/queryThemeAndCourseList
- 方法: GET
- 请求参数:
  * sceneId (Long): 场景ID，用于指定查询的主题和课程列表。如果未提供，则可能返回默认的主题和课程列表。

#### API 28
- ID: 3b9ae41c-9002-44c3-880b-4e8bad0cc903
- 名称: CourseStudentStudyController_queryStudyDetails
- 描述: 该API用于管理端查看课程学习详情。客户端通过POST请求发送一个CourseStudyDetailVo对象，服务器端根据该对象中的信息查询课程学习详情，并返回一个ResultVo<CourseStudentStudyVo>对象。
- 端点: /courseStudentStudy/queryStudyDetails
- 方法: POST

#### API 29
- ID: 76c06702-b963-4589-b3bc-3e6095edbf03
- 名称: CourseStudentCustomListController_addUserExtetnalMode
- 描述: 该API用于向课程自定义学生列表中添加外部用户。首先，根据传入的业务资源ID查询课程信息，如果没有找到对应的课程信息，则返回失败。然后，解析传入的用户列表，区分已导入用户和新用户。对于已导入用户，更新其外部模式；对于新用户，批量添加到课程自定义学生列表中。
- 端点: /course/courseStudentCustomList/addUserExtetnalMode
- 方法: POST

#### API 30
- ID: c5973d7d-4f76-43ad-98f5-ca6265f9f77a
- 名称: OrganizationKanBanController_learningRateDistribution
- 描述: 该API用于获取组织看板的学习率分布数据，主要用于展示学习进度的折线图。
- 端点: /org/board/learningRateDistribution
- 方法: POST

#### API 31
- ID: 50f35daa-5af7-4bb9-b914-752a7ee4a3f8
- 名称: CourseCommentReplyController_addCourseCommentReply
- 描述: 管理端-新增课程回复接口。该接口接收一个课程评论回复对象，首先获取当前登录用户的信息，然后将用户编号、用户名以及评论日期填充到评论回复对象中。接着，如果评论回复对象中存在replyId，则查找对应的评论回复记录，并将原回复的用户编号和用户名设置到新的评论回复对象中。最后，保存新的评论回复对象到数据库。
- 端点: /courseCommentReply/add
- 方法: POST

#### API 32
- ID: 7d90f770-c6b9-4d57-9238-87b288bb17dc
- 名称: RenovationReportController_exportGetReportEvaluationList
- 描述: 管理端-导出专业专区课程学员评价数据。该API接收一个包含课程评价信息的请求体，并通过HttpServletResponse将生成的Excel文件导出给客户端。
- 端点: /renovation/report/exportGetReportEvaluationList
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于导出Excel文件的HTTP响应对象。

#### API 33
- ID: 6d2cd76d-c6bb-4154-875f-1bfd9f617fc2
- 名称: BannerController_delete
- 描述: 管理端-删除指定ID的banner接口。该接口接收一个banner的ID作为路径参数，通过调用bannerService的delete方法，将对应ID的banner标记为已删除状态。
- 端点: /banner/delete/{id}
- 方法: DELETE
- 请求参数:
  * id (String): 要删除的banner的唯一标识符

#### API 34
- ID: 1f96cba9-c4e6-4080-80a0-fd5dbf86c62b
- 名称: NewComerEventController_ifSkip
- 描述: 该API用于检查新用户是否可以跳过特定的新手活动。它通过查询数据库中与当前用户关联的新手活动记录来决定返回的结果。如果存在相关记录且数量大于0，则返回true，表示用户可以跳过新手活动；否则返回false。
- 端点: /newcomer/event/ifSkip
- 方法: GET

#### API 35
- ID: c9dcdccd-703a-4699-9236-7f790c20e673
- 名称: BannerController_query
- 描述: 学员端-banner查询。该API根据指定的source（来源）和可选的domainCode（域名代码）查询相应的横幅信息。首先从数据库中查询BannerPo对象，然后根据source过滤出有效的横幅URL。接着，从Redis缓存中获取特定domainCode的横幅信息，如果没有缓存则调用renovationOrgBannerService.list方法获取。最后，将所有查询到的横幅信息转换为BannerQueryResponse对象并返回。
- 端点: /banner/query/{source}
- 方法: GET
- 请求参数:
  * source (String): 横幅来源，可以是'Mobile'或'PC'
  * domainCode (String): 域名代码，用于过滤特定域名下的横幅信息

#### API 36
- ID: 6a0e9d15-12fc-4d54-9634-7794e7f216a6
- 名称: BannerController_save
- 描述: 管理端-banner新增接口。该接口接收一个BannerSaveRequest对象作为请求体，用于保存一个新的广告横幅信息。首先，从当前会话中获取用户信息，然后将请求体中的数据转换为BannerPo对象，并设置广告横幅的领域代码为当前用户的业务代码，最后将BannerPo对象插入数据库。
- 端点: /banner/save
- 方法: POST

#### API 37
- ID: 3133a220-f80a-41de-a970-0d4b653a05e6
- 名称: CommitteeController_statisticTrainSatisfactionByCommittee
- 描述: 该API用于统计特定专委会下的培训满意度。首先从数据库中获取已发布且未删除的专委会列表，然后调用委员会服务来计算每个专委会的满意度分数。满意度分数是基于有效评论的平均分数，其中有效评论是指已完成评价的评论或最新发布的评价。
- 端点: /committee/statisticTrainSatisfactionByCommittee
- 方法: GET

#### API 38
- ID: 60e1a446-c69b-44e9-a80c-f284e646ccb5
- 名称: CourseSectionLearnController_getCourseOverview
- 描述: 获取课程总览信息，支持通过committeeCode和type进行筛选。该API调用sectionLearnService.getCourseOverview方法来获取课程概述数据。
- 端点: /learn/getCourseOverview
- 方法: GET
- 请求参数:
  * committeeCode (String): 委员会代码，用于筛选特定委员会的课程总览信息。
  * type (String): 课程类型，用于筛选特定类型的课程总览信息。

#### API 39
- ID: 0c781b2f-d087-45a4-84e0-18c9131b4b6b
- 名称: TranscodeController_transcodeStatus
- 描述: 该API用于查询转码任务的状态。当客户端发送GET请求到/transcode/transcodeStatus路径时，服务器会调用transcodeService.queryTranscodeResults()方法来获取转码任务的结果。
- 端点: /transcode/transcodeStatus
- 方法: GET

#### API 40
- ID: a25e23d6-41d0-4d6d-ba35-75bc10c57395
- 名称: CourseController_queryIsLikeAndCollectCount
- 描述: 管理端-根据课程ID查询课程的点赞数量和收藏数量。该API接收一个课程ID作为路径参数，并返回一个ResultVo对象，其中包含CourseComprehensiveDataVo类型的课程综合数据。
- 端点: /course/queryIsLikeAndCollectCount/{id}
- 方法: GET
- 请求参数:
  * id (Long): 课程ID，用于指定要查询的课程。

#### API 41
- ID: bb897cd5-e11a-4212-a423-be448ac614fc
- 名称: CourseSectionLearnController_clickLikeCourse
- 描述: 学员端-课程点赞：该API用于处理学员对课程的点赞操作。当学员点击点赞按钮时，客户端会发送一个包含点赞信息的请求体到服务器。服务器接收到请求后，会调用sectionLearnService的clickLikeCourse方法来处理点赞逻辑。如果点赞成功，服务器会返回一个成功的ResultVo<Void>响应；如果发生异常，服务器会记录错误日志并返回一个失败的ResultVo<Void>响应。
- 端点: /learn/clickLikeCourse
- 方法: POST

#### API 42
- ID: 56f81a1a-6e2b-490a-8c3e-54b9a59cbc1e
- 名称: OrganizationKanBanController_learnRateTrend
- 描述: 管理端-学习率趋势：该API用于获取组织看板的学习率趋势数据。客户端通过POST请求发送OrgBoardBaseRequest类型的请求体，服务器端解析请求体后调用service.queryOrgTrend方法查询学习率趋势数据，并以ResultVo<PageInfo<OrgBoardBaseResponse>>的形式返回。
- 端点: /org/board/learnRateTrend
- 方法: POST

#### API 43
- ID: f92a05ac-1d3d-4d5c-b0ec-6075f0d8d726
- 名称: OrganizationKanBanController_courseScorePage
- 描述: 该API用于获取组织看板中的课程满意度评分分页数据。客户端通过POST请求发送一个OrgBoardCourseRequest对象，服务器端处理后返回一个ResultVo<IPage<OrgBoardCourseScoreResponse>>对象。
- 端点: /org/board/courseScorePage
- 方法: POST

#### API 44
- ID: e9f8ea8b-73e3-4932-be12-e29627216b8c
- 名称: CourseSectionLearnController_getIsLikeById
- 描述: 学员端-根据节id查询是否点赞。该API接收一个课程节ID作为查询参数，调用sectionLearnService的getIsLikeById方法来获取该课程节是否被当前学员点赞的状态，并返回一个ResultVo<Integer>对象。
- 端点: /learn/getIsLikeById
- 方法: GET
- 请求参数:
  * sectionId (Long): 课程节ID，用于查询该课程节是否被当前学员点赞。

#### API 45
- ID: a5da5587-db47-4e87-9bd9-393d81b6e714
- 名称: CommitteeController_ratingsByCommittee
- 描述: 管理端-查询专委会排序分数。该API通过查询已发布的且未删除的专委会列表，获取每个专委会下的地图ID，然后统计多个维度的数据（课程质量体验、目标人才覆盖率、促学体验、地图完成率、学习场景满足、响应速度、地图满意度），并将这些数据封装成CommitteeRankingPo对象列表返回。
- 端点: /committee/ratingsByCommittee
- 方法: GET

#### API 46
- ID: e968662b-e466-4ed8-9358-c65af0a29e70
- 名称: WarningEducationController_queryAllEvaluations
- 描述: 学员端-查询该课程所有评价。该API允许学员通过课程ID查询该课程的所有评价，并对属于当前登录学员的评价设置删除标志。
- 端点: /warningEducation/queryAllEvaluations
- 方法: GET
- 请求参数:
  * courseId (String): 课程ID，用于指定要查询评价的课程。如果未提供，则可能查询所有课程的评价。

#### API 47
- ID: 8e9376e4-9870-43b5-8a77-20a90c750516
- 名称: CourseMappingController_refreshCourseMapping
- 描述: 该API用于刷新指定课程ID的课程映射关系。首先检查传入的课程ID列表是否为空，然后验证当前用户的权限。接着，根据课程ID查询有效的课程信息，并根据课程的维度类型查找对应的课程分类。如果课程已经存在映射关系，则先删除旧的映射关系。最后，根据新的课程分类信息创建并保存新的课程映射。
- 端点: /course-mapping/refreshCourseMapping
- 方法: POST

#### API 48
- ID: cdbef7a7-91cf-4dfb-8f34-7e7e56fc2910
- 名称: RenovationZoneController_delRedis
- 描述: 该API用于删除指定键的Redis缓存，并重新生成新的缓存数据。首先检查传入的键是否在预定义的数据来源集合中，如果不在则抛出异常。然后删除对应的Redis缓存，接着调用renovationModuleService的listZones方法来获取最新的专区数据，并将其存储到Redis中。
- 端点: /zonedelRedisZone
- 方法: GET
- 请求参数:
  * key (String): 要删除的Redis缓存键，对应专区的数据来源

#### API 49
- ID: e834dc59-9cd3-48d5-9ea2-41177f310289
- 名称: WarningEducationController_queryWarningFilm
- 描述: 学员端-各个模块课程查询。该API根据传入的查询类型（如公共警示片、行业警示片、廉洁文化故事等）查询相应的课程详情，并返回分页结果。
- 端点: /warningEducation/queryWarningFilm
- 方法: POST

#### API 50
- ID: 066ca2e4-a7ab-43a9-8d31-227cf6e7f148
- 名称: CourseChapterController_getChapteAndSection
- 描述: 管理端-根据课程id查询课程大纲章节详情。该API首先通过courseId查询课程信息，如果课程设置了映射ID，则使用映射ID继续查询。然后，根据课程ID查询所有章节详情，并进一步查询每个章节下的所有小节详情。如果课程来源类型为2，则对每个小节进行额外的信息填充，包括文稿内容和播放信息。
- 端点: /course/chapter/getChapteAndSection
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于查询特定课程的大纲章节详情

#### API 51
- ID: 18da6aa4-5a88-4e73-b77e-538582fc4e48
- 名称: CourseQrcodeSignController_signDetailExport
- 描述: 该API用于处理二维码签到详情的导出请求。客户端通过POST方法发送一个CourseSignDetailRequest类型的请求体，服务器端根据请求中的签到ID列表或其他筛选条件查询签到详情，并将结果以Excel文件的形式导出给客户端。
- 端点: /qrcode/signDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流，以便导出Excel文件。

#### API 52
- ID: 9c43d6fc-a86e-43b3-ba6e-92a61e8ab2cb
- 名称: CommitteeController_queryCommitteenData
- 描述: 管理端-查询专委会得分。该API允许通过查询参数committeeCode来获取特定专委会的得分排名信息。如果没有提供committeeCode，则返回所有专委会的得分排名信息。API会根据得分自动评定专委会的星级，并返回相应的星级描述和图标URL。
- 端点: /committee/query/committeenData
- 方法: GET
- 请求参数:
  * committeeCode (String): 专委会代码，用于查询特定专委会的得分排名信息。如果不提供，则返回所有专委会的得分排名信息。

#### API 53
- ID: e0c00ec8-645a-4df9-9d94-6ce1d2cee185
- 名称: CommitteeCommentController_delCommitteeComment
- 描述: 学员端-删除专委会评价。该API允许学员通过传入评价ID来删除自己的专委会评价。首先，API会从请求头中获取Access-Token以验证当前登录用户的身份。然后，它会检查该评价是否存在并且是否属于当前用户。如果评价不存在或不属于当前用户，则抛出异常。否则，API会更新评价的状态为已删除。
- 端点: /committee/comment/delCommitteeComment
- 方法: GET
- 请求参数:
  * commentId (Long): 需要删除的专委会评价的ID

#### API 54
- ID: eca8302b-4ee5-45ec-b350-9ca02264ebd1
- 名称: RenovationReportController_getRenovationList
- 描述: 管理端-专委会报表根据族群查询专业专区数据。该API接收一个查询参数'code'，用于指定需要查询的专业专区代码。如果'code'为空，则抛出异常。API会根据'code'获取最高权限选项，并进一步查询对应的装修报告列表。对于特定条件下的装修报告，会进行相应的字段设置。
- 端点: /renovation/report/getRenovationList
- 方法: GET
- 请求参数:
  * code (String): 专业专区代码，多个代码以逗号分隔

#### API 55
- ID: d18494e0-907c-4adc-9cdf-35bbf9454062
- 名称: SceneCourseController_swapOrder
- 描述: 该API用于交换两个场景分类的排序顺序。通过传入两个场景分类的ID（id和targetId），API会检查这两个场景分类是否存在并且属于同一父级场景分类，然后交换它们的排序号。如果参数为空或场景不存在或不属于同一父级场景分类，则会抛出异常。
- 端点: sceneCourseswapOrder
- 方法: GET
- 请求参数:
  * id (Long): 第一个场景分类的ID
  * targetId (Long): 第二个场景分类的ID

#### API 56
- ID: 96be868e-f1c1-40e6-89e8-f9ef27fde90f
- 名称: CourseMappingController_refreshCategoryMapping
- 描述: 该API用于刷新专委会课程映射。它首先从数据库中获取所有状态为已发布或已移除的课程，然后对每个课程进行映射同步。
- 端点: /course-mapping/category/refresh
- 方法: POST

#### API 57
- ID: 79b145b2-3f0a-4094-b66d-575d40f122d6
- 名称: RenovationController_addRenovationOther
- 描述: 管理端-发布装修。该API用于处理装修项目的发布操作，支持两种模式：更新现有装修项目的状态或添加新的装修项目。在更新模式下，会停用之前的装修项目并发布当前项目；在添加模式下，会根据输入的配置信息创建新的装修项目，并进行相应的校验。
- 端点: /renovation/addRenovationOther
- 方法: POST

#### API 58
- ID: 1342e342-048d-44a6-bcf7-0996ff838545
- 名称: CourseCommentReplyController_argee
- 描述: 学员端-点赞/点踩。该API允许学员对课程评论进行点赞或点踩操作。首先，API会验证传入的type参数是否为1（点赞）或2（点踩）。接着，它会检查指定的评论是否存在以及当前用户是否已登录。如果用户之前没有对该评论进行过点赞或点踩，则插入一条新的记录；如果用户已经进行了操作，则根据当前type参数更新记录，实现点赞与点踩之间的切换。
- 端点: /courseCommentReply/argee
- 方法: GET
- 请求参数:
  * commentId (String): 评论的唯一标识符
  * type (Integer): 操作类型，1表示点赞，2表示点踩

#### API 59
- ID: 2b0e6028-735a-4a7f-b8b9-02f25e4fcafd
- 名称: CourseController_addCourseTemporarily
- 描述: 管理端暂存课程基本信息。该API接收一个CourseVo对象作为请求体，其中包含课程的各种属性信息。API会进行一系列的验证，包括讲师名称长度、讲师简介长度、所属目录和课程类别的有效性等。根据不同的条件，API会设置课程的创建角色、维度代码等信息，并最终保存或更新课程信息。
- 端点: /course/addCourseTemporarily
- 方法: POST

#### API 60
- ID: c11b9be2-8d3d-4109-984a-4e611ecd0d59
- 名称: CourseController_pageJobCourses
- 描述: 管理端-根据族群分页查询课程信息。该API接收一个JobCourseQueryVo对象作为请求体，其中包含分页信息和查询条件，然后调用courseService的pageJobCourses方法进行查询，并返回一个ResultVo<JobCourseVo>对象。
- 端点: /course/job/page
- 方法: POST

#### API 61
- ID: d77eccfc-b5a6-4dc0-9363-3d05fc2a4439
- 名称: CourseController_refresh
- 描述: 管理端-刷新课程映射。该API用于触发服务器端对课程映射数据的刷新操作，通常在课程数据发生变化后调用以确保客户端获取到最新的课程映射信息。
- 端点: /course/refresh
- 方法: GET

#### API 62
- ID: 6ee3ddf8-4bba-4dfc-b5bc-fdc6ac21abf8
- 名称: CourseCommentReplyController_delReplyComment
- 描述: 学员端-删除回复评论。该API根据传入的id和level参数删除相应的评论或回复。首先，根据level判断是删除回复还是评论，然后检查章节和课程是否存在，接着获取当前用户的角色信息，最后根据用户权限决定是否删除评论或回复。
- 端点: /courseCommentReply/delReplyComment
- 方法: GET
- 请求参数:
  * id (String): 评论或回复的唯一标识符
  * level (Integer): 标识删除的是评论还是回复，2表示删除回复，其他值表示删除评论

#### API 63
- ID: 2cf26445-1e42-44cc-ba99-f82d9fd39ed8
- 名称: CourseSectionLearnController_initLearn
- 描述: 初始化课程学习数据，主要用于处理外链课程的学习初始化。该API接收课程ID和可选的章节ID作为查询参数，调用sectionLearnService的initLearnByCourseId方法进行初始化操作，并返回一个ResultVo<Void>类型的响应。
- 端点: /learn/initCourseLearn
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定需要初始化学习数据的课程。
  * sectionId (Long): 章节ID，用于指定需要初始化学习数据的具体章节。如果未提供，则初始化整个课程的学习数据。

#### API 64
- ID: fd57d51a-25a8-4857-a28f-5e8ac1f4b14c
- 名称: OrganizationKanBanController_planningOverview
- 描述: 该API用于管理端获取组织看板的规划概览信息。客户端通过POST请求发送一个OrgBoardBaseRequest对象，服务器端处理后返回一个ResultVo<OrgBoardBusinessOverviewResponse>对象。
- 端点: /org/board/planningOverview
- 方法: POST

#### API 65
- ID: 6583400b-e610-4910-b32b-26edee207566
- 名称: TestAAAController_test
- 描述: 该API用于根据传入的课程列表信息，调整相关课程的学生动态分配情况。具体来说，它会根据课程ID查询当前的学生列表，并与根据预设规则计算出的新学生列表进行对比，从而决定需要添加或移除的学生。最后，更新数据库中的相关信息。
- 端点: /refresh-history/task/adjust
- 方法: POST

#### API 66
- ID: 6770e494-53b2-435f-b884-a9c251503738
- 名称: BannerController_queryBanner
- 描述: 管理端-查询banner图。该API通过获取当前用户的user-account信息，查询对应业务单元(buCode)的banner详情列表。如果用户不存在或buCode为空，则返回空列表。
- 端点: /banner/queryBanner
- 方法: GET

#### API 67
- ID: 7373199a-d53e-4af1-a450-e22837c2c229
- 名称: CourseCategoryController_addCourseCategory
- 描述: 管理端-新增课程分类。该API接收一个AddCourseCategoryVo对象作为请求体，用于添加新的课程分类。在添加过程中，会进行一系列的验证，包括父级目录是否存在、层级是否匹配、同一级别是否允许重名等。如果验证通过，会将新的课程分类保存到数据库，并更新相关联的课程信息。
- 端点: /course/category/add
- 方法: POST

#### API 68
- ID: 05953499-e26c-456a-b167-9e585f96b0da
- 名称: ThirdPartyController_eceibsStudyRecord
- 描述: 该API用于处理来自第三方系统的学习记录同步请求。客户端通过POST方法发送学习记录数据，服务器端接收后调用EceibsStudyRecordLogic组件进行处理，并返回处理结果。
- 端点: /eceibs/study/record
- 方法: POST

#### API 69
- ID: dcfb70e8-f687-43c4-91f0-5af319eb1c52
- 名称: CourseStudentStudyDurationController_getAdminTeamDurationByDay
- 描述: 管理端-团队每日学习时长接口。该接口根据传入的perCode参数获取指定团队在当前日期的学习时长。首先从Redis缓存中查找数据，如果存在则直接返回；如果不存在，则根据管理员权限类型（组织或类别）调用不同的服务获取学习时长，并将结果存入Redis缓存，有效期为1小时。
- 端点: /course/study/duration/adm-team-study
- 方法: GET
- 请求参数:
  * perCode (String): 权限代码，默认为空字符串

#### API 70
- ID: 319ed324-859e-4188-88e6-5d0231875db6
- 名称: CourseCommentReplyController_topThisComment
- 描述: 学员端-课程评价置顶。该API允许学员通过传入课程评价的ID来置顶或取消置顶该评价。首先，根据传入的ID查询对应的课程评价，如果评价不存在则抛出异常。接着，查询该评价所属的课程，如果课程不存在也抛出异常。然后，获取当前用户的角色信息，如果用户信息为空则抛出异常。最后，根据用户的权限判断是否可以置顶评价，如果可以，则更新评价的置顶状态。
- 端点: /courseCommentReply/topThisComment
- 方法: GET
- 请求参数:
  * id (String): 课程评价的唯一标识符

#### API 71
- ID: eac8cdcf-4c45-447e-b5cf-ca9d13068c1c
- 名称: CourseController_queryCourseStatistics
- 描述: 管理端-查询课程数据统计。该API根据传入的领域或者专委会编码查询课程统计数据，包括自建课程数量、自有版权课程数量、总课程数量等。对于特定角色（如警示教育管理员、子管理员、超级管理员），API会进一步细分统计维度。
- 端点: /course/queryCourseStatistics
- 方法: GET
- 请求参数:
  * perCode (String): 领域或者专委会编码，不能为空

#### API 72
- ID: f882a069-dba5-4bfb-b8b0-539f59548308
- 名称: CourseStudentCustomListController_deleteFile
- 描述: 管理端-删除附件。该API接收一个CourseStudentCustomListDto对象作为请求体，用于删除指定课程的附件文件。首先检查传入的courseId、importType和isDel字段是否为空，若为空则抛出异常。然后根据importType查询要删除的人员，并从文件服务器上删除相应的文件。接着更新数据库中的文件信息字段为null，并根据条件逻辑删除之前添加的所有数据。
- 端点: /course/courseStudentCustomList/deleteFile
- 方法: GET

#### API 73
- ID: 5b911b6b-85e1-45d2-bcca-c293b6f917c0
- 名称: CourseSearchHistoryController_insertHistorySearch
- 描述: 学员端-新增历史搜索记录。该API接收一个可选的关键字参数，并将其插入到历史搜索记录中。成功后返回一个ResultVo<Void>对象。
- 端点: /historySearch/insertHistorySearch
- 方法: GET
- 请求参数:
  * keyWord (String): 搜索关键字，用于记录学员的历史搜索行为。

#### API 74
- ID: 728da36c-c906-418d-8539-609e66de56e8
- 名称: CourseStudentCustomListController_updateUser
- 描述: 管理端-添加或者删除人员。该API接收一个CourseStudentCustomListDto对象，根据其中的importType字段决定是添加还是删除用户。如果importType为0或1，则删除指定account的用户；否则，根据categoryTopCode和categoryTopName字段进行必要的字符串分割处理后，插入或更新用户信息。
- 端点: /course/courseStudentCustomList/updateUser
- 方法: POST

#### API 75
- ID: 832547ac-ae18-471a-a543-d231f66b3059
- 名称: UserLearningDurationDataController_refreshDailyStudyDuration
- 描述: 管理端-刷新历史数据每日学习时长。该API通过GET请求触发，调用后端服务刷新每日学习时长的数据，并返回一个ResultVo对象表示操作结果。
- 端点: /learnDuration/queryLearningRate
- 方法: GET

#### API 76
- ID: 14368d18-fda2-4093-9542-8afaa23026f9
- 名称: CourseSectionController_editCourseSection
- 描述: 管理端-修改课程大纲节。该API接收一个包含课程章节信息的TreeVo列表，进行一系列校验和处理后，更新数据库中的课程章节信息。校验包括：课程大纲内容不能为空；得到课程章节不允许与其他课程同时配置在同一课程中；节的时长不能为空；文档的需要完成页数不能小于0；海尔内部网址检查等。处理逻辑包括：更新章节和节的状态；处理得到课程的映射关系；处理课程资源替换学分等。
- 端点: /course/section/editCourseSection
- 方法: POST

#### API 77
- ID: 45e93fab-dbec-4424-b5c3-770a9c64d2c8
- 名称: OrganizationKanBanController_userScoreOverview
- 描述: 该API用于管理端获取员工满意度概览。它接收一个OrgBoardBaseRequest类型的请求体，通过调用service.queryOrgOverview方法查询用户评分概览，并返回一个ResultVo<OrgBoardBaseResponse>类型的响应。
- 端点: /org/board/userScoreOverview
- 方法: POST

#### API 78
- ID: 3cbaf862-f5ed-4543-a203-14cbfa7685ef
- 名称: CourseStudentStudyDurationController_getAdminTeamWeekPlan
- 描述: 管理端获取团队每周的学习时长计划。该API首先从Redis缓存中查找是否存在对应日期和权限的学习时长数据，如果存在则直接返回；否则，根据管理员权限类型调用不同的服务获取学习时长数据，并将结果存入Redis缓存以供后续查询。
- 端点: /course/study/duration/adm-team-week
- 方法: GET
- 请求参数:
  * num (int): 获取的学习时长数据的天数，默认为7天
  * perCode (String): 权限编码，默认为空字符串

#### API 79
- ID: 8f230ced-73ad-40e0-947d-5d6d30cfa6fd
- 名称: VersionAnnouncementController_exportVersionAnno
- 描述: 该API用于管理端导出版本公告列表。首先，它会检查当前用户是否为管理员。然后，根据传入的HistoryVerPubRequest参数查询数据库中的版本公告数据，并将其转换为VersionAnnoListVo格式。最后，使用ExportUtil工具将这些数据填充到Excel模板中，并通过HttpServletResponse返回给客户端。
- 端点: /announcement/exportVersionAnno
- 方法: POST
- 请求参数:
  * request (HistoryVerPubRequest): 包含导出版本公告所需参数的请求体
  * response (HttpServletResponse): 用于返回导出的Excel文件的HTTP响应对象

#### API 80
- ID: b5fe7ccd-8802-49fc-93b0-08e4756cbdef
- 名称: CourseController_getByBusinessCode
- 描述: 通过业务编码获取课程信息。该API接收一个可选的业务编码参数，并返回与该业务编码相关的课程信息。如果未提供业务编码，则可能返回默认或所有课程的信息。
- 端点: /course/getByBusinessCode
- 方法: GET
- 请求参数:
  * businessCode (String): 课程的业务编码，用于查询特定课程的信息。如果未提供，则返回默认或所有课程的信息。

#### API 81
- ID: 882b224b-328f-4772-b855-b4751635f09a
- 名称: TrainPlanningController_queryTrainPlanning
- 描述: 学员端-查询我的学习计划（计划维度数据）。该API接收一个TrainPlanningVo对象作为请求体，用于筛选学习计划。根据传入的参数，查询用户的课程详情、考试信息，并计算每个学习计划的必修课程数、选修课程数、总课程数以及完成课程数。此外，还会判断每个学习计划是否过期。
- 端点: /planning/queryTrainPlanning
- 方法: POST

#### API 82
- ID: f0dded52-64c8-4d30-aed3-a586b1c789e3
- 名称: SceneCourseController_bindCourse
- 描述: 该API用于绑定场景课程主题及其关联的课程。首先检查传入的主题列表是否为空，然后校验课程是否有重复。接着删除旧的场景课程主题和课程记录，最后插入新的场景课程主题和课程记录。
- 端点: sceneCourse/bindCourse
- 方法: POST

#### API 83
- ID: 18db5652-2f59-4d96-bb33-44fe04c206a3
- 名称: TestAAAController_refreshUpdatePermission
- 描述: 该API用于刷新课程学生的更新权限。它会查询所有课程学生的信息，然后根据每个学生的更新代码或创建代码获取用户的角色信息。接着，根据角色的数据权限信息，更新课程学生的组织域代码和分类域代码。最后，批量更新这些信息到数据库。
- 端点: /refresh-history/refreshUpdatePermission
- 方法: GET

#### API 84
- ID: d04eed2d-def7-4b90-b7cd-a9e69de01913
- 名称: BannerController_updateBanner
- 描述: 管理端用于更新指定ID的banner图。该API接收一个可选的查询参数'id'，通过调用bannerService的updateBanner方法来更新banner图，并返回一个ResultVo<Void>类型的响应。
- 端点: /banner/updateBanner
- 方法: POST
- 请求参数:
  * id (String): 要更新的banner图的ID

#### API 85
- ID: 39fd44a7-9919-4ed6-a33d-3b3d8642d4b3
- 名称: CommitteeCommentController_checkCanComment
- 描述: 该API用于检查学员是否具有在特定委员会评论的权限。首先通过Access-Token获取当前用户的用户信息和角色信息，然后根据请求中的perCode字段判断用户是否属于相应的委员会。
- 端点: /committee/comment/checkCanComment
- 方法: POST

#### API 86
- ID: 1b541c4b-6e4c-4c5a-a31f-57c7c43f9554
- 名称: CourseController_updateIsLinks
- 描述: 管理端-更新指定课程是否是外链课。该API接收课程ID和是否是外链课的标志作为查询参数，通过调用courseService的updateIsLinks方法来更新数据库中的课程信息。如果课程不存在，则抛出异常。
- 端点: /course/updateIsLinks
- 方法: GET
- 请求参数:
  * courseId (String): 课程ID，用于指定要更新的课程
  * isLinks (Integer): 是否是外链课的标志，1表示是外链课，其他值表示不是外链课

#### API 87
- ID: 64257ffe-ae4f-46b8-8d5b-1209c5d8e0ff
- 名称: CourseController_getImportDesignatedInfo
- 描述: 该API用于获取指定课程学员可观看导入的信息。首先，根据传入的课程学员ID查找对应的课程学员记录，如果记录不存在则抛出异常。接着，检查是否存在已上传的人员信息，如果存在则进行物理删除。然后，从缓存中获取新的人员信息列表，并将其分批保存到数据库中。最后，更新课程学员记录的相关字段，包括文件名、文件URL、导入状态以及导入成功的数量和错误的数量。
- 端点: /course/getImportDesignatedInfo
- 方法: POST

#### API 88
- ID: e23817f8-ebf6-49f5-b461-e9345f39a6f7
- 名称: TrainPlanningStudyController_getMyPlanningData
- 描述: 学员端-返回我的学习数据。该API通过调用studyService.getMyPlanningData()方法获取当前学员的学习计划数据，并将其封装在ResultVo<MyPlanningResultVo>对象中返回。
- 端点: /planning/myPlanningData
- 方法: GET

#### API 89
- ID: f5a563c2-e836-4a3a-9603-40bb3f6e7b4b
- 名称: RenovationOrgBannerController_deactivated
- 描述: 停用指定ID的装修组织横幅。该API接收一个可选的查询参数renovationId，通过该ID获取对应的装修项目信息，并将其状态更新为停用状态（status=2）。同时，会从Redis缓存中删除与该装修项目相关的横幅信息。
- 端点: /renovation/org/deactivated
- 方法: GET
- 请求参数:
  * renovationId (Long): 装修项目的ID，用于指定要停用的横幅

#### API 90
- ID: 1d2779ea-3dc5-4abe-8750-8fc47500b54d
- 名称: AllowListController_addAllowlist
- 描述: 管理端-添加白名单。该API接收一个AllowListVo对象作为请求体，用于添加新的白名单条目。在添加之前，会验证当前登录用户是否有权限进行此操作，并检查提供的域名地址是否有效以及是否已存在于白名单中。
- 端点: /allowlist/add
- 方法: POST

#### API 91
- ID: a3c8baa6-adb1-497e-8c66-2b1272706149
- 名称: CommitteeKanBanController_exportUserStudyDurationDetailRank
- 描述: 管理端-查询用户学习时长明细排行接口。该接口接收一个UserStudyDurationDetailRankRequest对象作为请求体，用于指定查询条件。然后，它会调用committeeKanBanService.queryUserStudyDurationDetailRank方法来获取用户的学习时长明细排行数据，并通过EasyExcelUtils.exportExcel方法将数据导出为Excel文件。返回一个ResultVo<Void>对象表示操作成功。
- 端点: /committee/kanban/exportUserStudyDurationDetailRank
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): HTTP响应对象，用于导出Excel文件

#### API 92
- ID: 4ae04bc7-bca9-4355-a1e6-97d094954fb1
- 名称: CourseSectionLearnController_getCourseLearnRank
- 描述: 获取指定委员会和类型的课程累计学习人数排行榜。该API通过查询参数接收委员会代码和类型，并返回一个ResultVo对象，其中包含一个CourseStudyRankVo列表。
- 端点: /learn/getCourseLearnRank
- 方法: GET
- 请求参数:
  * committeeCode (String): 委员会代码，用于筛选特定委员会的学习排名。
  * type (String): 类型，用于筛选特定类型的学习排名。

#### API 93
- ID: 92ef0cd2-d6dd-4c83-a0a1-828a41a96178
- 名称: TrainPlanningStudyController_addPlanningStudy
- 描述: 学员端-添加学员学习规划记录。该API接收一个TrainPlanningStudyVo对象作为请求体，用于记录学员的学习规划信息。通过调用studyService.addPlanningStudy方法，将学习规划信息保存到数据库中，并返回一个ResultVo<Void>对象表示操作成功。
- 端点: /planning/addPlanningStudy
- 方法: POST

#### API 94
- ID: 8d8a8670-f509-4b0e-b83e-39bfbd8a5d5a
- 名称: TrainPlanningController_globalSearch
- 描述: 学员端-根据关键字模糊查询我的计划和课程。该API接收一个GlobalSearchVo对象作为请求体，其中包含搜索关键字、当前页码和每页大小等信息。API首先根据关键字查询用户的培训计划，然后根据用户的组织和类别信息过滤出用户有权访问的课程。最后，API将查询结果封装成PlanAndCourseVo对象并返回。
- 端点: /planning/globalSearch
- 方法: POST

#### API 95
- ID: f07352e0-c0d3-4cf8-9a71-bfa2f96477f3
- 名称: CourseController_queryCoursesForPlan
- 描述: 管理端-查询课程列表（规划创建）。该API接收CoursesVo类型的请求体，根据用户的权限码、角色和数据权限范围查询相应的课程详情，并返回ResultVo<IPage<CourseDetailVo>>类型的响应。
- 端点: /course/queryCoursesForPlan
- 方法: POST

#### API 96
- ID: 7dbfc303-0d56-4109-829c-72f9714cd37c
- 名称: TranscodeController_transcode
- 描述: 该API用于处理视频转码请求。当接收到POST请求时，会调用transcodeService的transcode方法来执行转码操作。转码完成后，API返回204 No Content状态码。
- 端点: /transcode/transcode
- 方法: POST

#### API 97
- ID: 296bf054-7658-40b9-800a-5d46ffdd2b18
- 名称: CourseCategoryController_getCourseCategoryFullName
- 描述: 管理端-查询分类全名称。该API通过给定的分类ID获取课程分类的全名称。如果ID大于0，则查询数据库获取该ID对应的分类全名称；否则，返回根分类名称。
- 端点: /course/category/full-name/{id}
- 方法: GET
- 请求参数:
  * id (Long): 课程分类的ID。如果ID大于0，则查询该ID对应的分类全名称；否则，返回根分类名称。

#### API 98
- ID: ba37283c-8694-4885-9645-1555bbbf3af9
- 名称: CourseCategoryController_getCourseCategoryRootTree
- 描述: 管理端-查询目录树。该API根据传入的参数获取课程分类的根节点树结构，支持过滤已禁用的分类、指定课程数量以及是否需要包含草稿箱。
- 端点: /course/category/decoration/tree
- 方法: GET
- 请求参数:
  * courseNum (Integer): 是否需要课程数量，默认为1
  * disabled (Integer): 是否包含已禁用的分类，默认为0
  * perCode (String): 领域或者专委会编码，不能为空
  * isNeedDrafts (Integer): 是否需要包含草稿箱，默认为0

#### API 99
- ID: 1fc5874e-a437-46b2-aa9b-8062e78fa841
- 名称: RenovationZoneController_getRenovation
- 描述: 学员端-专区首页根据code查询。该API接收一个可选的查询参数'code'，用于查询特定专区的信息。如果查询到专区信息，则返回RenovationMasterVO对象；否则返回一个空的RenovationMasterVO对象。
- 端点: /zone/getRenovation
- 方法: GET
- 请求参数:
  * code (String): 专委会编码，用于查询特定专区的信息。该参数不能为空。

#### API 100
- ID: 25a943b7-ef32-4606-8c0e-1f19cdcaa7fa
- 名称: RecentStudyController_queryRecentLearnList
- 描述: 学员端-查询最近学习。该API接收一个RecentStudyVo对象作为请求体，用于查询指定学员的最近学习记录。查询结果以分页形式返回，每页大小和当前页由请求体中的current和size字段指定。查询范围仅限于queryField字段为1的情况。
- 端点: /learn/queryRecentLearnList
- 方法: POST

#### API 101
- ID: d9de8afa-2f56-482a-ba18-9d687bfc3785
- 名称: CourseCommentReplyController_queryComments
- 描述: 学员端-查询该课程所有评价。该API首先获取当前用户的角色信息，然后根据用户信息构建查询条件。如果用户是超级管理员，则设置特定的查询标志。最后，调用数据库访问层查询评论。
- 端点: /courseCommentReply/queryComments
- 方法: GET

#### API 102
- ID: 279b7bfd-28c5-43c0-87e3-785cd86a9302
- 名称: CourseCategoryController_getCatalogList
- 描述: 管理端-查询课程分类。该API允许通过查询参数获取课程分类目录列表，支持过滤条件包括课程数量、禁用状态以及领域或专委会编码。如果课程数量参数设置为1，则会统计每个分类下的课程总数，并将其显示在分类名称后。如果禁用状态参数设置为1，则会禁用某些专委会的非专业进阶课程目录。
- 端点: /course/category/catalog
- 方法: GET
- 请求参数:
  * courseNum (Integer): 是否需要统计课程数量，默认为1（需要统计）
  * disabled (Integer): 是否禁用某些专委会的非专业进阶课程目录，默认为1（禁用）
  * perCode (String): 领域或者专委会编码，不能为空

#### API 103
- ID: f11665da-5674-44c3-86bc-0e55202a8670
- 名称: CourseChapterController_editCourseChapter
- 描述: 管理端-修改课程大纲章。该API接收一个CourseChapteVo对象作为请求体，用于更新课程章节的信息。首先，API会对传入的CourseChapteVo对象进行校验，然后将其转换为CourseChapterPo对象，最后通过courseChapterService的editCourseChapter方法更新数据库中的课程章节信息。
- 端点: /course/chapter/editCourseChapter
- 方法: POST

#### API 104
- ID: 33e3e78b-2a41-4588-b6a0-63003b577950
- 名称: RenovationReportController_exportGetRenovationList
- 描述: 管理端-导出专委会报表根据族群查询专业专区数据。该API接收一个族群编码作为路径参数，并通过HttpServletResponse对象返回一个Excel格式的报表文件。如果查询结果为空，则不会生成文件。
- 端点: /renovation/report/exportGetRenovationList/{code}
- 方法: GET
- 请求参数:
  * response (HttpServletResponse): 用于输出Excel文件的HttpServletResponse对象。
  * code (String): 族群编码，用于查询对应的专业专区数据。

#### API 105
- ID: ff19f1e3-35ca-43ed-a828-73248b761862
- 名称: CourseController_queryHotCourses
- 描述: 学员端-查询热点课程。该API会查询所有未删除且对全员可见的课程，并按点赞量排序，返回前5个热门课程的信息。
- 端点: /course/queryHotCourses
- 方法: GET

#### API 106
- ID: 3160279e-3843-48cb-99f0-d2159b4fdb3c
- 名称: RenovationController_getRenovationByCode
- 描述: 管理端-根据code查询装修。该API首先获取最高权限选项，然后根据权限选项查询不同状态的装修信息（包括停用、发布、草稿）。根据查询结果的不同状态组合，决定返回的具体装修信息，并设置二维码URL。如果所有状态的装修信息都为空，则返回初始查询结果。
- 端点: /renovation/getRenovationByCode
- 方法: GET
- 请求参数:
  * code (String): 装修项目的唯一标识符

#### API 107
- ID: 549903ae-46c6-4b3e-9117-d11bb721aad1
- 名称: OrganizationKanBanController_courseStudyDetail
- 描述: 该API用于获取组织看板中课程的学习明细，包括每个课程的学习排名等详细信息。客户端通过POST请求发送OrgBoardCourseRequest类型的请求体，服务器端处理后返回ResultVo<IPage<OrgBoardCourseStudyRankResponse>>类型的响应。
- 端点: /org/board/courseStudyDetail
- 方法: POST

#### API 108
- ID: fa72d935-3b9a-4f81-8d75-5c517a3edd19
- 名称: StudentCollectionController_queryOnlineClassList
- 描述: 学员端-查询在线课堂列表。该API接收一个OnlineClassVo对象作为请求体，用于筛选在线课堂列表。通过调用studentCollectionService.queryMyOnlineClassList方法，获取符合条件的在线课堂列表，并以ResultVo<OnlineClassDetailsVo>的形式返回。
- 端点: /course/studentCollection/queryOnlineClassList
- 方法: POST

#### API 109
- ID: 49819a58-32a0-4ccb-be1e-acabf5c9b534
- 名称: CourseStudentStudyController_exportStudyDetails
- 描述: 管理端-课程学员学习详情导出。该API接收一个包含课程学习详情的请求体，并通过HttpServletResponse将导出的数据返回给客户端。
- 端点: /courseStudentStudy/export
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于输出导出数据的HTTP响应对象。

#### API 110
- ID: 7933db2e-7c48-4c3d-be79-392920585f8a
- 名称: CourseSearchHistoryController_queryHistorySearch
- 描述: 学员端-查询历史搜索记录。该API用于获取当前学员的历史搜索记录，返回一个包含搜索关键词列表的成功响应。
- 端点: /historySearch/queryHistorySearch
- 方法: GET

#### API 111
- ID: 2d5db767-1532-4536-95db-d93bcee56231
- 名称: SceneCourseController_deleteScene
- 描述: 该API用于删除指定ID的场景课程。在删除之前，会进行一系列的验证，包括检查ID是否为空、场景是否存在以及场景类型是否为普通类型。如果场景有子场景，也会一并删除。
- 端点: sceneCoursedeleteScene
- 方法: GET
- 请求参数:
  * id (Long): 要删除的场景课程的唯一标识符

#### API 112
- ID: d9197528-5c8c-480d-97d8-72d92fab18d0
- 名称: TrainPlanningStudyController_isPlanningStudy
- 描述: 学员端-判断指定胜任力计划是否有学员正在学习。该API接收一个可选的查询参数planningId，通过调用studyService.isPlanningStudy方法来判断是否存在学习该计划的学员，并返回一个ResultVo<Boolean>对象。
- 端点: /planning/isPlanningStudy
- 方法: GET
- 请求参数:
  * planningId (Long): 指定的胜任力计划ID。如果未提供，则默认查询所有计划的学习情况。

#### API 113
- ID: 1c50e84e-bd06-4d45-a6f5-92be15404e6e
- 名称: VersionAnnouncementController_queryHistoryAnno
- 描述: 该API用于管理端查询历史公告。通过传入HistoryVerPubRequest类型的请求体，API会根据请求中的分页信息和发布类型筛选公告，并返回分页后的VersionAnnoDetailVo列表。
- 端点: /announcement/queryHistoryAnno
- 方法: POST

#### API 114
- ID: b0b99130-245f-4786-a536-5830f35383c5
- 名称: CourseStudentCustomListController_isLook
- 描述: 管理端-通过课程ID查询用户是否有权限观看课程。该API会根据用户的权限类型、课程的可见性类型以及用户与课程的关系来判断用户是否有权限观看课程。
- 端点: /course/courseStudentCustomList/isLook
- 方法: GET
- 请求参数:
  * id (Long): 课程ID
  * isAdmin (Integer): 是否管理员标志，0表示不是管理员，1表示是管理员

#### API 115
- ID: f6e18f48-5237-4590-8f37-75470e97fb1d
- 名称: CourseStudentCustomListController_getUserByImportType
- 描述: 该API用于根据导入类型获取用户列表。它接收一个CommonBusinessInfoVo对象作为请求体，通过调用courseStudentCustomListService的getUserByImportType方法来获取用户账号集合，并将其封装在ResultVo<Object>中返回。
- 端点: /course/courseStudentCustomList/getUserByImportType
- 方法: POST

#### API 116
- ID: 6bf64b06-4b6a-4758-ad72-28ba3338c1a6
- 名称: UserLearningDurationDataController_learningRateSave
- 描述: 该API用于保存用户的学习率数据。它接受两个可选的查询参数：param和code。param是一个JSON字符串，包含startDate和endDate字段，用于指定需要刷新学习率数据的时间段；code用于标识特定的学习项目或课程。如果param为空，则默认刷新前一天的数据。
- 端点: /learnDuration/learningRateSave
- 方法: GET
- 请求参数:
  * param (String): 包含startDate和endDate字段的JSON字符串，用于指定需要刷新学习率数据的时间段
  * code (String): 标识特定的学习项目或课程的代码

#### API 117
- ID: 6d5b6445-6f39-4900-b54e-e3f2766a7d3c
- 名称: OrganizationKanBanController_dimensionTree
- 描述: 该API用于获取组织看板的数据权限树。它通过调用服务层的方法来获取数据权限树，并将其封装在ResultVo<List<OrgBoardDimensionResponse>>对象中返回给客户端。
- 端点: /org/board/dimensionTree
- 方法: POST

#### API 118
- ID: 740cdc44-3e35-446e-ae2a-74a60f098dd7
- 名称: ThirdPartyController_batchSaveXimalayaCourseStudyRecords
- 描述: 批量保存喜马拉雅课程学习记录。该API接收POST请求，调用syncService的batchSaveXimalayaCourseStudyRecords方法来处理批量保存操作，并返回一个ResultVo<Boolean>对象表示操作是否成功。
- 端点: /third/batchSaveXimalayaCourseStudyRecords
- 方法: POST

#### API 119
- ID: ee146ecf-0034-4afa-b637-60ab1f4cf3b6
- 名称: StudentCollectionController_queryLectureRoomCategory
- 描述: 学员端-查询百家讲堂分类。该API通过用户的账号信息，查询用户有权限访问的百家讲堂分类及其子分类（平台）。首先，从请求头中获取用户账号，然后根据预设的百家讲堂领域编码查询用户可见的课程ID列表。接着，通过这些课程ID列表查询对应的课程信息，并进一步筛选出用户有权限访问的课程分类。最后，将这些分类信息封装成树形结构返回。
- 端点: /course/studentCollection/queryLectureRoomCategory
- 方法: GET

#### API 120
- ID: e51bb279-90d7-4edb-84de-b888224e217e
- 名称: PublicCourseRegisterController_goSignUpPublicCourse
- 描述: 学员端-报名线下公开课。该API允许学员通过提供课程ID来报名参加指定的线下公开课。首先，API会获取当前登录学员的信息，如果获取失败则抛出异常。然后，它会创建一个PublicCourseRegisterPo对象，设置相关属性，并保存到数据库。
- 端点: /publiccourse/goSignUpPublicCourse
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定要报名的线下公开课。

#### API 121
- ID: 0db6db75-b87d-4f3c-9f42-5df31ec94e41
- 名称: MsgRecordController_revoke
- 描述: 该API用于撤销指定的消息记录。客户端通过提供消息ID来调用此接口，服务器端接收到请求后，会调用recordService的revokeFeiShuMsg方法来处理撤销操作，并返回一个成功的响应。
- 端点: /msg/revoke
- 方法: GET
- 请求参数:
  * msgId (Long): 消息记录的唯一标识符，用于指定需要撤销的消息。

#### API 122
- ID: d298e563-f105-4620-b5e9-788322c3efbf
- 名称: ThirdPartyController_syncFullRecord
- 描述: 该API用于同步完整的课程学习记录。客户端通过POST请求发送一个包含完整学习记录参数的对象，服务器端接收后调用syncService的syncFull方法进行同步操作，并返回一个ResultVo<Boolean>对象表示操作是否成功。
- 端点: /thirdsync/full/record
- 方法: POST

#### API 123
- ID: e6295071-b20b-424e-b777-9d5dc69eef54
- 名称: CourseSectionLearnController_queryMyCommentList
- 描述: 学员端-查询我的感悟。该API允许学员通过课程ID查询他们对该课程的评论列表。如果查询成功，返回ResultVo<CourseCommentDetailVo>对象；如果发生异常，返回错误信息。
- 端点: /learn/queryMyCommentList
- 方法: GET
- 请求参数:
  * courseId (String): 课程ID，用于指定需要查询评论的课程。如果未提供，则可能查询所有课程的评论。

#### API 124
- ID: 78920f3a-4c18-4ae3-8808-b77b69e3044f
- 名称: SceneCourseController_updateSceneCategory
- 描述: 更新场景分类信息。该API接收一个场景分类列表，每个分类必须包含有效的场景ID和排序号。如果任一分类缺少场景ID或排序号，则抛出异常。更新操作会批量处理所有分类。
- 端点: /sceneCourse/updateSceneCategory
- 方法: POST

#### API 125
- ID: b8f56626-ce5e-4913-a936-734572eafb57
- 名称: RenovationZoneController_getByOrgCode
- 描述: 学员端-根据编码查询专区信息。该API接收一个组织编码作为查询参数，通过调用renovationModuleService.getByOrgCode方法获取专区信息。如果找到专区，则返回专区的赞助者、名称和联系人；如果没有找到专区，则根据组织编码获取类别名称，并将其设置为专区的名称和赞助者。
- 端点: /zone/code
- 方法: GET
- 请求参数:
  * code (String): 专委会编码，不能为空

#### API 126
- ID: 690a56db-2938-45d9-9605-eb86826164a7
- 名称: CourseStudentCustomListController_getUserPage
- 描述: 管理端-学员条件查询。该API接收一个CourseStudentCustomListDto对象作为请求体，用于根据特定条件查询学员信息，并返回分页结果。查询条件包括组织编码、分类顶级编码、年龄追踪、用户角色、订单值、入职海尔日期等。根据不同的条件组合，API会调用不同的数据库查询方法。
- 端点: /course/courseStudentCustomList/getUserPage
- 方法: POST

#### API 127
- ID: 252111b8-2715-41c3-bd1a-54e7dc4d113d
- 名称: CourseStudentController_getShareFields
- 描述: 管理端-查看课程共享范围。该API通过课程ID获取课程的共享范围信息，并根据共享类型的不同，返回相应的共享范围描述。
- 端点: /course/student/getShareFields/{id}
- 方法: GET
- 请求参数:
  * id (Long): 课程ID，用于指定要查询的课程。

#### API 128
- ID: 828856bb-972d-4ae8-9803-7fe595471cec
- 名称: RenovationZoneController_listZoneModules
- 描述: 该API用于根据专委会编码获取相应的课程模块列表。首先通过专委会编码查找对应的RenovationPo对象，然后根据RenovationPo对象的ID查找相关的RenovationModulePo列表。接着，根据模块类型和关联的RenovationTopicPo列表进一步处理每个模块，生成ZoneModuleVo对象，并根据用户的可见性过滤课程ID。最终返回用户可见的ZoneModuleVo列表。
- 端点: /zone/modules
- 方法: GET
- 请求参数:
  * code (String): 专委会编码，不能为空

#### API 129
- ID: 5e661ea8-c900-46e3-8aa4-fdd07c9732e8
- 名称: CourseController_filterByViewPermissions
- 描述: 该API用于根据用户的查看权限过滤课程列表。它接收一个包含员工编号和课程ID列表的请求体，并返回用户有权限查看的课程ID列表。
- 端点: /course/filterByViewPermissions
- 方法: POST

#### API 130
- ID: ef309a65-324b-409a-9dee-b203cad3a2bb
- 名称: CourseController_queryLikesAndFavorites
- 描述: 学员端-查询指定课程的点赞数和收藏数。该API接收一个可选的courseId参数，通过courseService查询对应的课程信息，并返回一个ResultVo<CourseLikesVo>对象，其中包含课程的点赞数和收藏数。
- 端点: /course/queryLikesAndFavorites
- 方法: GET
- 请求参数:
  * courseId (String): 课程ID，用于查询特定课程的点赞数和收藏数。如果未提供，则可能默认查询所有课程的信息。

#### API 131
- ID: ef947ff7-ac22-4f37-a7d2-7d4ee6707789
- 名称: ExportController_exportEvaluateList
- 描述: 管理端-导出课程评分列表。该API接收一个CourseCommentVo对象作为请求体，根据其中的筛选条件查询课程评分列表，并将其导出为Excel文件。如果请求体中包含account或organizeCode，则先查询组织人员信息；否则，先查询课程评分列表再查询组织人员信息。最后，通过ExportUtil.fillExcel方法将数据填充到指定的Excel模板中并返回给客户端。
- 端点: /courseEvaluateList/export
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于导出Excel文件的HTTP响应对象

#### API 132
- ID: f1e6926c-0625-46f9-9cad-c75420be4ab6
- 名称: CourseSectionLearnController_queryCourseLearn
- 描述: 学员端-查询课程节学习信息。该API接收一个CourseSectionLearnVo对象作为请求体，查询指定课程节的学习详情。如果课程的来源类型为2，则会进一步获取文章内容文本并设置到响应对象中。
- 端点: /learn/queryCourseLearn
- 方法: POST

#### API 133
- ID: 05ca0760-1671-4464-b3b6-f4c19e269441
- 名称: TrainPlanningController_queryPlanningCountsIntegrityClassroom
- 描述: 学员端-查询廉政课堂数量。该API通过POST请求获取当前用户的廉政课堂数量统计信息，包括已完成、正在学习和未学习的数量。
- 端点: /planning/queryPlanningCountsIntegrityClassroom
- 方法: POST

#### API 134
- ID: 07c5587a-edbf-439c-96fb-9af15a2eeb58
- 名称: VersionAnnouncementController_queryAnnoFlagDetail
- 描述: 学员端-判断登录用户是否已经查看最新的公告，并展示公告详情。该API首先通过Access-Token获取当前登录用户的员工编号(empSn)，然后查询最新发布的公告版本，接着检查该用户是否已经看过该公告版本。如果用户未看过，则设置showFlag为true，并返回公告详情；否则，showFlag为false。
- 端点: /announcement/queryAnnoFlagDetail
- 方法: GET
- 请求参数:
  * publishType (Integer): 公告的发布类型，用于筛选特定类型的公告

#### API 135
- ID: fd8bc63d-ad61-4ea4-b476-b2c376c1ce2b
- 名称: OrganizationKanBanController_learningDurationDistribution
- 描述: 该API用于获取组织看板上的人均学习时长分布数据，主要用于展示在二级页面的折线图中。它接收一个OrgBoardBaseRequest类型的请求体，通过调用service.queryDistribution方法查询相关数据，并返回一个ResultVo<IPage<OrgBoardBaseResponse>>类型的响应。
- 端点: /org/board/learningDurationDistribution
- 方法: POST

#### API 136
- ID: 8229baa8-aedc-4ec2-91dd-294272722d32
- 名称: UserLearningDurationDataController_refreshCourseRatingData
- 描述: 该API用于刷新用户的课程满意度数据。它接收一个包含用户评分信息的请求体，并调用相关服务来更新课程、规划和专委会的满意度数据。
- 端点: /learnDuration/refresh-ratingData
- 方法: POST

#### API 137
- ID: aa2aea87-5499-4de3-8c45-e43a38890596
- 名称: RenovationController_getDynamicByModule
- 描述: 该API用于根据模块查询翻新动态详情。客户端通过POST请求发送RenovationPageQueryRequest类型的请求体，服务器端解析请求体后，调用renovationService的getRenovationListByModule方法获取指定模块下的翻新动态列表，并以分页形式返回ResultVo<IPage<WarningFilmDynamicResponse>>。
- 端点: /renovation/getDynamicByModule
- 方法: POST

#### API 138
- ID: e1714527-7e52-4035-9cf8-bcaa8a36aa96
- 名称: UserLearnReportController_queryDimension
- 描述: 该API用于根据用户的角色权限查询学习报告的维度信息。支持查询组织维度和专委会维度。对于组织维度，超管和集团培训管理员可以查询所有组织；对于专委会维度，超管可以查询所有专委会，并且可以根据请求参数决定是否平铺返回的数据。
- 端点: /report/user/dimensionQuery
- 方法: POST

#### API 139
- ID: 41ee0be9-c3c5-439a-bef5-54b8a0b7a8e4
- 名称: UserLearnReportController_courseLearnDetailExport
- 描述: 该API用于导出用户的课程学习明细报告。客户端通过POST请求发送一个CourseLearnReportRequest对象，服务器端根据请求参数进行分页查询，然后使用EasyExcel工具将查询结果以Excel文件的形式输出到HttpServletResponse。
- 端点: /report/user/courseLearnDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于输出Excel文件的HTTP响应对象

#### API 140
- ID: 4e68dc48-3962-4ab9-ba15-2de2560fb281
- 名称: RenovationController_addRenovationOne
- 描述: 管理端-新增/编辑方式一装修。该API接收一个RenovationWayOneVO对象，用于新增或编辑装修方式一的信息。根据传入的参数，API会进行一系列的数据校验和处理，包括检查装修ID是否存在、删除旧数据、插入新数据、处理模块信息以及特定模块类型的特殊逻辑（如banner、topic、dynamic）。最终返回新增或编辑的装修ID。
- 端点: /renovation
- 方法: POST

#### API 141
- ID: e3136e18-812e-4500-9076-266c9a877605
- 名称: CourseMappingController_refreshCategoryOrder
- 描述: 管理端-刷新组织初始化目录顺序。该API会查询所有维度类型为组织且层级为1的课程分类，根据预设的初始顺序号对这些分类进行排序，并更新它们的顺序号。如果分类名为'其他'，则将其顺序号设置为999。
- 端点: /course-mapping/category/order/refresh
- 方法: POST

#### API 142
- ID: bd79850a-dc88-4234-9847-7944e0ecf0e4
- 名称: OrganizationKanBanController_learnningRateRank
- 描述: 管理端-首页-学习率排行。该API接收一个OrgBoardBaseRequest类型的请求体，根据组织级别(orgLevel)的不同，返回不同的学习率排行结果。如果组织级别为'3'，则返回空列表；否则，调用service层的learnningRateRank方法获取排行结果。
- 端点: /org/board/learnningRateRank
- 方法: POST

#### API 143
- ID: 524b7cf0-0844-4a5a-b761-67e28129b192
- 名称: ExportController_export
- 描述: 管理端-导出课程列表。该API接收一个包含导出条件的请求体，并通过HttpServletResponse返回一个Excel文件。首先，根据请求体中的条件获取课程详情列表，然后使用EasyExcel库填充模板并生成Excel文件。
- 端点: /courseList/export
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于返回Excel文件的HTTP响应对象。

#### API 144
- ID: 6a48012c-76f2-4bf9-a477-f171a6676946
- 名称: WarningEducationController_visitDynamic
- 描述: 该API用于记录用户访问特定类型的动态详情。当用户访问动态时，系统会检查动态类型是否有效，并记录用户的访问历史。如果该动态类型不在预设的有效类型范围内，则不会进行任何操作。
- 端点: /warningEducation/visitDynamic
- 方法: GET
- 请求参数:
  * dynamicType (String): 动态类型，可选值包括'homepage_dynamics', 'homepage_rules', 'homepage_notice'
  * dynamicId (Long): 动态的唯一标识符

#### API 145
- ID: 8db82950-511c-446a-ba9f-9bdeca95b5eb
- 名称: CourseCategoryController_lockCategories
- 描述: 管理端-批量锁定课程分类。该API接收一个包含课程分类ID列表的请求体，首先检查是否存在不存在的分类，然后筛选出未被锁定的分类，并将它们的状态更新为锁定状态。
- 端点: /course/category/locks
- 方法: POST

#### API 146
- ID: 2cee4ee9-e140-433b-b2d3-1054422f955d
- 名称: SceneCourseController_querySceneDetail
- 描述: 该API用于查询指定场景的详细信息，包括场景的基本信息和场景下的专题列表。每个专题会显示其课程数量，且课程数量会根据当前用户的权限进行过滤。
- 端点: /sceneCourse/querySceneDetail
- 方法: GET
- 请求参数:
  * id (Long): 场景ID，用于指定要查询的场景

#### API 147
- ID: 69892a4a-008d-434c-9f29-43df084e1a1c
- 名称: WarningEducationController_queryLatestNotice
- 描述: 学员端-查询最新通知。该API通过调用warningEducationService的latestNotice方法，获取警示教育专委会下的最新通知信息。首先，根据zoneCode查询对应的RenovationPo对象；然后，构建需要查询的通知类型列表；接着，查询这些通知类型的最小模块ID；最后，根据这些模块ID查询最新的通知动态。
- 端点: /warningEducation/latestNotice
- 方法: GET

#### API 148
- ID: d7c2e3ab-a5f7-49eb-ace5-ec6cf9ab27e3
- 名称: CourseCategoryController_initDomainCategory
- 描述: 管理端-初始化领域课程目录。该API接收一个包含领域代码和分类代码的请求体，用于创建新的课程分类。首先检查领域代码列表是否为空，如果不为空，则为每个领域代码调用initCategory方法。接着检查分类代码列表是否非空，如果不为空，则根据分类代码创建新的课程分类，并将其保存到数据库中。
- 端点: /course/category/domain
- 方法: POST

#### API 149
- ID: 32375a69-5956-491d-8f77-5f3389f4c9c4
- 名称: CourseCategoryController_editCourseCategory
- 描述: 管理端-修改课程分类。该API接收一个EditCourseCategoryVo对象作为请求体，用于更新指定ID的课程分类信息。在更新之前，会进行一系列验证，包括检查目录是否存在、课程目录权限是否正确以及同一级别的目录名称是否重复。
- 端点: /course/category/edit
- 方法: POST

#### API 150
- ID: 56668b0f-4d52-4e51-955a-01ff4f923bf5
- 名称: CourseCategoryController_getPlanCourseCategoryTree
- 描述: 管理端-查询规划目录树。该API根据传入的disabled状态和perCode（领域或者专委会编码）参数，获取相应的课程分类树结构。当perCode等于特定值时，调用getCategoryCatalogList方法；否则，调用getCourseCategoryRootTree方法。
- 端点: /course/category/plan-tree
- 方法: GET
- 请求参数:
  * disabled (Integer): 表示是否禁用的标志，默认值为0（不禁用）。
  * perCode (String): 领域或者专委会编码，不能为空。

#### API 151
- ID: 1bb02425-ee51-4172-9968-bcfad3eebe49
- 名称: CourseCategoryController_get2Category
- 描述: 学员端-查询二级分类。该API允许通过domainCode查询特定领域的二级课程分类。如果未提供domainCode，则从当前用户的权限信息中获取。如果用户没有关联的领域信息，则抛出异常。返回的结果是一个ResultVo对象，其中包含一个CourseCategoryVo对象的列表。
- 端点: /course/category/get2Category
- 方法: GET
- 请求参数:
  * domainCode (String): 领域代码，用于指定查询哪个领域的二级分类。如果不提供，则从当前用户的权限信息中获取。

#### API 152
- ID: 7b36aea7-610a-4ef0-8197-249ad469499e
- 名称: CourseStudentCustomListController_getUserListByStudentId
- 描述: 管理端-根据学员管理ID查询学员列表。该API接收一个包含学员管理ID、分页信息的请求体，通过学员管理ID查询对应的学员信息，并进一步查询关联的课程信息。如果学员管理ID或课程ID不存在，则抛出异常。最后，根据分页信息返回学员列表。
- 端点: /course/courseStudentCustomList/getUserListByStudentId
- 方法: POST

#### API 153
- ID: 8dbc487e-ebde-4454-9beb-b81fe1d854db
- 名称: RenovationZoneController_pagePreviewZoneModuleCourse
- 描述: 学员端-专区模块课程查询。该API接收一个包含模块ID、当前页码和每页大小的请求体，根据模块的内容类型（按课程或按分类）查询相应的在线课程详情，并返回分页结果。
- 端点: /zone/preview/course
- 方法: POST

#### API 154
- ID: f9157caa-1ea0-40b5-89c5-baf53e449399
- 名称: SceneCourseController_queryCourse
- 描述: 该API用于根据查询参数获取课程信息。查询参数可以是课程名称或课程代码的一部分。API会返回符合条件的最多10条课程记录。
- 端点: sceneCoursequeryCourse
- 方法: GET
- 请求参数:
  * param (String): 查询参数，可以是课程名称或课程代码的一部分。

#### API 155
- ID: 93b0fd3c-0a90-4676-9975-774794f2dc93
- 名称: CommitteeKanBanController_queryLearningRateTrend
- 描述: 管理端-查询学习率趋势。该API接收一个包含查询条件的请求体，根据不同的查询类型（累计、近半年、近一年、昨日、近7天、近30天）返回相应时间段的学习率趋势数据。
- 端点: /committee/kanban/queryLearningRateTrend
- 方法: POST

#### API 156
- ID: 1b401070-141f-45de-9c7b-a6c6eeb4a236
- 名称: CommitteeKanBanController_queryUserStudyDurationDetailRank
- 描述: 管理端-查询用户学习时长明细排行接口。该接口接收一个包含查询条件的请求体，返回指定专委会下用户的详细学习时长排行信息。查询条件包括当前页码、每页大小、专委会代码、排序类型和排序字段。如果专委会下没有配置课程或请求体中的排序字段无效，则返回空的分页结果。查询结果中的学习时长以秒为单位，返回时会被转换为小时:分钟:秒的格式。
- 端点: /committee/kanban/queryUserStudyDurationDetailRank
- 方法: POST

#### API 157
- ID: dc4b2c6d-21bb-46ec-852b-9ad05826cb92
- 名称: CourseSectionController_addCourseSection
- 描述: 管理端-新增课程大纲节。该API接收一个CourseSectionVo对象作为请求体，用于添加新的课程章节或节。根据传入的courseChapterId和id字段的不同组合，API会决定如何处理新章节或节的保存。如果courseChapterId和id都为空，则会创建一个新的章节；如果只有id不为空，则会更新已存在的章节；如果courseChapterId为空但id不为空，则会使用已存在章节的courseChapterId来创建新的节。
- 端点: /course/section
- 方法: POST

#### API 158
- ID: 574f7c52-9663-433f-a726-993b557cac61
- 名称: MsgRecordController_queryMsgReadUser
- 描述: 该API用于查询已读消息的用户信息。当客户端发送GET请求到/msg/queryMsgReadUser路径时，服务器会调用recordService的queryMsgReadUser方法来处理查询逻辑，并返回一个ResultVo<Void>类型的响应表示操作成功。
- 端点: /msg/queryMsgReadUser
- 方法: GET

#### API 159
- ID: c2bd6895-7c8c-4360-bcbc-66694057c5d1
- 名称: UserLearnReportController_planningLearnDetailPage
- 描述: 该API用于获取用户的学习计划详细页面信息，包括总任务数、必修任务数、已完成必修任务数以及学习进度百分比。
- 端点: /report/userplanningLearnDetailPage
- 方法: POST

#### API 160
- ID: b06a37db-ed24-472f-bbbb-adb791907309
- 名称: SceneCourseController_queryCourseList
- 描述: 该API用于根据传入的SceneCourseListVo参数查询特定场景下的课程列表，并返回分页后的OnlineClassDetailsVo对象列表。查询过程中会检查用户账号、主题ID和场景ID的有效性，然后根据用户的权限过滤课程ID，查询课程详情，并对结果进行分页和聚合。
- 端点: /sceneCourse/queryCourseList
- 方法: POST

#### API 161
- ID: 9194c0a6-0ada-45ca-a31b-f3bcef4fb20d
- 名称: CommitteeKanBanController_queryLearnRateDistribution
- 描述: 管理端-查询学习率分布。该API接收一个包含查询条件的请求体，通过调用委员会看板服务查询学习率分布数据，并对返回的数据进行处理，包括将学习率百分比转换为浮点数。
- 端点: /committee/kanban/queryLearnRateDistribution
- 方法: POST

#### API 162
- ID: a27d56bf-8723-4de9-bdca-257de33a3a0c
- 名称: MsgRecordController_sendFeiShuInteractive
- 描述: 该API用于处理来自/msg路径的GET请求，根据传入的id参数决定调用respondService的sendFeiShuInteractive方法还是test方法。如果id等于'1'，则调用sendFeiShuInteractive方法发送飞书互动消息；否则调用test方法。最终返回一个ResultVo<Void>类型的响应。
- 端点: /msg
- 方法: GET
- 请求参数:
  * id (String): 用于决定调用哪个方法的参数，如果id为'1'则调用sendFeiShuInteractive方法，否则调用test方法

#### API 163
- ID: 71dfe049-dde1-429d-b032-30bc65497150
- 名称: RenovationController_stopDecoration
- 描述: 管理端停用装修功能。该API接收一个可选的查询参数'code'，用于指定需要停用装修的项目。首先，通过'code'获取最高权限选项，然后根据权限选项获取相关的装修结果列表。如果存在相关装修结果，则更新这些结果的状态为停用。接着，更新数据库中与'code'和权限类型匹配的记录，并清除相关的装修模块缓存。最后，返回停用装修成功的消息。
- 端点: /renovation/stopDecoration
- 方法: GET
- 请求参数:
  * code (String): 指定需要停用装修的项目编码

#### API 164
- ID: 36f6fa5f-5a62-4b0a-aa61-71865578910c
- 名称: CourseQrcodeSignController_signDetailPage
- 描述: 该API用于处理二维码签到详情页面的POST请求。客户端通过传递CourseSignDetailRequest对象来查询特定课程的签到详情，并返回ResultVo<IPage<CourseSignDetailResponse>>对象。
- 端点: /qrcode/signDetailPage
- 方法: POST

#### API 165
- ID: 08a155df-988f-4a72-b955-ac9ddf55601c
- 名称: VersionAnnouncementController_delAnnoInfo
- 描述: 管理端-删除公告接口。该接口用于删除指定ID的公告，但不允许删除最新发布的公告。删除操作会更新公告的状态、更新时间和更新人信息。
- 端点: /announcement/delAnnoInfo
- 方法: GET
- 请求参数:
  * annoId (Long): 公告ID，用于指定要删除的公告

#### API 166
- ID: 1fd9daf4-9fa2-49e7-9ce8-89a8e48c6102
- 名称: CommitmentLetterController_getByUser
- 描述: 管理端-查询当前登录用户是否已签署承诺书。该API首先获取当前用户的账号信息，然后查询数据库中该用户是否有一条已同意的承诺书记录。如果有，则返回该记录；如果没有，则返回一条表示用户未签署承诺书的记录。
- 端点: /commitment/letter
- 方法: GET

#### API 167
- ID: 65eb360a-fafc-4118-baf1-dd9c41962ee4
- 名称: RenovationZoneController_getZoneHome
- 描述: 学员端-专区首页信息查询。该API根据传入的专委会编码(code)和设备来源(source)，查询并返回专区首页的相关信息，包括模块、横幅、话题和学习动态等。如果source为空，则默认返回所有模块的信息；否则，根据source过滤横幅信息，并进一步根据用户的可见性权限过滤课程。
- 端点: /zone/home
- 方法: GET
- 请求参数:
  * code (String): 专委会编码，不能为空
  * source (String): 设备来源，默认为空

#### API 168
- ID: 72243df4-4019-40c2-a73c-1f3fdb7566f7
- 名称: CommitteeKanBanController_userAvgLearnDurationDistribution
- 描述: 管理端-人均学习时长分布页面查询。该API接收一个包含查询条件的请求体，根据请求中的组织编码、查询类型等信息，查询当前登录用户的数据权限下的组织信息，并计算昨天的人均学习时长分布。
- 端点: /committee/kanban/userAvgLearnDurationDistribution
- 方法: POST

#### API 169
- ID: 340ff170-3c6c-4566-b6f6-5f502787aaf6
- 名称: CourseController_officeCourses
- 描述: 管理端-批量下架课程。该API接收一个包含课程ID列表的请求体，首先检查课程ID是否为空，然后查询这些课程的状态是否为已发布。接着，检查这些课程是否被任何学习地图引用。如果有被引用的课程，则返回错误信息；否则，更新这些课程及其映射的状态为已移除，并返回成功的响应。
- 端点: /course/offlineCourses
- 方法: POST

#### API 170
- ID: 57f01b9d-579a-43c9-8296-ba4b53ffe281
- 名称: CommitteeCommentController_addCommitteeComment
- 描述: 学员端-添加专委会评价。该API接收一个CommitteeCommentVo对象作为请求体，用于保存学员对专委会的评价。首先，会检查评论分数的有效性；然后，通过当前用户的Access-Token获取用户信息和角色信息；接着，根据传入的perCode字段解析维度类型和维度代码，并检查用户是否有权限评论；最后，将评论信息插入数据库。
- 端点: /committee/comment/saveCommitteeComment
- 方法: POST

#### API 171
- ID: d410e603-10cf-43d6-8998-4f02f8e7af4f
- 名称: CourseController_getRoleId
- 描述: 管理端-通过课程ID查询角色ID。该API接收一个课程ID作为路径参数，调用courseService的getRoleId方法获取对应的roleID，并将其封装在ResultVo<String>对象中返回。
- 端点: /course/getRoleId/{id}
- 方法: GET
- 请求参数:
  * id (Long): 课程ID，用于查询对应的角色ID。

#### API 172
- ID: 0b353cdd-4be3-4c3d-9085-c8702fb89d16
- 名称: CourseSectionController_editSectionName
- 描述: 管理端-修改课程节名称。该API接收一个包含课程节信息的请求体，将其转换为持久化对象后更新数据库中的课程节名称。
- 端点: /course/section/editSectionName
- 方法: POST

#### API 173
- ID: fadb571e-36b4-4767-bcfc-6bd8e9e394e9
- 名称: AllowListController_deleteAllowlist
- 描述: 管理端-删除白名单。该API接收一个白名单ID作为路径参数，并调用allowListService的deleteAllowlist方法来删除指定的白名单记录。成功删除后，返回一个ResultVo<String>类型的响应，其中包含成功的消息。
- 端点: /allowlist/delete/{id}
- 方法: DELETE
- 请求参数:
  * id (Long): 白名单记录的唯一标识符

#### API 174
- ID: 5f496881-e927-43e8-ae14-bd3f4e960db2
- 名称: CourseChapterController_getCourseChapter
- 描述: 学员端-根据课程id查询课程大纲章。该API会根据传入的courseId查询课程的大纲章，并根据editFlag参数对某些字段进行特殊处理。如果课程的来源类型为2，则会对每个章节的子节点设置taskType为5（如果editFlag不为空），并且查询对应的DedaoMediaRequest信息。
- 端点: /course/chapter/getCourseChapter
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于查询特定课程的大纲章。
  * editFlag (String): 编辑标志，用于决定是否对某些字段进行特殊处理。

#### API 175
- ID: 84562d75-5938-4d2d-a5fe-57c285973e67
- 名称: UserLearnReportController_planningLearnDetailExport
- 描述: 该API用于导出用户的学习计划详细报告。它接收一个包含查询条件的请求体，并通过调用服务获取相应的学习计划数据。然后，它将这些数据整合并导出为Excel文件。
- 端点: /report/user/planningLearnDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流的对象，用于导出Excel文件。

#### API 176
- ID: 24087611-8ad9-4c66-b124-44450b317b54
- 名称: CourseCategoryController_getCategoryRole
- 描述: 管理端和学员端查询当前登录人的管理员级别。该API接收一个UserLevelVO对象作为请求体，其中包含用户的权限代码(perCode)，然后通过调用adminDataPermissionService的getHighestPermissionOption方法获取最高权限选项，并从中提取角色级别(roleLevel)作为响应。
- 端点: /course/category/role-level
- 方法: POST

#### API 177
- ID: 2c0ba3ef-b80d-4610-9561-6337e3823a6e
- 名称: RenovationZoneController_listZonePreviewModules
- 描述: 该API用于获取指定ID的装修区域模块预览信息。首先，通过传入的ID查找对应的装修区域记录。如果找到装修区域记录，则进一步查找与该装修区域关联的特定类型的模块（如TOPIC类型）。接着，获取这些模块关联的话题ID列表，并过滤出那些话题ID存在于话题列表中的模块。最后，将这些模块转换为ZoneModuleVo对象列表并返回。
- 端点: /zone/modules/preview
- 方法: GET
- 请求参数:
  * id (Long): 装修区域的唯一标识符

#### API 178
- ID: 8f2cc163-a570-4fc2-8fbd-c46d9d989628
- 名称: OrganizationKanBanController_courseBoard
- 描述: 该API用于处理课程整体满意度的三级页面请求。客户端发送一个包含课程满意度信息的请求体，服务器端接收后调用相关服务进行处理，并返回一个包含满意度评论信息的结果。
- 端点: /org/board/courseBoard
- 方法: POST

#### API 179
- ID: 42cb774d-97fb-4f4e-951a-5067bccba9ee
- 名称: UserLearningDurationDataController_job
- 描述: 该API用于处理课程学习时长的数据，接收一个包含学习时长信息的请求体，并将其转换为JSON字符串后传递给服务层进行进一步处理。最终返回一个表示成功的响应。
- 端点: /learnDuration/job
- 方法: POST

#### API 180
- ID: 7ad669be-f2b7-42b1-9298-1c1d45773ca9
- 名称: UserLearnReportController_examLearnDetailPage
- 描述: 该API用于获取用户的考试学习详情分页报告。客户端通过POST请求发送一个包含分页信息和查询条件的ExamLearnReportRequest对象，服务器端根据请求参数查询数据库，返回一个包含分页信息的ResultVo<IPage<ExamLearnReportResponse>>对象。
- 端点: /report/user/examLearnDetailPage
- 方法: POST

#### API 181
- ID: 3d6dd997-3523-462d-b141-480925cb4e54
- 名称: CourseStudentStudyDurationController_refreshDuration
- 描述: 管理端-刷新用户每日学习时长。该API会调用courseStudentStudyDurationService的refreshStudyDuration方法来更新用户的每日学习时长。
- 端点: /course/study/duration/refresh-duration
- 方法: GET

#### API 182
- ID: 5ad90d8a-1fcf-4ba3-81a7-cefaedca4b8f
- 名称: CourseSearchHistoryController_delHistorySearch
- 描述: 学员端-清空历史搜索记录。该API用于删除当前登录学员的历史搜索记录，调用historyService.delHistorySearch()方法来完成操作，并返回一个ResultVo<Void>类型的响应。
- 端点: /historySearch/delHistorySearch
- 方法: GET

#### API 183
- ID: 89424a01-0f43-46af-a70a-2253b253a062
- 名称: CourseCategoryController_getCourseCategoryRootTree
- 描述: 管理端-查询目录树。该API根据传入的参数获取课程分类的根目录树，支持过滤已禁用的分类、指定领域或专委会编码以及是否需要包含草稿箱中的课程。
- 端点: /course/category/tree
- 方法: GET
- 请求参数:
  * courseNum (Integer): 是否需要课程数量，默认为1（需要）
  * disabled (Integer): 是否包含已禁用的分类，默认为0（不包含）
  * perCode (String): 领域或者专委会编码，不能为空
  * isNeedDrafts (Integer): 是否需要包含草稿箱中的课程，默认为0（不需要）

#### API 184
- ID: 4924edd1-899e-45d4-adf8-5783c3dedea4
- 名称: BannerController_saveBanner
- 描述: 管理端-保存banner图。该API接收原始URL和banner名称作为查询参数，通过webSessionUtils获取当前登录员工的信息，并通过adminDataPermissionService获取最高权限选项。根据权限角色设置banner的创建标志，并插入数据库。
- 端点: /banner/saveBanner
- 方法: GET
- 请求参数:
  * originalUrl (String): Banner图的原始URL
  * bannerName (String): Banner图的名称

#### API 185
- ID: d452d1c3-6db0-48b7-85f8-7137f53412e0
- 名称: TestAAAController_refreshCourseSourceType
- 描述: 该API用于刷新指定课程ID的课程来源类型。根据课程的状态和节的链接类型，更新课程的来源类型为内部或外部。
- 端点: /refresh-history/refreshCourseSourceType
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，如果为空则刷新所有已发布的、未映射的课程

#### API 186
- ID: 2c355758-7e1b-4520-a743-902bea34955f
- 名称: CourseCategoryController_editCategoryPosition
- 描述: 管理端-移动分类位置。该API接收一个CategoryPositionVo对象，用于指定需要移动的课程分类及其新的顺序号。首先，根据传入的分类ID获取对应的课程分类实体，如果分类不存在则抛出异常。接着，检查该分类的维度编码，如果为空则抛出异常。然后，根据父分类ID和维度编码获取同一父分类下的所有课程分类，并将当前分类插入到指定的顺序号位置。最后，更新所有受影响的课程分类的顺序号，并同步映射目录顺序。
- 端点: /course/category/move
- 方法: POST

#### API 187
- ID: 4440ceb2-2c57-44e0-bbc8-cbd1143765df
- 名称: SceneCourseController_getSceneTopList
- 描述: 获取场景课程的顶级分类列表。该API通过调用sceneCategoryService的getSceneTopList方法，从数据库中查询出所有未删除、父ID为0且场景类型为NORMAL的场景分类，并按照sortNo字段升序排列。
- 端点: /sceneCourse/getSceneTopList
- 方法: GET

#### API 188
- ID: 3f50d68a-3984-460c-8015-6136f0bc6b25
- 名称: VersionAnnouncementController_versionAnnoClick
- 描述: 学员端点击公告接口，用于记录学员点击特定公告的行为。该接口首先通过Access-Token获取当前登录学员的信息，然后检查该学员是否已经点击过该公告。如果没有点击过，则记录点击行为；如果已经点击过，则更新公告的发布版本。
- 端点: /announcement/click
- 方法: GET
- 请求参数:
  * versionAnnoId (String): 公告的唯一标识符

#### API 189
- ID: 7c5e5728-d898-427c-91b5-f16edff3c7b3
- 名称: RenovationReportController_getReportEvaluationList
- 描述: 管理端-查询专业专区课程学员评价数据。该API接收一个RenvationCourseEvaluationVo对象作为请求体，根据其中的学习适应性评分和响应速度评分筛选学员评价数据，并返回分页后的ReportStudentEvaluationVo对象列表。
- 端点: /renovation/report/getReportEvaluationList
- 方法: POST

#### API 190
- ID: 2c0d1aae-528f-4d28-80fd-f6bc0a2faca4
- 名称: CourseSectionLearnController_getLearnByUser
- 描述: 学员端-根据课程id和用户名查询学习详情。该API接收课程ID和用户名作为查询参数，调用sectionLearnService.getLearnByUser方法获取学习详情，并以ResultVo<UserSectionLearnDetailVo>的形式返回。
- 端点: /learn/getLearnByUser
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID
  * account (String): 用户名

#### API 191
- ID: bee097e2-673d-4c01-b411-ece405e9a08a
- 名称: MsgRecordController_getMsg
- 描述: 该API用于根据给定的消息记录ID获取消息记录详情。如果未提供ID，则可能返回默认或所有消息记录。API调用了recordService.getMsg方法来获取消息记录，并将结果封装在ResultVo<MsgRecordResponse>对象中返回。
- 端点: /msg/getMsg
- 方法: GET
- 请求参数:
  * id (Long): 消息记录的唯一标识符。如果未提供，则返回默认或所有消息记录。

#### API 192
- ID: b1bae6fe-8560-43e0-8195-f09c9daee505
- 名称: OrganizationKanBanController_courseCommentDetailExport
- 描述: 该API用于导出课程满意度详情。客户端通过POST请求发送OrgBoardThirdRequest类型的请求体，服务器端处理后将课程满意度详情以Excel文件的形式通过HttpServletResponse返回给客户端。
- 端点: /org/board/courseCommentDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流，以便导出Excel文件。

#### API 193
- ID: c5e953b0-d10c-4941-983f-797831cc909d
- 名称: RenovationOrgBannerController_delete
- 描述: 该API用于删除指定ID的装修组织横幅信息。当接收到GET请求时，会调用renovationOrgBannerService的delete方法，通过ID删除对应的横幅记录，并返回一个ResultVo<Void>类型的成功响应。
- 端点: /renovation/org/delete
- 方法: GET
- 请求参数:
  * id (Long): 要删除的横幅记录的唯一标识符。

#### API 194
- ID: 810a298e-fc5c-401e-bb5c-4d0065bfd675
- 名称: CourseController_addPageView
- 描述: 该API用于管理端和学员端增加课程的浏览量。当接收到GET请求时，会根据传入的courseId参数更新对应课程的浏览次数，并返回一个成功的响应。
- 端点: /course/addPageView
- 方法: GET
- 请求参数:
  * courseId (String): 课程ID，用于指定需要增加浏览量的课程。

#### API 195
- ID: 0479e002-59e0-4ab3-a3f0-e04c9b1211c2
- 名称: CourseQrcodeSignController_generateQRCodeByCourseId
- 描述: 该API用于根据课程ID生成二维码，并将二维码图片URL封装在ResultVo<String>对象中返回。二维码中包含课程ID、当前时间戳以及发起请求的用户账号。
- 端点: /qrcode/generateQRCodeByCourseId
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于生成二维码
  * response (HttpServletResponse): HTTP响应对象，用于可能的输出流操作

#### API 196
- ID: d226ba8c-9529-43dc-830f-de95443e324e
- 名称: CommitteeCommentController_getLatestCommitteeComment
- 描述: 学员端-根据用户信息查询最新一条评价。该API首先通过Access-Token获取当前用户的工号，然后根据传入的专委会编码查询该用户在指定专委会下的最新一条未删除的评价。
- 端点: /committee/comment/getLatestCommitteeComment
- 方法: POST

#### API 197
- ID: d776e6a6-bd62-484d-a871-9a6262105bab
- 名称: MsgRecordController_importUser
- 描述: 该API用于处理用户信息的文件上传和导入操作。客户端通过POST请求发送一个包含用户信息的文件，服务器端接收文件后调用recordService的importUser方法进行处理，并返回一个包含处理结果的ResultVo<UserFileResponse>对象。
- 端点: /msg/importUser
- 方法: POST
- 请求参数:
  * file (MultipartFile): 包含用户信息的文件，必需参数

#### API 198
- ID: 7f76a5e9-17da-430c-907a-1c8239639d7d
- 名称: CourseSectionLearnController_exportCourseLearnDetail
- 描述: 该API用于导出课程学习详情。客户端通过POST请求发送一个CourseLearnDetailRequest对象，服务器端根据请求参数查询课程学习详情，并使用EasyExcel工具将结果以Excel文件的形式输出到HttpServletResponse中。
- 端点: /learn/exportCourseLearnDetail
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于输出Excel文件的HTTP响应对象

#### API 199
- ID: 4d39318d-bf34-416c-9279-16c667f993fa
- 名称: RenovationBannerController_checkHaierWeb
- 描述: 管理端API，用于校验给定的URL是否属于海尔内部网站。该API接收一个URL字符串和一个整数类型的type参数，通过解析URL并查询数据库来确定该URL是否在允许列表中。
- 端点: /renovation/banner/checkHaierWeb
- 方法: GET
- 请求参数:
  * url (String): 需要校验的URL地址。
  * type (Integer): 校验类型，默认值为2。

#### API 200
- ID: ed8f32db-940e-44d2-814b-098de576c0a8
- 名称: CourseSectionLearnController_evaluateCourse
- 描述: 学员端-课程评分。该API允许学员对已完成的课程进行评分。请求体中需要包含评分的相关信息，如课程ID、评分分数等。成功评分后，返回成功的ResultVo对象；若评分过程中发生异常，则返回失败的ResultVo对象。
- 端点: /learn/evaluateCourse
- 方法: POST

#### API 201
- ID: b893b8c1-92ca-4147-b93b-c333ad55eca3
- 名称: RenovationZoneController_listZones
- 描述: 学员端-专区列表信息查询。该API接收一个可选的查询参数'source'，默认值为'RenovationConstants.MOBILE'。它首先尝试从Redis缓存中获取专区列表信息，如果缓存存在且有效，则直接返回缓存的数据；否则，从数据库中查询发布状态的专区信息，并根据特定条件过滤专区列表。接着，它将查询到的专区信息转换为ZoneVo对象列表，并对这些对象进行排序。最后，将结果存储到Redis缓存中，并返回给客户端。
- 端点: /zone/list
- 方法: GET
- 请求参数:
  * source (String): 指定专区信息的来源，默认为'RenovationConstants.MOBILE'

#### API 202
- ID: 65169cde-7106-447f-95f2-796724ef8122
- 名称: OrganizationKanBanController_courseStudyDetailExport
- 描述: 该API用于导出组织看板中的课程累计学习明细。客户端通过POST请求发送OrgBoardCourseRequest类型的请求体，服务器端处理后将结果以Excel文件的形式通过HttpServletResponse返回给客户端。
- 端点: /org/board/courseStudyDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流，以便导出Excel文件。

#### API 203
- ID: 51a9c079-9e7e-4c3e-85ec-f05439f5f842
- 名称: CourseController_getCourse
- 描述: 学员端-通过ID查询课程详情。该API首先根据传入的课程ID查询课程信息，如果课程不存在则抛出异常。如果课程存在映射ID，则使用映射ID重新查询课程信息。然后将查询到的课程信息转换为CourseDetailVo对象，并进一步处理课程的创建人信息、链接URL、封面、附件、范围、内容名称和分类名称。最后计算并设置课程的评分。
- 端点: /course/{id}
- 方法: GET
- 请求参数:
  * id (Long): 课程ID

#### API 204
- ID: a3ff73b8-73b4-44ff-9cde-a582777cd672
- 名称: CourseStudentController_importUserOne
- 描述: 管理端-导入学员。该API接收一个Excel文件和一个课程ID，解析Excel文件中的学员信息，并根据当前用户的权限信息将符合条件的学员信息导入到指定课程中。如果学员信息不符合条件或存在错误，会在Excel文件中标记错误信息并上传回服务器。
- 端点: /course/student/importUserOne
- 方法: POST
- 请求参数:
  * file (MultipartFile): 上传的Excel文件，包含学员信息
  * courseId (Long): 课程ID，用于指定导入学员的目标课程

#### API 205
- ID: b5d44e14-fa68-4e83-9f4e-51a005b0bb7a
- 名称: OrganizationKanBanController_learnDurationOverview
- 描述: 管理端-学习时长概览：该API用于获取组织看板的学习时长概览信息。客户端通过POST请求发送OrgBoardBaseRequest类型的请求体，服务器端解析请求后调用service.queryOrgOverview方法查询学习时长概览数据，并将结果封装在ResultVo<OrgBoardBaseResponse>对象中返回。
- 端点: /org/board/learnDurationOverview
- 方法: POST

#### API 206
- ID: 0c5786ac-04e4-45a6-ad32-d9e683ce56b3
- 名称: RenovationZoneController_getZoneHomeRenovationId
- 描述: 学员端-预览查询接口，用于获取指定装修ID的首页预览信息。根据不同的设备来源（如移动设备或PC），返回相应的模块信息、横幅信息、话题信息和学习动态信息。
- 端点: /zone/home/renovationId
- 方法: GET
- 请求参数:
  * renovationId (Long): 装修ID，用于查询特定装修的首页预览信息
  * source (String): 设备来源，默认为 'MOBILE'，可以是 'MOBILE' 或 'PC'

#### API 207
- ID: d2c07c0a-a096-4bf3-8e21-d869493ffd81
- 名称: CourseController_publishCourses
- 描述: 管理端批量发布课程。该API接收一个包含课程ID列表的请求体，检查这些课程是否可以发布（包括课程目录、章节和学员范围是否配置完成），然后更新课程状态为已发布，并记录当前登录用户的共享信息。
- 端点: /course/publishCourses
- 方法: POST

#### API 208
- ID: f1bf30f4-5649-4ca7-9ae1-2c8aa500463a
- 名称: RenovationOrgBannerController_list
- 描述: 该API用于获取指定领域的装修banner列表。首先，它会检查传入的请求参数是否为空或缺少必要的domainCode字段。接着，根据domainCode查询对应的装修信息（RenovationPo），如果查询结果为空，则返回null。然后，查询与该装修信息关联的装修方式一（RenovationWayOnePo），并将其中的title字段设置到响应对象中。最后，查询与该装修信息关联的所有banner（RenovationBannerPo），根据imageType字段将banner分为mb和pc两类，并将相关信息封装到RenovationResponse对象中，分别设置到响应对象的renovationMbList和renovationPcList字段中。
- 端点: /renovation/org/list
- 方法: POST

#### API 209
- ID: 8faf1892-310d-4bb9-815e-90f7648a41ed
- 名称: WarningEducationController_queryWarningFilmm
- 描述: 学员端-各个模块课程查询。该API接收一个ArticleRequestCourseVo类型的请求体，用于查询警示教育专委会下的课程或动态信息。根据请求体中的queryType字段，查询不同的模块内容，并支持关键词搜索和分页。
- 端点: /warningEducation/queryWarningFilm/new
- 方法: POST

#### API 210
- ID: ebcf7ede-2a08-4dc0-94dc-60b49ba8cee5
- 名称: CourseChapterController_addCourseChapter
- 描述: 管理端-新增课程大纲章。该API接收一个CourseChapteVo对象作为请求体，用于添加新的课程章节。如果请求体中的id字段不为空且对应的章节已存在，则先删除旧章节再添加新章节。最终返回一个ResultVo<String>对象，其中包含新添加章节的id。
- 端点: /course/chapter
- 方法: POST

#### API 211
- ID: 0257cf55-7f68-4823-9d70-0932d9d33d83
- 名称: OrganizationKanBanController_userLearningDetailExport
- 描述: 该API用于导出组织看板中用户的累计学习时长明细。它接收一个OrgBoardDetailRequest类型的请求体，并通过EasyExcel工具将查询到的学习时长明细数据写入到HttpServletResponse中，以Excel文件的形式返回给客户端。
- 端点: /org/board/userLearningDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于输出Excel文件的HTTP响应对象

#### API 212
- ID: f6b925d1-bdd9-49f2-8e38-aa54509f76a9
- 名称: CommitteeKanBanController_queryCumulativeLearningRateRanking
- 描述: 管理端-查询累计学习率排行榜。该API接收一个包含委员会代码、查询类型和员工类型的请求体，通过解析委员会代码获取最高权限选项，然后根据这些信息查询累计学习率排行榜。
- 端点: /committee/kanban/queryCumulativeLearningRateRanking
- 方法: POST

#### API 213
- ID: fcb1fd9e-3417-4687-b4bc-d3fd28dc5343
- 名称: OrganizationKanBanController_learnDurationTrend
- 描述: 该API用于管理端获取组织的学习时长趋势数据。它接收一个OrgBoardBaseRequest类型的请求体，通过调用service.queryOrgTrend方法查询学习时长趋势数据，并返回一个ResultVo<PageInfo<OrgBoardBaseResponse>>类型的响应。
- 端点: /org/board/learnDurationTrend
- 方法: POST

#### API 214
- ID: d97b6aef-fef1-4599-857b-4d907a5a7ef9
- 名称: CommitteeController_queryCommittees
- 描述: 管理端-查询专委会及其相关课程信息。该API会从数据库中获取所有专委会的详细信息，并进一步查询每个专委会下的课程数量。如果课程数量为0，则设置hasCourse字段为0；否则设置为1。
- 端点: /committee/queryCommittees
- 方法: GET

#### API 215
- ID: c505cde5-06bc-469c-990f-67ac3605a534
- 名称: CourseSectionLearnController_queryCourseReply
- 描述: 学员端-查询课程评价。该API接收一个CourseCommentReplyRequest类型的请求体，用于获取指定课程的评论回复列表。API会调用sectionLearnService的queryCommentReplyList方法来处理请求，并返回一个ResultVo<IPage<CourseCommentReplyPageResponse>>类型的响应体。
- 端点: /learn/queryCourseReply
- 方法: POST

#### API 216
- ID: 3e78935c-1ed1-4990-962c-c340987ca12a
- 名称: TestAAAController_statisticLearningSceneByCommittee
- 描述: 该API用于统计各个委员会的学习场景、响应速度、培训满意度、课程质量评分、目标人才覆盖率、促学体验以及培训计划完成率。它首先从数据库中获取已发布且未删除的改造代码，然后通过这些代码查询相关的培训计划和员工信息，最后计算并返回每个委员会的各项统计数据。
- 端点: /refresh-history/statisticLearningSceneByCommittee
- 方法: GET

#### API 217
- ID: e3a07978-f7bc-4246-b8ca-059ead048530
- 名称: CommitteeKanBanController_queryLearningRate
- 描述: 管理端-查询学习率。该API接收一个包含委员会代码、查询类型和员工类型的请求体，根据查询类型的不同，返回昨日或累计的学习率数据。
- 端点: /committee/kanban/queryLearningRate
- 方法: POST

#### API 218
- ID: 24bcfac4-fbd3-40a2-86fa-2e7885dec5c5
- 名称: CourseController_moveCourses
- 描述: 管理端-课程移动（课程管理）。该API用于将指定的课程从一个目录移动到另一个目录。在移动之前，会检查用户是否有移动课程的权限，课程是否处于草稿状态，以及目标目录是否为末级目录。根据权限码的不同，API会将课程划分为本领域/专委会的课程和非本领域/专委会的课程，并分别进行处理。
- 端点: /course/moveCourses
- 方法: POST

#### API 219
- ID: 957b413f-99a8-4b6c-8f95-8f6abaf9efbf
- 名称: StudentCollectionController_queryCollection
- 描述: 学员端-查询是否收藏。该API接收一个可选的id参数，用于查询特定课程是否被当前登录的学员收藏。通过调用studentCollectionService.queryCollection方法，获取收藏状态，并封装在ResultVo<String>对象中返回。
- 端点: /course/studentCollection/queryCollection
- 方法: GET
- 请求参数:
  * id (Long): 课程ID，用于查询特定课程是否被收藏。如果未提供，则默认查询所有收藏的课程。

#### API 220
- ID: 10199aa0-fa14-467d-a605-dd8c99f1b285
- 名称: AllowListController_getList
- 描述: 管理端-分页查询白名单列表。该API接收一个AllowListVo对象作为请求体，其中包含分页信息和其他查询条件。通过调用allowListService的getList方法，获取符合条件的白名单列表，并将其封装在ResultVo<AllowListPageVo>对象中返回。
- 端点: /allowlist/list
- 方法: POST

#### API 221
- ID: 83ff6dfb-11cb-4375-9be0-7432be78c1c1
- 名称: CourseSectionController_getCourseSection
- 描述: 管理端-根据课程节id查询课程节。该API接收一个课程节ID作为查询参数，通过调用courseSectionService的getCourseSection方法获取对应的CourseSectionPo对象，然后将其转换为CourseSectionVo对象并封装在ResultVo中返回。
- 端点: /course/section/getCourseSection
- 方法: GET
- 请求参数:
  * id (Long): 课程节ID，用于查询特定的课程节信息。

#### API 222
- ID: 7be6c93c-dc3d-4869-b161-5e3ebce0f258
- 名称: OrganizationKanBanController_learnningDurationRank
- 描述: 管理端首页接口，用于获取组织内成员的累计学习时长排行榜。该接口接收一个OrgBoardBaseRequest类型的请求体，其中可能包含筛选条件或排序规则等信息，并返回一个ResultVo<List<OrgLearningDurationResponse>>类型的响应体。
- 端点: /org/board/learnningDurationRank
- 方法: POST

#### API 223
- ID: 5e70cecf-1e70-49ba-a7d3-63205e6c000b
- 名称: CourseStudentApi_get
- 描述: 该API用于同步额外课程记录中的学生信息。首先刷新序列号，然后从同步中间表中查询学习数据，如果存在数据，则更新课程资源和学习状态。
- 端点: /openApites/tes
- 方法: GET

#### API 224
- ID: 1cce7674-f454-46b7-be51-730cf8affcdf
- 名称: RenovationReportController_getReportCourseList
- 描述: 管理端-查询专业专区课程数据。该API接收一个包含课程ID列表的请求体，并根据这些ID查询相关的课程详情。查询结果会根据维度类型（category或org）进行分类，并补充相应的维度名称。
- 端点: /renovation/report/getReportCourseList
- 方法: POST

#### API 225
- ID: 5f668a79-76c3-4cc3-ab66-1e12ca8602d6
- 名称: OrganizationKanBanController_courseScoreExport
- 描述: 该API用于导出组织看板中的课程满意度评分数据。客户端通过POST请求发送OrgBoardCourseRequest类型的请求体，服务器端处理后将课程满意度评分数据以Excel文件的形式通过HttpServletResponse返回给客户端。
- 端点: /org/board/courseScoreExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流的对象，以便导出Excel文件。

#### API 226
- ID: b6c7ea97-7523-4646-9d0c-a75ef3631bb2
- 名称: CourseController_queryOnboardingCourse
- 描述: 该API用于查询新员工地图课程。客户端通过POST请求发送包含课程ID列表和账户信息的请求体，服务器端接收请求后，调用trainPlanningService的queryOnboardingCourse方法，根据传入的参数查询相关的课程信息，并以ResultVo<List<OnboardingPlanningCourseVo>>的形式返回。
- 端点: /course/queryOnboardingCourse
- 方法: POST

#### API 227
- ID: 0cd72485-991f-4d00-88ee-fc14bbec2b68
- 名称: CourseSectionLearnController_flushStudyStatus
- 描述: 该API用于刷新指定课程的学习状态。当接收到GET请求时，会调用sectionLearnService.flushStudyStatus方法来更新与courseId相关的学习进度信息，并返回一个表示成功的ResultVo<Void>对象。
- 端点: /learn/flushStudyStatus
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定需要刷新学习状态的课程。

#### API 228
- ID: a91c21db-912c-4fbe-bef8-894a5ab8f922
- 名称: CourseStudentCustomListController_removeUserExternalMode
- 描述: 该API用于从课程学生自定义列表中移除外部模式的用户。首先，根据传入的业务ID查找对应的课程学生信息。如果找不到，则返回失败信息。接着，根据导入类型筛选出需要删除或更新的用户列表。然后，分批删除仅外部导入的用户，并恢复那些之前被标记为外部导入但现在需要保留的用户。最后，分批删除那些既内部又外部导入的用户。
- 端点: /course/courseStudentCustomList/removeUserExternalMode
- 方法: POST

#### API 229
- ID: 26816a86-9299-4e33-92db-979ab28e77c7
- 名称: CourseSectionLearnController_queryCourseLearnDetail
- 描述: 该API用于查询课程学习详情。客户端通过POST请求发送一个CourseLearnDetailRequest对象，服务器端接收后调用sectionLearnService.queryCourseLearnDetail方法获取课程学习排名信息，并以ResultVo<IPage<CourseStudyRankVo>>的形式返回。
- 端点: /learn/queryCourseLearnDetail
- 方法: POST

#### API 230
- ID: ff3e4224-d216-4d88-adff-07da579bb061
- 名称: OrganizationKanBanController_courseOverview
- 描述: 管理端-课程总览：该API用于接收组织看板的课程概览请求，并返回相应的课程概览信息。请求体中需要包含课程相关的查询条件，服务会根据这些条件查询课程概览数据。
- 端点: /org/board/courseOverview
- 方法: POST

#### API 231
- ID: 970605bc-9621-482c-81d9-a7743746443b
- 名称: TestController_redisTest
- 描述: 该API用于测试Redis缓存功能。它首先向Redis设置一个键值对，其中键为"123"，值为"456"，并设置过期时间为10秒。然后，它从Redis中获取该键对应的值，并将其作为字符串返回给客户端。
- 端点: /test/redisTest
- 方法: GET

#### API 232
- ID: 00599c6d-1304-4012-90df-d51bb52de612
- 名称: TrainPlanningController_queryPlanningCounts
- 描述: 学员端-查询计划状态数量。该API通过POST请求获取当前登录学员的培训计划状态统计信息，包括已完成、正在学习和未学习的计划数量。
- 端点: /planning/queryPlanningCounts
- 方法: POST

#### API 233
- ID: eeb8c084-818f-48f1-8545-e85569983393
- 名称: CourseController_importDesignatedPerson
- 描述: 该API用于导入指定人员可观看的课程信息。通过上传文件和指定课程ID，将文件中的用户信息与课程关联起来。
- 端点: /course/importDesignatedPerson
- 方法: POST
- 请求参数:
  * file (MultipartFile): 包含指定人员信息的文件
  * courseId (Long): 课程的唯一标识符

#### API 234
- ID: 42213f78-189d-4127-a0be-a461e6c97da9
- 名称: CourseController_queryAllFields
- 描述: 管理端-查询共享范围。该API根据当前用户的权限（角色、业务单元、平台、小微）查询所有相关的字段详情，并按照业务单元、平台和小微进行分组。
- 端点: /course/queryAllFields
- 方法: GET

#### API 235
- ID: e707c130-881e-43e6-9a42-39f8d49abcd6
- 名称: ExportController_export
- 描述: 管理端-导出课程列表。该API接收一个CoursesVo对象作为请求体，用于指定导出的课程列表条件。然后，它会调用exportService的exportCourseList方法来生成并导出Excel文件。如果导出过程中发生异常，会记录错误日志。
- 端点: /courseList/export
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置导出文件的响应头和输出流。

#### API 236
- ID: 953688b6-1083-466f-8b35-ed98010f89b1
- 名称: OrganizationKanBanController_userLearningDetail
- 描述: 该API用于获取组织看板中用户的累计学习时长明细。通过接收一个OrgBoardDetailRequest类型的请求体，调用UserService的userLearningDetailFSecPage方法来获取学习时长数据，并将其封装在ResultVo<IPage<OrgLearningDurationResponse>>中返回。
- 端点: /org/board/userLearningDetail
- 方法: POST

#### API 237
- ID: 0b25d866-08b1-43e6-bd38-4b3d3d074d88
- 名称: CourseStudentStudyDurationController_getPersonalStudy
- 描述: 学员端-个人学习时长统计。该API用于获取当前登录学员的学习时长统计信息。
- 端点: /course/study/duration/personal-study
- 方法: GET

#### API 238
- ID: c6dc3012-c4e4-4974-9772-07fda2eeaf03
- 名称: CourseStudentController_getCourseStudentId
- 描述: 管理端-获取课程学员ID。该API接收一个课程ID作为查询参数，首先检查该课程是否存在映射ID，如果存在则使用映射ID。然后查询该课程下状态为进行中的学员列表，如果存在则返回第一个学员的ID；如果不存在，则创建一个新的学员记录并返回新学员的ID。
- 端点: /course/student/getCourseStudentId
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定需要获取学员ID的课程。如果未提供，则可能无法正确获取学员ID。

#### API 239
- ID: 78e94546-181b-4490-a894-f418c2d3bf79
- 名称: CourseStudentCustomListController_updateUserExtetnalMode
- 描述: 该API用于更新用户的外部模式。它接收一个CommonBusinessInfoVo对象作为请求体，从中提取accountList和businessId字段，并返回一个ResultVo对象表示操作成功。
- 端点: /course/courseStudentCustomList/updateUserExtetnalMode
- 方法: POST

#### API 240
- ID: 70529ac8-b0c0-4da2-8da2-66a9bac86e69
- 名称: StudentCollectionController_handleCollection
- 描述: 学员端用于新增或删除课程收藏的功能。通过传入课程ID和状态参数，可以实现对指定课程的收藏或取消收藏操作。当状态为1时，表示新增收藏；当状态为0时，表示取消收藏。在新增收藏时，会检查是否已经收藏过该课程，避免重复收藏。
- 端点: /course/studentCollection/handleCollection
- 方法: GET
- 请求参数:
  * id (Long): 课程ID，用于指定要收藏或取消收藏的课程
  * status (Integer): 状态参数，1表示新增收藏，0表示取消收藏

#### API 241
- ID: 6fb25ba8-c86d-4909-be07-dfa455654d48
- 名称: CommitmentLetterController_agree
- 描述: 管理端-同意签约。该API用于处理用户同意签署承诺书的操作。首先，从请求头中获取用户账号，然后检查该用户是否已经签署过承诺书。如果没有签署过，则创建一个新的签署记录并保存。
- 端点: /commitment/letter/agree
- 方法: POST

#### API 242
- ID: 55139f34-63ab-4a71-8fb4-504189a86487
- 名称: VersionAnnouncementController_queryAnnoDetail
- 描述: 管理端-公告详情查询。该API通过传入versionAnnoId查询特定版本的公告详情，并将查询结果封装在ResultVo<VersionAnnoDetailVo>中返回。查询结果中会根据publishType字段设置publishTypeStr字段，以区分公告发布的目标端（管理端或学员端）。
- 端点: /announcement/queryAnnoDetail
- 方法: GET
- 请求参数:
  * versionAnnoId (Long): 公告版本的唯一标识符，用于查询特定版本的公告详情。

#### API 243
- ID: aea89792-d115-4d5b-92a1-d4d029a0ff34
- 名称: CourseSectionLearnController_delMyComment
- 描述: 学员端-删除我的感悟。该API允许学员通过传入评论ID来删除他们自己在课程学习部分发表的评论。如果删除成功，则返回成功的ResultVo<Void>对象；如果删除过程中发生异常，则捕获异常并记录错误日志，返回失败的ResultVo<Void>对象。
- 端点: /learn/delMyComment
- 方法: GET
- 请求参数:
  * id (String): 评论ID，用于指定要删除的评论。

#### API 244
- ID: c1a990c0-3cdb-4372-8523-21db058a287d
- 名称: CourseController_addCourse
- 描述: 管理端-新增课程基本信息。该API接收一个CourseVo对象作为请求体，用于添加或更新课程信息。在处理过程中，会对讲师名称和简介的长度进行验证，并根据课程类别和用户角色设置相应的维度代码和组织级别。如果课程ID已存在，则更新课程信息；否则，新建课程。
- 端点: /course
- 方法: POST

#### API 245
- ID: ec391bfd-e5c1-4145-ac5e-0f4c3c5796ac
- 名称: CourseSectionLearnController_refreshLikeToCourse
- 描述: 管理端-刷新节点赞到课程维度点赞。该API用于将课程章节的学习点赞数汇总到课程级别的点赞数。
- 端点: /learn/refreshLikeToCourse
- 方法: POST

#### API 246
- ID: 4fb1ca49-c5f2-43cd-8808-e0b4ee46368a
- 名称: StudentCollectionController_queryLectureRoomCourses
- 描述: 学员端-查询百家讲堂课程。该API根据传入的OnlineClassVo对象中的buCode和ptCode字段来查询相应的课程。如果buCode不为空且ptCode为空，则查询领域课程；如果buCode为空且ptCode不为空，则查询平台课程。查询结果会通过ResultVo封装并返回。
- 端点: /course/studentCollection/queryLectureRoomCourses
- 方法: POST

#### API 247
- ID: 57f740b4-cd87-46c4-8b3a-7ea75e8c3815
- 名称: CourseStudentStudyDurationController_getTeamDurationByDay
- 描述: 该API用于获取学员端团队学习时长的统计信息。它通过调用courseStudentStudyDurationService的getTeamDurationByDay方法来获取团队学习时长数据，并将其封装在ResultVo<TeamStudyDurationVo>对象中返回。
- 端点: /course/study/duration/team-study
- 方法: GET

#### API 248
- ID: db829d44-e091-40c0-b11a-bc14270f08d4
- 名称: RecentStudyController_refreshRecentLearnData
- 描述: 学员端-修正规划最近学习数据。该API会查询需要删除的学习记录数据，根据业务ID和账户进行分组，然后对每个分组内除最新一条记录外的所有记录进行删除。
- 端点: /learn/refreshRecentLearnData
- 方法: GET

#### API 249
- ID: ec4abb1f-62bb-437e-8420-49875bf46051
- 名称: CourseChapterController_haveResources
- 描述: 学员端-根据课程id查询课程大纲章节是否有资源。该API会检查指定课程的所有章节及其小节，确保每个小节都有对应的资源文件URL。如果发现任何章节的小节没有资源文件URL，则抛出异常。
- 端点: /course/chapter/haveResources
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于查询该课程的章节资源情况。

#### API 250
- ID: d9f5c88e-dfe2-4dac-83be-07aadb72f2b3
- 名称: TrainPlanningController_queryPlanningCounts1
- 描述: 学员端-查询计划状态数量，不包括仅包含选修课程的计划。该API首先获取当前用户的账号信息，然后查询与该用户相关的所有计划ID。接着，过滤掉那些仅包含选修课程的计划ID。最后，统计剩余计划的状态数量（已完成、正在学习、未开始学习）。
- 端点: /planning/queryPlanningCounts1
- 方法: POST

#### API 251
- ID: 8e7bd575-278a-40dc-9be9-f5d7d0e8976b
- 名称: CourseStudentStudyDurationController_getWeekPlan
- 描述: 获取学员在指定周数内的每日学习时长计划。默认情况下，返回最近7天的学习时长计划。
- 端点: /course/study/duration/week
- 方法: GET
- 请求参数:
  * num (int): 指定要获取的学习时长计划的周数，默认为7。

#### API 252
- ID: 19d97428-022e-4fac-9833-e1581e3b6b4f
- 名称: CourseCategoryController_get2CategoryByFirst
- 描述: 学员端-根据一级分类id查询二级分类。该API首先检查指定的一级分类下是否有课程，如果没有则返回空列表；如果有，则查询所有二级分类，并进一步过滤掉没有课程的二级分类。
- 端点: /course/category/get2CategoryByFirst
- 方法: GET
- 请求参数:
  * id (Long): 一级分类的ID，用于查询对应的二级分类。如果未提供，则可能需要默认行为或额外处理。

#### API 253
- ID: 38c65459-3e55-4019-a7f1-53fa9dd050be
- 名称: SceneCourseController_saveSceneCategory
- 描述: 保存或更新场景分类信息。如果场景分类没有父节点，则需要选择正确的上级场景；如果父节点不是叶子节点，则不允许创建二级场景；新建场景默认为普通类型，特殊场景需手动创建；如果场景分类有子场景，则不允许将其设置为叶子节点。
- 端点: sceneCoursesaveSceneCategory
- 方法: POST

#### API 254
- ID: e27e3aef-2ace-4017-904a-e723ba2e81aa
- 名称: CourseController_queryCourses
- 描述: 管理端-查询课程列表（课程管理）。该API接收一个CoursesVo对象作为请求体，用于过滤和分页查询课程详情。首先，API会检查权限码的有效性，然后根据用户的权限获取相应的数据权限。接着，API会构建查询条件并调用courseQueryService进行课程数据查询。最后，API会将查询结果封装成ResultVo<IPage<CourseDetailVo>>对象返回。
- 端点: /course/queryCourses
- 方法: POST

#### API 255
- ID: e2e4049f-844e-4018-9d5f-8f0ffe87debb
- 名称: CourseSectionLearnController_updateCourseLearnInfo
- 描述: 该API用于更新课程学习信息。客户端通过POST请求发送课程学习信息，服务器端接收后调用sectionLearnService的updateCourseLearnInfoUseRedis方法进行处理，并将结果以ResultVo<Void>的形式返回给客户端。如果处理过程中发生异常，服务器会记录错误日志并返回失败信息。
- 端点: /learn/updateCourseLearnInfo
- 方法: POST

#### API 256
- ID: d4a38df1-10da-4994-b955-c2a7aef78cc8
- 名称: CourseStudentController_getStudentByCourseId
- 描述: 管理端-获取指定课程ID下的学员ID列表。该API首先验证课程ID是否为空，然后检查课程是否存在以及课程状态是否已发布。只有当课程存在并且已发布时，才会从数据库中获取学员ID列表。
- 端点: /course/student/getStudentByCourseId/{courseId}
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定需要查询学员ID的课程。

#### API 257
- ID: a6c0ca38-ebf6-46a2-8393-2c8a921d6813
- 名称: RecentStudyController_addPlanningRecentLearn
- 描述: 学员端-添加规划最近学习。该API接收一个RecentStudyVo对象，用于记录学员的学习历史。首先从请求头中获取用户账号，然后查询数据库中是否存在该用户的最近学习记录。如果不存在，则插入一条新的学习记录；如果存在，则更新该记录的学习时间。
- 端点: /learn/addPlanningRecentLearn
- 方法: POST

#### API 258
- ID: 41b62950-4269-445d-8194-1f6d45d43c05
- 名称: StudentCollectionController_queryLibraryClassList
- 描述: 学员端-查询文库课程列表。该API接收一个OnlineClassVo对象作为请求体，用于筛选课程列表。首先获取当前登录人的信息，然后根据登录人的权限设置查询条件。接着查询符合条件的在线课程列表，并进行过滤，移除不符合查看条件的课程。最后返回分页后的课程列表。
- 端点: /course/studentCollection/queryLibraryClassList
- 方法: POST

#### API 259
- ID: aba10677-d403-4f29-aa6e-5b93103ab72b
- 名称: CourseController_publishCourse
- 描述: 管理端-发布课程。该API接收一个CourseStudentVo对象作为请求体，用于发布或上架课程。在发布或上架之前，会进行一系列的校验，包括课程ID是否存在、课程内容是否配置完成、课程学员范围和共享范围是否配置完成等。如果所有校验通过，则更新课程状态为已发布，并同步课程映射信息，刷新最近学习记录。
- 端点: /course/publishCourse
- 方法: POST

#### API 260
- ID: 22176e3b-0629-40b8-89f1-ddcd53b6e58c
- 名称: RenovationReportController_getRenovationCourse
- 描述: 管理端-根据code查询专委会课程。该API接收一个可选的查询参数'code'，用于过滤特定专区的课程。如果'code'为空，则抛出异常。否则，从数据库中获取符合条件的课程列表，并对每个课程对象进行一些值的设置。
- 端点: /renovation/report/getRenovationCourse
- 方法: GET
- 请求参数:
  * code (String): 专区的唯一标识符，用于过滤特定专区的课程。如果为空，则抛出异常。

#### API 261
- ID: c8207163-26aa-4dac-a488-af5503065c4c
- 名称: CourseSectionController_delCourseContent
- 描述: 管理端-删除课程节。该API接收一个CourseSectionVo对象作为请求体，用于指定要删除的课程节。首先，根据传入的ID查找对应的课程节数据，如果找不到则抛出异常。接着，检查该课程节所属章节下的所有课程节数量，如果数量大于1，则允许删除；如果数量等于1，则不允许删除并抛出异常。最后，返回一个ResultVo<Void>对象表示操作结果。
- 端点: /course/section/delCourseContent
- 方法: POST

#### API 262
- ID: f2c9e377-1b62-4297-8e1d-9e95db738804
- 名称: ThirdPartyController_syncYunXueTangAccount
- 描述: 该API用于同步云学堂账户信息。客户端通过POST请求发送需要同步的账户列表，服务器端接收后调用YunxuetangLogic组件进行账户同步操作。
- 端点: /third/yunxuetang/account/sync
- 方法: POST

#### API 263
- ID: 938d1e0a-82bd-428e-95e2-36797550fb54
- 名称: StudentCollectionController_queryCourseCenterList
- 描述: 学员端-查询课程中心列表。该API接收一个OnlineClassVo对象作为请求体，用于筛选课程列表。首先，从会话中获取当前登录人的信息，并将其buCode和empsn设置到请求体中。然后，使用分页工具进行分页查询，并调用baseMapper的queryCourseCenterList方法获取课程列表。最后，对列表中的参数进行解析，并返回一个ResultVo<OnlineClassDetailsVo>对象。
- 端点: /course/studentCollection/queryCourseCenterList
- 方法: POST

#### API 264
- ID: 5099d5a8-0da2-4b42-a71e-8b6df67500d8
- 名称: CourseController_queryStudyData
- 描述: 管理端-查询学习数据。该API接收一个CourseStudyDataVo对象作为请求体，用于指定查询条件（如当前页码current和每页大小size）。然后，它调用courseService的queryStudyData方法获取符合条件的学习数据列表，并将其封装到PageDTO<CourseStudyDataDetailVo>对象中返回。
- 端点: /course/queryStudyData
- 方法: POST

#### API 265
- ID: 5a97d8ff-2daf-4ad8-b9cc-5b633373ae89
- 名称: OrganizationKanBanController_planningBoard
- 描述: 该API用于处理组织看板中的三级页面请求，特别是针对地图的整体满意度评价。客户端通过POST方法发送一个OrgBoardThirdRequest类型的请求体，服务器端接收后调用service.commentBoard方法进行处理，并返回一个ResultVo<CommentBoardResponse>类型的响应。
- 端点: /org/board/planningBoard
- 方法: POST

#### API 266
- ID: 8d47800c-0fbe-4fe2-9236-5eef47ca21a1
- 名称: OrganizationKanBanController_userScoreTrend
- 描述: 该API用于获取组织看板中员工满意度的趋势数据。客户端通过POST请求发送一个OrgBoardBaseRequest类型的请求体，服务器端解析请求后调用service.queryOrgTrend方法查询员工满意度趋势数据，并以ResultVo<PageInfo<OrgBoardBaseResponse>>的形式返回。
- 端点: /org/board/userScoreTrend
- 方法: POST

#### API 267
- ID: 52d9b4c6-64a2-441e-87ae-1ee1e52389c0
- 名称: TestAAAController_refreshStudentConfigVisibleBy3
- 描述: 该API用于根据给定的courseId刷新学生配置的可见性。它会查询出需要刷新的学生配置记录，根据创建角色的不同，设置不同的可见类型和组织信息，并更新数据库中的记录。如果组装bu ca字段失败，则记录错误的courseId。
- 端点: /refresh-history/refreshStudentConfigVisibleBy3
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定需要刷新的学生配置的课程。如果未提供，则可能刷新所有相关配置。

#### API 268
- ID: 940041a9-e37c-49b7-ae20-9fefc5dd34be
- 名称: VersionAnnouncementController_queryHistoryAnnoStu
- 描述: 学员端查询往期公告的API。该API接收一个HistoryVerPubRequest类型的请求体，其中包含发布类型等信息。通过调用versionAnnouncementService.queryHistoryAnnoStu方法，查询符合条件的公告记录，并将其转换为VersionAnnoDetailVo列表返回。
- 端点: /announcement/queryHistoryAnnoStu
- 方法: POST

#### API 269
- ID: c094812d-cc30-48f4-b8a5-f21ee4ec77d7
- 名称: RenovationModuleController_selectByCode
- 描述: 管理端根据code查询课程。该API接收一个RenovationQueryCourseDto对象作为请求体，首先获取最高权限选项，然后根据权限选项调整查询条件。如果查询条件中的addConten等于BY_CATEGORY的值，则进一步获取子分类ID并更新查询条件。最后，根据调整后的查询条件查询课程详情。
- 端点: /renovation/module
- 方法: POST

#### API 270
- ID: 6daf89f4-3dae-400e-8881-c756c0fa53a7
- 名称: CourseSectionController_getCourseIds
- 描述: 学员端-通过课程ID查询章节ID。如果课程属于云学堂，则尝试同步云学堂用户信息。
- 端点: /course/section/getCourseIds
- 方法: GET
- 请求参数:
  * courseId (String): 课程ID，用于查询对应的章节ID

#### API 271
- ID: c93da6d3-b5df-40fd-ae0c-7f5d88d3176d
- 名称: ProfessionalCertificationsController_getProfessionalCertPersonInfo
- 描述: 该API用于获取当前登录用户的认证基本信息，包括身份证信息（部分隐藏）、员工编号、员工姓名和公司名称。首先从HttpServletRequest中获取Access-Token，然后通过该Token调用第三方服务获取用户信息和角色信息。接着，调用另一个服务获取用户的公司名称，并将所有信息封装到ProfessionalCertPersonVo对象中返回。
- 端点: /course/certifications/duration/getProfessionalCertPersonInfo
- 方法: GET
- 请求参数:
  * request (HttpServletRequest): HTTP请求对象，用于获取请求头中的Access-Token。

#### API 272
- ID: 53c585f3-3f81-4cdf-9d04-8fd5ff29ad78
- 名称: CourseCategoryController_getCourseCategoryTree
- 描述: 管理端-查询课程分类列表。该API接收一个可选的查询参数perCode，用于指定领域或者专委会编码。根据传入的perCode，API会从服务层获取课程分类树，并返回根节点下的所有子分类。
- 端点: /course/category/list
- 方法: GET
- 请求参数:
  * perCode (String): 领域或者专委会编码，不能为空

#### API 273
- ID: 41ea9113-66e0-41e6-8b39-c5c0c69e2d80
- 名称: CourseQrcodeSignController_sign
- 描述: 该API用于处理课程二维码签到请求。客户端通过传递课程ID、时间戳和分享用户的标识符来发起签到请求。服务器端首先验证时间戳是否在有效范围内（不超过30分钟），然后检查用户是否已经在此课程下签到过。如果用户未签到且时间戳有效，则记录签到信息并返回签到成功的消息。
- 端点: /qrcode/sign
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID
  * time (String): 时间戳，用于验证二维码的有效性
  * shareUser (String): 分享用户的标识符

#### API 274
- ID: 6530b0a5-96f8-47ae-995c-0ef6de512d02
- 名称: CourseStudentCustomListController_batchAddOrCancel
- 描述: 该API用于管理端批量添加或取消导入的学生信息。根据传入的CourseStudentCustomListDto参数，API会进行相应的数据库操作和Redis缓存更新。具体逻辑包括：检查必填字段是否为空；根据isDel字段决定是删除还是恢复学生信息；如果是删除操作，更新数据库并将文件URL缓存到Redis；如果是添加操作，从Redis获取文件URL并解析其中的学生信息，然后批量保存到数据库。
- 端点: /course/courseStudentCustomList/batchAddOrCancel
- 方法: POST

#### API 275
- ID: 0f904608-2aa7-4885-b17a-b181ea0ee8e3
- 名称: CourseStudentController_getTemplates
- 描述: 该API用于获取管理端学员管理上传模板的URL。当客户端发送GET请求到/course/student/getTemplates时，服务器会调用courseStudentService的getTemplates方法，返回一个包含模板URL的ResultVo对象。
- 端点: /course/student/getTemplates
- 方法: GET

#### API 276
- ID: 67f21313-d375-4e25-8555-7ddc279b2cca
- 名称: OrganizationKanBanController_planningCommentDetailExport
- 描述: 该API用于导出三级页面的地图满意度详情。客户端通过POST请求发送OrgBoardThirdRequest类型的请求体，服务器端处理后将结果以Excel文件的形式通过HttpServletResponse返回给客户端。
- 端点: /org/board/planningCommentDetailExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流，以便将Excel文件发送回客户端。

#### API 277
- ID: 6c0c1b40-07cd-45d5-ae23-db673c0fa470
- 名称: CourseStudentController_importUser
- 描述: 管理端-导入学员。该API允许通过上传文件的方式批量导入学员信息到指定的课程学员记录中。首先检查课程学员ID是否存在，然后根据导入类型决定是否删除已存在的学员信息，接着保存新的学员信息，并更新课程学员记录的状态。
- 端点: /course/student/importUser
- 方法: POST
- 请求参数:
  * file (MultipartFile): 上传的学员信息文件
  * courseStudentId (Long): 课程学员记录的ID
  * importType (Integer): 导入类型，用于决定是否删除已存在的学员信息

#### API 278
- ID: 2b94856d-4656-4165-8512-8f766518634b
- 名称: CourseSectionLearnController_queryEvaluateList
- 描述: 管理端-课程数据-查询课程评分列表。该API接收一个CourseCommentVo对象作为请求体，用于查询特定课程的评分列表，并返回一个ResultVo<IPage<CourseReportEvaluateVo>>对象。
- 端点: /learn/queryCourseEvaluateList
- 方法: POST

#### API 279
- ID: 2d8d89ad-715b-48c4-ab4e-e66a21a3407e
- 名称: CourseStudentController_importUserTwo
- 描述: 管理端-导入学员。该API接收一个包含课程学员ID、导入类型和URL的请求体，用于导入学员信息。首先检查课程学员ID是否存在，然后根据导入类型处理已存在的学员信息，接着从Redis缓存中获取学员数据并进行相应的保存或更新操作。最后，更新课程学员的状态信息。
- 端点: /course/student/importUserTwo
- 方法: POST

#### API 280
- ID: 99f98935-cb55-43a2-9b2f-77f09146a41a
- 名称: AllowListController_updateAllowlist
- 描述: 管理端-修改白名单。该API接收一个AllowListVo对象，用于更新白名单信息。在更新之前，会进行一系列验证，包括检查主键ID是否存在、当前登录用户是否有权限、是否具有超级管理员权限、域名地址是否有效以及该域名地址是否已存在于白名单中。如果所有验证通过，则更新白名单信息，并返回成功消息。
- 端点: /allowlist/update
- 方法: POST

#### API 281
- ID: f9dc3b31-5dec-4f74-ac01-a9ead6630f29
- 名称: OrganizationKanBanController_planningScoreExport
- 描述: 该API用于导出组织看板中的规划评分数据。客户端通过POST请求发送一个OrgBoardPlanningRequest对象，服务器端处理后将数据以Excel文件的形式通过HttpServletResponse返回给客户端。
- 端点: /org/board/planningScoreExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流的对象，以便导出Excel文件。

#### API 282
- ID: 4dee8b1e-7042-444c-8ad8-4a0089e81d1d
- 名称: CourseSectionDedaoController_queryArticleBySectionId
- 描述: 通过给定的课程章节ID查询文章信息。首先从数据库中获取与章节ID对应的课程章节信息，然后构建媒体请求对象，结合当前登录用户的信息，调用相关服务获取文章详情。
- 端点: /dedao/queryArticleBySectionId
- 方法: GET
- 请求参数:
  * sectionId (Long): 课程章节ID，用于查询对应的文章信息

#### API 283
- ID: 960dadce-73fb-48c8-878a-75eece5c0f67
- 名称: CourseStudentCustomListController_deleteImportDesignPersons
- 描述: 管理端-删除指定人可观看导入人员。该API通过接收课程学生ID来删除特定用户对导入设计人员的访问权限。首先检查传入的courseStudentId是否为空，若为空则抛出异常；否则，调用courseStudentDesignListDao的deleteUsers方法，传入解析后的courseStudentId和类型标识1，以删除相关用户的访问权限。
- 端点: /course/courseStudentCustomList/deleteImportDesignPersons/{courseStudentId}
- 方法: GET
- 请求参数:
  * courseStudentId (String): 课程学生ID，用于标识需要删除访问权限的用户

#### API 284
- ID: b15b19d7-128b-4b75-9bf8-a9a85a9e8375
- 名称: OrganizationKanBanController_examOverview
- 描述: 管理端-考试总览：该API用于接收组织看板的考试总览请求，并返回相应的考试总览数据。
- 端点: /org/board/examOverview
- 方法: POST

#### API 285
- ID: cef7925d-0e31-4c33-9674-28c62cb6f4bc
- 名称: RenovationOrgBannerController_saveOrUpdate
- 描述: 该API用于保存或更新组织领域的装修banner信息。它会根据传入的OrgBannerRequest对象中的参数来决定是创建新的banner还是更新已有的banner。同时，它还会处理与banner相关的其他实体，如RenovationPo、RenovationWayOnePo、RenovationModulePo和RenovationBannerPo，并对Redis缓存进行相应的操作。
- 端点: /renovation/org/saveOrUpdate
- 方法: POST

#### API 286
- ID: c44f8b4b-8b46-432b-83d3-3d1fea5521af
- 名称: CourseCategoryController_getInstanceList
- 描述: 管理端-查询课程实例。该API接收一个可选的领域或者专委会编码参数，通过调用courseCategoryService的get2LevelCourseCategoryTree方法获取两层课程分类树，并根据角色权限和课程数量过滤返回结果。
- 端点: /course/category/instances
- 方法: GET
- 请求参数:
  * perCode (String): 领域或者专委会编码，用于过滤课程分类树

#### API 287
- ID: 0aac39d1-e866-4510-a09f-d65441693695
- 名称: PublicCourseRegisterController_getLivePublicCourse
- 描述: 学员端-查询直播公开课。该API接收分页信息作为请求体，通过当前登录学员的账号获取对应的员工信息，然后查询并返回符合条件的直播公开课列表。
- 端点: /publiccourse/getLivePublicCourse
- 方法: POST

#### API 288
- ID: 4436c7a0-f0a4-411a-9849-7a8107790c57
- 名称: CommitteeController_getOneCategory
- 描述: 管理端-查询一级分类。该API接收一个可选的维度编码参数，通过调用courseCategoryService的getOneCategory方法获取一级分类列表，并过滤掉没有课程的目录。
- 端点: /committee/getOneCategory
- 方法: GET
- 请求参数:
  * dimensionCode (String): 维度编码，用于筛选特定维度的一级分类。

#### API 289
- ID: 6d1169a8-61ae-47be-9365-3ee3eb792452
- 名称: CourseCategoryController_getUserHomeCategories
- 描述: 该API用于获取当前登录用户的首页课程分类信息。首先，通过webSession获取用户账号，然后查询数据库获取对应的员工信息。如果员工不存在，则抛出异常。接着，根据员工的buCode和传入的lockStatus参数查询用户课程分类信息，并将其封装在ResultVo<List<UserCategoryVo>>对象中返回。
- 端点: /course/category/user-home-categories
- 方法: POST

#### API 290
- ID: fe18eae1-191e-4549-8417-46d21f579e13
- 名称: CourseSectionLearnController_queryCommentList
- 描述: 管理端-课程数据-查询课程评论列表。该API接收一个CourseCommentVo对象作为请求体，用于指定查询条件，然后调用sectionLearnService.queryCommentList方法获取评论列表，并将其封装在ResultVo<IPage<CourseCommentDetailVo>>对象中返回。
- 端点: /learn/queryCourseCommentList
- 方法: POST

#### API 291
- ID: d13441bc-c3e5-4fb9-af9d-ec111ead0844
- 名称: CourseSectionLearnController_isShowWindow
- 描述: 学员端-是否弹窗：该API用于判断学员在学习特定课程章节时是否需要显示弹窗。通过传入课程ID，调用sectionLearnService.isShowWindow方法获取是否需要弹窗的信息，并以ResultVo<Integer>的形式返回。
- 端点: /learn/isShowWindow
- 方法: GET
- 请求参数:
  * courseId (Long): 课程ID，用于指定需要查询的课程章节。

#### API 292
- ID: 8e2f1a4c-a8c0-40ac-ac5e-08e3bc6418ea
- 名称: StudentCollectionController_compare
- 描述: 该API用于比较当前登录用户的新旧在线课程集合。通过接收一个OnlineClassVo对象，查询新旧在线课程列表，并返回两者之间的差异，包括新增和减少的课程ID列表。
- 端点: /course/studentCollection/compare
- 方法: POST

#### API 293
- ID: daecdf55-9810-46b5-8eee-65e5f07f39ef
- 名称: OrganizationKanBanController_courseStudyRank
- 描述: 该API用于获取组织看板中课程的学习人数排行。客户端通过POST请求发送一个OrgBoardBaseRequest类型的请求体，服务器端处理后返回一个ResultVo<List<OrgBoardCourseStudyRankResponse>>类型的响应体。
- 端点: /org/board/courseStudyRank
- 方法: POST

#### API 294
- ID: b497bce7-ded2-4a0f-80f9-bf9e8d3a89f4
- 名称: ProfessionalCertificationsController_getCertProcessInfo
- 描述: 该API用于获取职称认证学时信息。它接收一个包含员工编号、页码和每页大小的请求体，并返回一个包含总学时、公需课学时、专业课学时以及按年份分组的学时信息的结果对象。
- 端点: /course/certifications/duration/getCertProcessInfo
- 方法: POST

#### API 295
- ID: 8de69167-b7cd-4dd5-8eba-6729840d4a13
- 名称: CommitteeKanBanController_queryStudyDurationTrend
- 描述: 管理端-查询人均学习时长趋势。该API接收一个包含委员会代码、查询类型、员工类型和查询日期的请求体，根据不同的查询类型（如昨日、近7天、近30天、近半年、近一年、累计），返回相应时间段内的人均学习时长趋势。
- 端点: /committee/kanban/queryStudyDurationTrend
- 方法: POST

#### API 296
- ID: 74ac06e0-3899-4361-a0f1-f932b5f73cea
- 名称: CourseController_updateCourseStatus
- 描述: 管理端-修改课程状态（下架）。该API首先判断指定ID的课程是否已经在进行中的地图任务中被引用。如果课程已被引用，则返回相关信息提示管理员先删除地图中的任务；否则，更新课程的状态。
- 端点: /course/updateCourseStatus/{id}/{status}
- 方法: GET
- 请求参数:
  * id (String): 课程ID
  * status (Integer): 课程状态，例如下架状态

#### API 297
- ID: 56b22386-ad37-4cfb-93fb-1c521fb5d1f8
- 名称: CourseCategoryController_deleteCategories
- 描述: 管理端-批量删除课程分类。该API接收一个包含待删除课程分类ID的请求体，首先检查这些分类是否存在未删除的课程，如果存在则抛出异常；否则，将这些分类标记为已删除。
- 端点: /course/category/delete
- 方法: POST

#### API 298
- ID: b0818af1-45e5-48ee-a4b0-731bf4cf37f6
- 名称: ThirdPartyController_eceibsStudyRecord
- 描述: 该API用于处理来自第三方系统的课程学习记录请求。客户端通过POST方法发送学习记录数据，服务器端接收后调用EceibsStudyRecordLogic组件获取学习记录，并以ResultVo<JSONArray>的形式返回。
- 端点: /third/eceibs/study/record
- 方法: POST

#### API 299
- ID: ee411420-112d-4699-a336-c16470663ead
- 名称: BannerController_delBanner
- 描述: 管理端-删除指定ID的banner图。该API接收一个可选的查询参数'id'，用于指定要删除的banner图的唯一标识符。当接收到有效的'id'时，API会调用bannerService的delBanner方法，通过bannerDao删除对应的banner记录，并返回一个表示成功的ResultVo<Void>对象。
- 端点: /banner/delBanner
- 方法: GET
- 请求参数:
  * id (String): 要删除的banner图的唯一标识符。

#### API 300
- ID: f68067ea-59db-457e-a8c2-681c4d188128
- 名称: CourseStudentCustomListController_batchSaveUser
- 描述: 管理端-批量保存人员。该API根据传入的courseStudentId参数，删除规则匹配的人员，然后根据规则信息或自定义导入信息批量保存人员。如果存在规则信息，则按照规则信息保存；否则，按照自定义导入信息保存。
- 端点: /course/courseStudentCustomList/batchSaveUser
- 方法: GET
- 请求参数:
  * courseStudentId (Long): 课程学生ID，用于指定需要批量保存的人员关联的课程学生记录。

#### API 301
- ID: f3a4e705-dcd3-4182-b9b1-0c3176d016b6
- 名称: TrainPlanningController_refreshPlanningRecords
- 描述: 该API用于刷新规划学习记录，通过对比课程学习记录与规划学习记录，将新增的学习记录刷入数据库，并根据课程和作业的完成情况更新规划的状态。
- 端点: /planning/refreshPlanningRecords
- 方法: GET

#### API 302
- ID: c7838747-5228-4326-9125-ba1daf623e4a
- 名称: PublicCourseRegisterController_getOfflinePublicCourse
- 描述: 学员端-查询线下公开课。该API接收分页信息作为请求体，返回指定分页的线下公开课列表。
- 端点: /publiccourse/getOfflinePublicCourse
- 方法: POST

#### API 303
- ID: cf1eecd0-2bba-4055-83be-3381d76e229d
- 名称: CourseSectionLearnController_refreshHistoryData
- 描述: 学员端-刷新历史学习数据。该API用于处理GET请求，当客户端请求刷新历史学习数据时，服务器会调用sectionLearnService的refreshHistoryData方法来更新相关数据。如果操作成功，返回ResultVo<Void>的成功响应；如果发生异常，捕获异常并记录错误日志，返回ResultVo<Void>的失败响应。
- 端点: /learn/refreshHistoryData
- 方法: GET

#### API 304
- ID: 48823141-c14c-4a1e-89c7-e067cea2a279
- 名称: StudentCollectionController_queryMyCollectionList
- 描述: 学员端-查询我的收藏列表。该API接收一个MyCollectionVo对象作为请求体，其中包含分页信息和用户账号信息。如果用户账号为空，则从请求头中获取。API通过调用studentCollectionService的queryMyCollectionList方法获取在线课程详情列表，并返回ResultVo<OnlineClassDetailsVo>对象。
- 端点: /course/studentCollection/queryMyCollectionList
- 方法: POST

#### API 305
- ID: e0e8ed81-6af7-4644-a73c-d1637b4eb11b
- 名称: RenovationReportController_getReportCourseStudentList
- 描述: 管理端-查询专业专区课程学员数据。该API接收一个RenvationCourseStudentVo对象作为请求体，根据传入的参数查询特定课程的学生列表，并返回一个分页的ReportStudentDetailsVo对象列表。
- 端点: /renovation/report/getReportCourseStudentList
- 方法: POST

#### API 306
- ID: 5ac8bf55-7b0e-4e9e-bf16-6a0d545b4f6a
- 名称: CourseCategoryController_getCourseCategory
- 描述: 管理端-通过ID查询课程分类详情。首先，根据传入的ID从数据库中获取对应的课程分类实体（CourseCategoryPo）。如果该实体不存在，则抛出异常表示该目录不存在。接着，将实体转换为视图对象（CourseCategoryDetailVo）。如果视图对象的父分类ID不为空，则进一步查询父分类的全名，并设置到视图对象中。同时，视图对象的创建人姓名和编码也会被设置。
- 端点: /course/category/get/{id}
- 方法: GET
- 请求参数:
  * id (Long): 课程分类的唯一标识符

#### API 307
- ID: 5589c7e1-5e48-464e-86c6-daea609569d3
- 名称: CommitteeCommentController_getCommitteeComments
- 描述: 学员端-根据专委会编码查询用户评论列表-无分页。该API接收一个包含专委会编码的请求体，首先验证专委会编码的有效性，然后获取当前登录用户的权限信息，检查用户是否有权查看评论。接着，查询与当前用户和专委会编码相关的评论记录，并将这些记录转换为详细的评论视图对象返回。
- 端点: /committee/comment/getCommitteeComments
- 方法: POST

#### API 308
- ID: f6f9a13d-b5b4-42fc-9cff-e7d84fe26bcf
- 名称: CourseController_checkCourseUsePermission
- 描述: 该API用于检查当前管理员对指定课程列表的使用权限。首先从请求体中获取课程ID列表，然后查询这些课程的状态和共享范围，最后根据管理员的角色权限判断是否有权使用这些课程。
- 端点: /course/checkCourseUsePermission
- 方法: POST

#### API 309
- ID: 9879cf53-0292-4020-871f-b8a630de5bfc
- 名称: RenovationController_getZoneHomeRenovationId
- 描述: 该API用于获取指定装修ID的首页装修详情，包括模块列表、横幅列表、话题列表和学习动态列表。根据模块类型的不同，API会从不同的数据源中获取相应的数据，并将其转换为对应的VO对象。
- 端点: /renovation/preview
- 方法: GET
- 请求参数:
  * renovationId (Long): 装修ID，用于查询特定装修的详情

#### API 310
- ID: 53c6acca-c0c4-47c0-b97e-0516da29f986
- 名称: CommitteeKanBanController_learningRateSave
- 描述: 管理端-定时任务入库学习率数据。该API接收一个可选的查询参数param，用于指定需要刷新学习率数据的时间段。如果param为空，则默认刷新昨天的数据；否则，解析param中的startDate和endDate，刷新指定时间段内的学习率数据。
- 端点: /committee/kanban/learningRateSave
- 方法: GET
- 请求参数:
  * param (String): 包含startDate和endDate的JSON字符串，用于指定需要刷新学习率数据的时间段。如果为空，默认刷新昨天的数据。

#### API 311
- ID: 1208cf49-33dd-496a-a774-abaab6bfdf32
- 名称: CourseController_checkUsePermissionByCourseIds
- 描述: 该API用于检查用户对指定课程ID列表的使用权限。首先，从请求体中获取课程ID列表并转换为Long类型。然后，调用courseService的checkUsePermissionByCourseIds方法来验证权限。如果用户有权限访问所有课程，则返回成功响应；否则，返回失败响应并提示错误信息。
- 端点: /course/checkUsePermissionByCourseIds
- 方法: POST

#### API 312
- ID: 1de5dfad-7cbf-4f75-a250-8c529991894b
- 名称: CourseController_insertHistoryData
- 描述: 该API用于插入历史指定人可观看课程的数据。它从数据库中查询设计课程的学生信息，解析出指定人的工号，然后通过Feign客户端获取这些用户的详细信息，并将这些信息保存到课程学生设计列表中。
- 端点: /course/insertHistoryData
- 方法: GET

#### API 313
- ID: a1ae5580-bbf6-4cc6-82bd-b294293e3783
- 名称: MsgRecordController_list
- 描述: 该API用于处理POST请求，根据传入的查询条件获取消息记录列表，并以分页的形式返回结果。业务规则包括接收QueryListRequest类型的请求体，调用recordService.list方法获取消息记录列表，然后将结果封装到ResultVo<IPage<MsgResultResponse>>中返回。
- 端点: /msg/list
- 方法: POST

#### API 314
- ID: d1c96c11-18cd-4768-9327-ef287d148a64
- 名称: CourseController_guessLikeForYou
- 描述: 学员端-猜你喜欢。该API根据当前登录学员的职业分类信息，推荐相关的在线课程。推荐逻辑包括根据职业分类自动推荐、指定课程推荐和目录推荐，并过滤掉学员无权限查看的课程。
- 端点: /course/guessLikeForYou
- 方法: GET

#### API 315
- ID: 8e538ce2-fee5-4a24-beb9-df6c7d7c7530
- 名称: CourseChapterController_deleteCourseChapter
- 描述: 管理端-删除课程大纲章。该API接收一个课程章节ID作为查询参数，首先检查该ID对应的课程章节是否存在。如果存在且该课程有多个章节，则删除指定章节及其下的所有节；如果该课程只有一个章节，则抛出异常表示最后一章不可删除。
- 端点: /course/chapter/deleteCourseChapter
- 方法: GET
- 请求参数:
  * id (Long): 课程章节ID

#### API 316
- ID: 7e00d990-d514-4cc5-b8cc-da8a06eb98c5
- 名称: CourseStudentApi_courseStudySync
- 描述: 该API用于同步第三方课程记录到学习平台。首先，它接收一个包含课程信息和用户虚拟工号的请求体。然后，它验证请求参数的有效性，包括检查用户虚拟工号是否存在以及课程号是否有效。接着，它将请求参数转换为内部数据模型，并将其保存到数据库中。最后，它返回一个表示操作成功与否的结果。
- 端点: /openApi/mshi/v1/courseStudySync
- 方法: POST

#### API 317
- ID: ef732a66-d965-47a0-a9aa-845858338a20
- 名称: CourseCategoryController_getUserCategories
- 描述: 管理端-查询当前登录人的课程分类。该API首先通过webSession获取当前用户的账号信息，然后查询对应的员工信息以获取buCode。接着，调用courseCategoryService的getUserCategories方法，传入lockStatus为空字符串和buCode，获取用户课程分类列表，并封装到ResultVo<List<UserCategoryVo>>中返回。如果用户不存在，则抛出BizBaseException异常。
- 端点: /course/category/user-categories
- 方法: POST

#### API 318
- ID: ea91006e-ddab-41cf-870e-35501b7e7870
- 名称: CommitteeController_refreshCommitteenData
- 描述: 定时任务刷新专委会排序数据。该API接收一个可选的查询参数refreshTime，用于指定需要刷新的数据日期。如果没有提供refreshTime，则默认使用前一天的数据。API会先删除已存在的对应日期的数据，然后重新计算并保存新的专委会排序数据。
- 端点: /committee/scheduled/refresh/committeenData
- 方法: GET
- 请求参数:
  * refreshTime (String): 指定需要刷新的数据日期，格式为yyyy-MM-dd。如果不提供，则默认使用前一天的数据。

#### API 319
- ID: 59cd09ef-80ec-4e46-9530-72bfc8ee2457
- 名称: CourseStudentController_addCourseStudent
- 描述: 管理端用于新增或编辑学员的API。该API接收一个CourseStudentVo对象作为请求体，根据对象中的属性进行相应的数据库操作，包括插入新学员记录、更新现有学员记录、处理共享人员信息、导入人员信息等。
- 端点: /course/student
- 方法: POST

#### API 320
- ID: 465a480c-45bb-4a75-b3df-9c2e6615de67
- 名称: CourseSectionLearnController_commentCourse
- 描述: 该API允许学员对课程进行评论。当接收到有效的评论请求后，会调用sectionLearnService的commentCourse方法来处理评论。如果评论成功，返回成功的ResultVo<Void>对象；如果发生异常，捕获异常并记录错误日志，返回失败的ResultVo<Void>对象。
- 端点: /learn/commentCourse
- 方法: POST

#### API 321
- ID: 946df2d8-edbf-4538-b7ae-61e33b5d9df0
- 名称: CommitteeController_queryCoursesForCommittee
- 描述: 管理端-查询课程列表。该API接收一个CourseCommitteeVo对象作为请求体，用于筛选课程。首先获取当前用户的账号信息，并将其设置到请求体中；然后根据一级分类ID查询所有子分类ID，并将这些ID添加到请求体中；接着获取用户的维度代码，并将其设置到请求体中；最后根据请求体中的信息查询课程列表，并对查询结果进行参数解析。
- 端点: /committee/queryCoursesForCommittee
- 方法: POST

#### API 322
- ID: 2fa235f5-6f46-4947-a076-98660851812a
- 名称: RenovationReportController_exportGetReportCourseList
- 描述: 管理端-导出查询专业专区课程数据。该API接收一个RenvationCourseVo对象作为请求体，用于指定查询条件。然后，它从数据库中获取符合条件的课程数据，并将其导出为Excel文件，通过HttpServletResponse返回给客户端。
- 端点: /renovation/report/exportGetReportCourseList
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于返回Excel文件的HTTP响应对象。

#### API 323
- ID: a8f3b5c2-fc64-48ae-ba0e-00cf8772f040
- 名称: TestController_ping
- 描述: 用于测试服务器是否正常运行的API端点。当客户端发送GET请求到/test/ping路径时，服务器会返回字符串"pong"作为成功的响应。该API需要认证。
- 端点: /test/ping
- 方法: GET

#### API 324
- ID: 604795ad-fb4d-4eac-82b0-a0b24b05c9ba
- 名称: UserLearnReportController_studyLearnExport
- 描述: 该API用于导出用户的课程学习报告。它接收一个StudyReportRequest对象作为请求体，其中包含查询维度、当前页码和每页大小等信息。API会根据这些信息查询用户的课程学习时长、总学习时长和学习天数，并将结果以Excel文件的形式通过HttpServletResponse返回给客户端。
- 端点: /report/user/learnExport
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): HTTP响应对象，用于导出Excel文件

#### API 325
- ID: 0067e298-376d-4944-8014-a91b06a1e191
- 名称: CourseController_exportCourseReportData
- 描述: 该API用于导出课程学习数据列表。客户端通过POST请求发送一个CourseReportDataVo对象，服务器根据该对象中的查询条件从数据库中获取课程详情数据，并使用EasyExcel库将数据填充到指定的Excel模板中，然后将生成的Excel文件作为附件返回给客户端。
- 端点: /course/exportCourseReportData
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): HTTP响应对象，用于设置响应头和输出流。

#### API 326
- ID: f4267cf0-35ec-40d9-9327-b55dc1529621
- 名称: CourseController_pageBigAndPublishCourses
- 描述: 学员端-分页查询公开课、大讲堂或百家推课。该API接收一个BigAndPublishCourseQueryVo类型的请求体，根据请求中的参数进行相应的课程筛选和分页查询，并返回ResultVo<IPage<OnlineClassDetailsVo>>类型的响应体。
- 端点: /course/page/big-pub-courses
- 方法: POST

#### API 327
- ID: fc2f2b07-8a54-4b81-8d67-54fcdf14de27
- 名称: OrganizationKanBanController_learnRateOverview
- 描述: 管理端-学习率概览：该API用于获取组织看板的学习率概览信息。客户端通过POST请求发送OrgBoardBaseRequest类型的请求体，服务器端调用service.queryOrgOverview方法处理请求，并返回ResultVo<OrgBoardBaseResponse>类型的响应。
- 端点: /org/board/learnRateOverview
- 方法: POST

#### API 328
- ID: 8e0a221c-4e1c-41a4-abd1-9a8a10f92b96
- 名称: CourseCategoryController_unlockCategories
- 描述: 管理端-批量解锁课程分类。该API接收一个包含课程分类ID列表的请求体，首先检查是否存在不存在的分类，然后筛选出当前处于锁定状态的分类，并将它们的状态更新为未锁定。
- 端点: /course/category/unlocks
- 方法: POST

#### API 329
- ID: 68a880df-1486-4c4d-8ce2-daf8649901af
- 名称: UserLearnReportController_courseLearnDetailPage
- 描述: 该API用于获取用户的课程学习详情分页信息。客户端通过POST请求发送一个包含分页信息和查询条件的CourseLearnReportRequest对象，服务器端根据请求中的参数进行分页查询，并返回一个ResultVo封装的IPage<CourseLearnReportResponse>对象。
- 端点: /report/user/courseLearnDetailPage
- 方法: POST

#### API 330
- ID: 9247aa64-5426-423a-9bfa-03384971779c
- 名称: BannerController_list
- 描述: 管理端-banner列表查询。该API用于获取所有未被删除的banner列表，并按照创建日期降序排列。
- 端点: /banner/list
- 方法: GET

#### API 331
- ID: 2a2d08e3-956b-4caa-b0b9-1a70a1aa3b6d
- 名称: CourseSectionLearnController_updateCourseLearnInfoNew
- 描述: 该API用于更新课程学习信息。客户端通过POST请求发送一个CourseSectionLearnNewVo对象，服务器端接收后调用sectionLearnService的updateCourseLearnInfoNew方法进行处理。如果处理成功，返回ResultVo<Void>的成功响应；如果发生异常，记录错误日志并返回失败响应。
- 端点: /learn/feichanglipudelujing/updateCourseLearnInfo
- 方法: POST

#### API 332
- ID: 35320fb9-1677-4574-8fbd-34025554486a
- 名称: CourseController_recommendForYou
- 描述: 学员端-为你推荐：该API用于获取为当前登录学员推荐的在线课程详情。首先从会话中获取学员账号，然后根据账号查询学员信息。接着，根据预设的推荐课程ID列表或学员信息获取推荐课程列表，并进一步筛选出学员可见的课程。最后，对筛选后的课程进行参数解析和排序后返回。
- 端点: /course/recommendForYou
- 方法: GET

#### API 333
- ID: 082a7a39-01e6-4dbc-9b07-7a84c876973b
- 名称: CourseCategoryController_getCategoryByUser
- 描述: 学员端-根据当前用户领域查询在线课程导航。该API首先获取当前用户的buCode，然后根据buCode和预设的categoryLevel查询相关的课程分类信息。接着，过滤出与用户领域匹配的课程分类，并构建层级树结构返回。
- 端点: /course/category/getCategoryByUser
- 方法: GET
- 请求参数:
  * domainCode (String): 领域代码，用于过滤课程分类

#### API 334
- ID: 1485d057-8f6b-42bf-a41e-360b374be414
- 名称: CourseController_getUserDomain
- 描述: 管理端-获取用户领域。该API根据当前用户的权限信息返回用户可以访问的领域信息。如果用户具有超级管理员或组管理员权限，则返回全员可观看的信息；否则，根据用户的业务单元、产品团队、项目团队和分类顶级权限信息返回相应的领域信息。
- 端点: /course/user/domain
- 方法: GET
- 请求参数:
  * perCode (String): 权限编码，目前未在方法中使用

#### API 335
- ID: 7d5d287b-bb49-41a1-a071-e192a4eefe5a
- 名称: CourseStudentStudyDurationController_getTeamWeekPlan
- 描述: 获取团队在指定周的学习时长计划。该API允许通过查询参数指定需要获取的周数，默认为7周。
- 端点: /course/study/duration/team-week
- 方法: GET
- 请求参数:
  * num (int): 需要获取的学习时长计划的周数，默认为7周。

#### API 336
- ID: 9a1cb28a-2ac2-4ed3-951b-c4316e23e87c
- 名称: VersionAnnouncementController_add
- 描述: 管理端用于创建或更新公告的API。该API接收一个包含公告信息的请求体，根据请求体中的ID判断是新增还是编辑公告，并进行相应的数据库操作。同时，会设置公告的状态、版本号、更新时间和创建时间等信息。
- 端点: /announcement
- 方法: POST

#### API 337
- ID: 765074fe-f04b-474e-8771-575b96459755
- 名称: CourseController_exportStudyData
- 描述: 管理端-导出学习数据。该API接收一个CourseStudyDataVo对象作为请求体，用于指定导出的学习数据条件。然后，它会查询符合条件的学习数据，并使用EasyExcel库将这些数据填充到指定的Excel模板中，最后通过HttpServletResponse将生成的Excel文件下载给客户端。
- 端点: /course/exportStudyData
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于设置HTTP响应头和输出流，以便将生成的Excel文件发送给客户端。

#### API 338
- ID: b9b7e6e9-f6ac-4dfc-9cb3-cf9ffa9759b8
- 名称: RenovationReportController_exportGetReportCourseStudentList
- 描述: 管理端-导出专业专区课程学员数据。该API接收一个包含课程信息的请求体，并利用该信息从数据库中获取相应的学员数据列表。然后，它将这些数据填充到一个预定义的Excel模板中，并通过HttpServletResponse将生成的Excel文件下载给客户端。
- 端点: /renovation/report/exportGetReportCourseStudentList
- 方法: POST
- 请求参数:
  * response (HttpServletResponse): 用于输出Excel文件的HTTP响应对象。

#### API 339
- ID: 02453ae8-c56e-4e8c-a96c-434899f0d879
- 名称: VersionAnnouncementController_queryList
- 描述: 管理端公告列表查询接口，用于根据传入的查询条件分页获取公告列表。该接口首先验证用户是否为管理员，然后根据请求中的分页信息和查询条件进行数据库查询，最后将查询结果转换为前端所需的格式。
- 端点: /announcement/queryPage
- 方法: POST


## 相关业务规则

### UserLearnReportController_courseLearnDetailExport_RuleSet
- 描述: 该规则集定义了UserLearnReportController_courseLearnDetailExport API的业务规则。
- 业务域: 课程学习报告

主要规则:
- 验证请求体: 验证传入的CourseLearnReportRequest对象是否符合预期格式。
  条件: request != null && request.getCurrent() >= 0 && request.getSize() > 0
  动作: 继续处理请求
- 设置默认分页参数: 如果没有提供分页参数，则设置默认的current为0，size为150000。
  条件: request.getCurrent() == null || request.getSize() == null
  动作: 设置request.setCurrent(0)和request.setSize(150000)
- 导出Excel文件: 使用EasyExcel工具将查询结果导出为Excel文件。
  条件: page.getRecords() != null && !page.getRecords().isEmpty()
  动作: 调用EasyExcelUtils.exportExcel方法导出Excel文件

### PublicCourseRegisterController_Rules
- 描述: 规则集用于描述PublicCourseRegisterController_getOfflinePublicCourse API的业务规则。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体BasePageVo是否为空或无效。
  条件: basePageVo == null || basePageVo.getCurrent() <= 0 || basePageVo.getSize() <= 0
  动作: 抛出异常，提示请求体无效。

### CourseController_queryHotCourses_RuleSet
- 描述: 规则集用于CourseController_queryHotCourses API的业务逻辑验证
- 业务域: 课程管理

主要规则:
- 课程未删除验证: 验证课程是否已删除
  条件: coursePo.getIsDel() == 0
  动作: 将课程加入结果列表
- 课程可见性验证: 验证课程是否对全员可见
  条件: courseStudentPo.getVisibleType() == OPEN
  动作: 将课程ID加入可见课程列表
- 课程状态有效性验证: 验证课程状态是否有效
  条件: coursePo.getStatus() == 1
  动作: 将课程加入结果列表

### RenovationZoneController_getRenovation_Rules
- 描述: 规则集用于描述RenovationZoneController_getRenovation API的业务规则。
- 业务域: 课程专区管理

主要规则:
- 验证专委会编码是否为空: 检查传入的专委会编码参数是否为空，如果不为空则继续查询专区信息。
  条件: code == null || code.isEmpty()
  动作: 抛出异常，提示专委会编码不能为空。

### CourseStudentController_getShareFields_RuleSet
- 描述: 规则集用于定义CourseStudentController_getShareFields API的业务规则。
- 业务域: 课程管理

主要规则:
- Check Course Existence: 验证给定的课程ID是否存在对应的课程共享范围信息。
  条件: studentPo == null
  动作: throw new BizBaseException("未获取到课程共享范围")
- Process Share Field Type 1: 当共享类型为1时，设置共享范围为'共享到集团内'。
  条件: studentPo.getShareFieldType() == 1
  动作: studentPo.setShareField("共享到集团内")
- Process Share Field Type 2: 当共享类型为2时，查询BU列表并设置共享范围。
  条件: studentPo.getShareFieldType() == 2 && !CollectionUtils.isEmpty(shareFieldList)
  动作: buList = courseDao.queryBuList(shareFieldList); studentPo.setShareField(buList.stream().map(XwRegisterCodeVo::getBuName).collect(Collectors.joining(", ")))
- Process Share Field Type 3: 当共享类型为3时，查询PT列表并设置共享范围。
  条件: studentPo.getShareFieldType() == 3 && !CollectionUtils.isEmpty(shareFieldList)
  动作: buList = courseDao.queryPtList(shareFieldList); studentPo.setShareField(buList.stream().map(XwRegisterCodeVo::getPtName).collect(Collectors.joining(",")))
- Process Share Field Type 4: 当共享类型为4时，查询XW列表并设置共享范围。
  条件: studentPo.getShareFieldType() == 4 && !CollectionUtils.isEmpty(shareFieldList)
  动作: buList = courseDao.queryXwList(shareFieldList); studentPo.setShareField(buList.stream().map(XwRegisterCodeVo::getXwName).collect(Collectors.joining(",")))
- Process Share Field Type 5: 当共享类型为5时，直接使用shareFieldList设置共享范围。
  条件: studentPo.getShareFieldType() == 5 && !CollectionUtils.isEmpty(shareFieldList)
  动作: studentPo.setShareField(String.join(",", shareFieldList))
- Process Share Field Type 6: 当共享类型为6时，设置共享范围为'仅自己可用'。
  条件: studentPo.getShareFieldType() == 6
  动作: studentPo.setShareField("仅自己可用")

### CourseStudentController_importUserTwo_Rules
- 描述: 规则集用于管理端导入学员API的业务逻辑验证和处理。
- 业务域: 课程管理

主要规则:
- 验证课程学员ID是否存在: 检查传入的课程学员ID是否存在于数据库中。
  条件: ObjectUtils.isEmpty(courseStudentPo)
  动作: 抛出BizBaseException异常，提示请传入正确的课程学员ID
- 验证URL是否为空: 检查传入的URL是否为空。
  条件: StringUtils.isBlank(url)
  动作: 抛出BizBaseException异常，提示请传入url
- 处理已存在的学员信息: 根据导入类型处理已存在的学员信息，包括物理删除和更新外部模式。
  条件: importType == 0 或 importType == 1
  动作: 删除或更新学员信息
- 从Redis缓存中获取学员数据: 从Redis缓存中获取学员数据。
  条件: redisService.exits(url)
  动作: 获取学员数据并进行保存或更新操作
- 更新课程学员的状态信息: 更新课程学员的状态信息，包括导入状态、文件名、文件URL、成功数量和错误数量。
  条件: importType == 0 或 importType == 1
  动作: 更新课程学员的状态信息

### ExportController_RuleSet
- 描述: 规则集用于描述ExportController_export API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体校验规则: 请求体必须符合CoursesVo.EditCoursesValid校验规则。
  条件: @RequestBody @Validated(CoursesVo.EditCoursesValid.class) CoursesVo coursesVO
  动作: 校验通过，继续执行导出逻辑。
- 获取课程详情列表: 根据请求体中的条件获取课程详情列表。
  条件: coursesVO
  动作: 调用getCourseDetailVos方法获取课程详情列表。
- 填充Excel模板: 使用EasyExcel库填充模板并生成Excel文件。
  条件: courseDetailVos
  动作: 调用ExportUtil.fillExcel方法填充Excel模板。

### Validation Rules for Committee KanBan Learn Rate VO
- 描述: 规则集用于验证CommitteeKanBanLearnRateVO对象的有效性
- 业务域: 课程管理

主要规则:
- Validate Committee KanBan Learn Rate VO: 验证CommitteeKanBanLearnRateVO对象的有效性
  条件: @Validated CommitteeKanBanLearnRateVO committeeKanBanLearnRateVO
  动作: 通过验证

### SceneCourseController_deleteScene_Rules
- 描述: 该规则集定义了SceneCourseController_deleteScene API的验证规则。
- 业务域: 课程管理

主要规则:
- ID不能为空: 验证请求参数中的ID是否为空
  条件: id == null
  动作: 抛出BizBaseException异常，提示'参数不能为空'
- 场景存在: 验证指定ID的场景是否存在
  条件: prepareDelScene == null
  动作: 抛出BizBaseException异常，提示'场景不存在'
- 场景类型为普通类型: 验证指定ID的场景类型是否为普通类型
  条件: !prepareDelScene.getSceneType().equals(SceneTypeEnum.NORMAL)
  动作: 抛出BizBaseException异常，提示'特殊场景不能删除'

### Course Publish Rules
- 描述: 规则集用于管理课程发布的各种校验和操作逻辑。
- 业务域: 课程管理

主要规则:
- Validate Course ID: 检查课程ID是否为空，如果为空则抛出异常。
  条件: courseStudentVo.getCourseId() == null
  动作: throw new BizBaseException("课程id不能为空")
- Validate Course Content: 检查课程内容是否配置完成，如果没有配置完成则抛出异常。
  条件: CollectionUtils.isEmpty(courseChapterSectionNumList) || courseChapterSectionNumList.stream().anyMatch(item -> item.getSectionNum() == 0)
  动作: throw new BizBaseException("该课程内容未配置完成，请配置完成后再发布上架")
- Validate Course Student Range and Share Range: 检查课程学员范围和共享范围是否配置完成，如果没有配置完成则抛出异常。
  条件: !courseStudentVo.getIsDefault() && (courseStudentVo.getVisibleType() == null || courseStudentVo.getShareFieldType() == null)
  动作: throw new BizBaseException("课程学员范围配置未完成，请配置完成后再发布上架")

### Validation Rules for CourseReportDataVo
- 描述: This rule set contains validation rules for the CourseReportDataVo object used in the CourseController_getCourseReportData API.
- 业务域: 课程管理

主要规则:
- Validate CourseReportDataVo: Ensure that the CourseReportDataVo object is valid and meets all necessary constraints.
  条件: @Validated annotation ensures that the CourseReportDataVo object is validated against its constraints.
  动作: Proceed with processing the request if the CourseReportDataVo object is valid.
- Check perCode for Warning Education: If the perCode field in CourseReportDataVo equals 'category-warningEducation', query warning education related courses.
  条件: courseReportDataVo.getPerCode().equals('category-warningEducation')
  动作: Invoke baseMapper.queryCourseReportWarning to fetch warning education related courses.

### ProfessionalCertificationsController_getCertProcessInfo_Rules
- 描述: 职称认证学时信息获取API的业务规则集合
- 业务域: 职称认证管理

主要规则:
- 请求体验证规则: 验证请求体是否为空
  条件: request == null
  动作: 抛出异常或返回错误响应
- 用户信息验证规则: 验证用户信息是否存在
  条件: currentEmpSn == null
  动作: 返回空的CertProcessVo对象
- 学时信息分组规则: 根据课程类型对学时信息进行分组
  条件: certProcessInfo != null && !certProcessInfo.isEmpty()
  动作: 计算公需课和专业课的总学时，并按年份分组
- 逻辑分页规则: 根据请求中的页码和每页大小对学时信息进行分页
  条件: newCertProcessInfo != null
  动作: 跳过指定数量的记录并限制每页的记录数
- 数值格式化规则: 将学时信息转换为小时格式
  条件: vo != null
  动作: 调用buildTimeFormat方法进行格式化

### CourseSectionLearnController_Rules
- 描述: 该规则集定义了CourseSectionLearnController_queryCourseLearnDetail API的业务规则。
- 业务域: 课程学习管理

主要规则:
- 请求体验证规则: 验证请求体是否为CourseLearnDetailRequest类型
  条件: 请求体类型为CourseLearnDetailRequest
  动作: 继续处理请求

### UserLearnReportController_queryDimension_Rules
- 描述: 规则集用于定义UserLearnReportController_queryDimension API的业务规则
- 业务域: 学习报告管理

主要规则:
- 组织维度查询权限验证: 验证用户是否有足够的权限查询组织维度信息
  条件: request.getDimensionType().equals("org") && (dataPermissionList.contains(Role.SUPERADMIN) || dataPermissionList.contains(Role.GROUPADMIN))
  动作: 返回所有组织维度信息
- 专委会维度查询权限验证: 验证用户是否有足够的权限查询专委会维度信息
  条件: request.getDimensionType().equals("category") && dataPermissionList.contains(Role.SUPERADMIN)
  动作: 返回所有专委会维度信息
- 数据平铺规则: 根据请求参数决定是否平铺返回的数据
  条件: request.getWhetherTiled() != null && request.getWhetherTiled().equals(1)
  动作: 平铺返回的数据

### AllowListController_Rules
- 描述: 管理端-添加白名单的业务规则集合
- 业务域: 课程管理

主要规则:
- Check User Permissions: 验证当前登录用户是否有权限管理白名单
  条件: CollectionUtils.isEmpty(roleList)
  动作: throw new BizBaseException("当前登陆人无权限管理权限")
- Check Superadmin Permissions: 验证当前登录用户是否有超管权限管理白名单
  条件: CollectionUtils.isEmpty(collect)
  动作: throw new BizBaseException("当前登陆人无超管权限管理白名单")
- Validate Domain Address: 验证提供的域名地址是否有效
  条件: new URL(domainNameAddress) throws MalformedURLException
  动作: throw new BizBaseException("请检查外部链接地址")
- Check Domain Existence: 验证提供的域名地址是否已存在于白名单中
  条件: CollectionUtils.isNotEmpty(allowListPos)
  动作: throw new BizBaseException("该链接已经存在")

### VersionAnnouncementController_Rules
- 描述: 与VersionAnnouncementController_queryAnnoDetail API相关的业务规则集合。
- 业务域: 课程公告管理

主要规则:
- Validate Version Announcement ID: 检查传入的versionAnnoId是否为有效的Long类型值。
  条件: versionAnnoId != null && versionAnnoId > 0
  动作: 继续执行查询操作。
- Set Publish Type String: 根据查询结果中的publishType字段设置publishTypeStr字段，以区分公告发布的目标端（管理端或学员端）。
  条件: versionAnnoDetailVo.getPublishType() == 0
  动作: 设置publishTypeStr为'管理端'。

### CourseCategoryController_getCourseCategoryRootTree_Rules
- 描述: 规则集用于管理CourseCategoryController_getCourseCategoryRootTree API的业务逻辑
- 业务域: 课程管理

主要规则:
- 验证领域或者专委会编码是否为空: 检查传入的perCode参数是否为空，如果为空则抛出异常
  条件: perCode.isEmpty()
  动作: 抛出异常，提示领域或者专委会编码不能为空
- 根据角色设置子分类: 根据角色权限设置子分类，如果是警告教育领域编码则调用setChildrenCourseCategoryNew方法，否则调用setChildrenCourseCategory方法
  条件: Role.WarningEducationDomainCode.equals(code)
  动作: 调用setChildrenCourseCategoryNew方法
- 设置课程数量: 如果需要课程数量，则调用setCategoryNameCourseCount方法计算总课程数量，并更新根节点的课程数量和标签
  条件: BooleanEnum.YES.getValue() == isNeedCourseNum
  动作: 调用setCategoryNameCourseCount方法，计算总课程数量，更新根节点的课程数量和标签
- 添加草稿箱节点: 如果需要包含草稿箱中的课程，则创建草稿箱节点并添加到分类树中
  条件: BooleanEnum.YES.getValue() == isNeedDrafts
  动作: 创建草稿箱节点，设置其属性，并添加到分类树中

### CourseController_queryOnboardingCourse_RuleSet
- 描述: 该规则集定义了CourseController_queryOnboardingCourse API的业务规则。
- 业务域: 新员工培训

主要规则:
- 验证OnboardingCoursePo对象: 验证请求体中的OnboardingCoursePo对象是否包含有效的courseIds和account信息。
  条件: po != null && po.getCourseIds() != null && !po.getCourseIds().isEmpty() && po.getAccount() != null && !po.getAccount().isEmpty()
  动作: 继续处理请求

### CourseCategoryController_Rules
- 描述: 与CourseCategoryController_getUserHomeCategories相关的业务规则集合
- 业务域: 课程管理

主要规则:
- 用户存在性验证: 验证当前登录用户是否存在于数据库中
  条件: bscEmployeeDao.selectOne(...) == null
  动作: throw new BizBaseException("用户不存在")

### CourseStudentController_RuleSet
- 描述: 规则集用于管理CourseStudentController中的业务逻辑
- 业务域: 课程管理

主要规则:
- Validate CourseStudentVo: 验证请求体中的CourseStudentVo对象是否有效
  条件: @Validated注解确保CourseStudentVo对象的有效性
  动作: 通过验证
- Set Flag: 设置CourseStudentVo对象的flag属性为true
  条件: 请求到达时
  动作: courseStudentVo.setFlag(true)
- Process Share Persons: 处理共享人员信息
  条件: courseStudentVo.getFlag()为true
  动作: 去重后设置courseStudentPo的sharePerson属性
- Delete Users Based on Visible Type: 根据visibleType删除相关用户信息
  条件: courseStudentVo.getId()不为空且visibleType不等于特定常量
  动作: 调用相应DAO的deleteUsers方法
- Save Batch CourseStudentCustomListPo: 从缓存中获取并保存批量的CourseStudentCustomListPo对象
  条件: visibleType为DESIGNATED_PERSON_VISIBLE且importStatus为1且缓存存在
  动作: 调用courseStudentCustomListDao的saveBatch方法
- Save Batch CourseStudentDesignListPo: 从缓存中获取并保存批量的CourseStudentDesignListPo对象
  条件: visibleType为NEW_DESIGNATED_PERSON_VISIBLE且缓存存在
  动作: 调用courseStudentDesignListDao的saveBatch方法
- Process Designated Person: 处理手动输入的指定人员信息
  条件: visibleType为NEW_DESIGNATED_PERSON_VISIBLE且designatedPerson不为空
  动作: 分割字符串并保存到数据库
- Update Permissions: 根据visibleType更新权限信息
  条件: visibleType不等于SCOPE_OF_AUTHORITY
  动作: 设置permissions和permissionsCode为空
- Update Category Codes: 根据categoryTopCode更新分类代码信息
  条件: categoryTopCode为空
  动作: 设置所有分类代码及其名称为空
- Update Num: 根据visibleType更新学员数量
  条件: visibleType为DESIGNATED_PERSON_VISIBLE
  动作: 计算并更新学员数量

### RenovationBannerController_Rules
- 描述: 规则集，定义了RenovationBannerController_checkHaierWeb API的校验逻辑。
- 业务域: 网站管理

主要规则:
- Check URL Validity and Existence in Allow List: 验证给定的URL是否有效，并检查该URL是否存在于允许列表中。
  条件: URL is valid and exists in the allow list with the specified type.
  动作: Return ResultVo.success(true).

### CourseStudentStudyDurationController_Rules
- 描述: 管理端获取团队每周学习时长计划的业务规则集
- 业务域: 课程管理

主要规则:
- 检查Redis缓存: 检查Redis缓存中是否存在对应的学习时长数据
  条件: StringUtils.isNotBlank(redisService.getString(redisKey))
  动作: 返回缓存中的学习时长数据
- 根据权限类型选择服务: 根据管理员权限类型选择合适的服务获取学习时长数据
  条件: 'org'.equals(adminPermission.getPerType())
  动作: 调用courseStudyDomainDurationService.listOnWeekPlan(num, adminPermission)
- 缓存学习时长数据: 如果获取到的学习时长数据不为空，则将其存入Redis缓存
  条件: CollectionUtils.isNotEmpty(dayStudyDurations)
  动作: redisService.set(redisKey, JSONUtil.toJsonStr(dayStudyDurations), 1, TimeUnit.HOURS)

### Validation Rules for CourseCategoryController
- 描述: A set of validation rules for the CourseCategoryController API.
- 业务域: 课程管理

主要规则:
- Validate perCode Not Empty: Ensure that the perCode parameter is not empty.
  条件: perCode.isEmpty()
  动作: Throw an exception with message '领域或者专委会编码不能为空'

### CourseCategoryController_getInstanceList_RuleSet
- 描述: 规则集用于CourseCategoryController_getInstanceList API的参数验证和业务逻辑处理
- 业务域: 课程管理

主要规则:
- 验证领域或者专委会编码是否为空: 如果perCode参数为空，则抛出异常提示领域或者专委会编码不能为空
  条件: perCode == null || perCode.isEmpty()
  动作: 抛出异常，提示领域或者专委会编码不能为空
- 获取最高权限选项: 调用adminDataPermissionService的getHighestPermissionOption方法获取最高权限选项
  条件: perCode != null && !perCode.isEmpty()
  动作: 调用adminDataPermissionService.getHighestPermissionOption(perCode)
- 构建查询树DTO: 根据最高权限选项构建QueryTreeDto对象，设置相关属性
  条件: true
  动作: 构建QueryTreeDto对象，设置categoryLevel、disabled、isNeedCourseNum、roleLevel、dimensionCode、perType、publishStatus
- 获取一级课程分类树: 调用courseCategoryService的getCourseCategoryLevelTree方法获取一级课程分类树
  条件: true
  动作: 调用courseCategoryService.getCourseCategoryLevelTree(roleCode, queryTreeDto, code)
- 获取课程数量: 调用courseCategoryService的getCategoryCourseNums方法获取课程数量
  条件: true
  动作: 调用courseCategoryService.getCategoryCourseNums(roleCode, queryTreeDto)
- 获取二级课程分类树: 调用courseCategoryService的getCourseCategoryLevelTree方法获取二级课程分类树
  条件: true
  动作: 调用courseCategoryService.getCourseCategoryLevelTree(roleCode, queryTreeDto, code)
- 匹配子分类: 遍历一级课程分类树，匹配子分类并设置课程数量
  条件: true
  动作: 遍历categoryList，调用matchChildrenCategory(childrenCategoryList, categoryCourseNums, category, queryTreeDto)
- 过滤子分类: 过滤子分类，只保留课程数量大于0的子分类
  条件: true
  动作: 遍历categoryList，过滤childrenCategoryList中课程数量大于0的子分类
- 过滤一级分类: 过滤一级分类，只保留课程数量大于0的一级分类
  条件: true
  动作: 过滤categoryList中课程数量大于0的一级分类

### CourseCategoryController_getCategoryRole_RuleSet
- 描述: 规则集用于验证和处理CourseCategoryController_getCategoryRole API的请求和响应。
- 业务域: 课程管理与权限控制

主要规则:
- 验证权限代码: 验证请求体中的perCode字段是否有效。
  条件: userLevel.getPerCode() != null && !userLevel.getPerCode().isEmpty()
  动作: 继续处理请求，调用adminDataPermissionService.getHighestPermissionOption(userLevel.getPerCode())

### UserLearnReportController_planningLearnDetailExport_Rules
- 描述: 该规则集定义了UserLearnReportController_planningLearnDetailExport API的业务规则。
- 业务域: 课程学习报告

主要规则:
- 请求体验证规则: 验证请求体是否符合预期格式和内容
  条件: request != null && request.getUserCode() != null && request.getCurrent() >= 0 && request.getSize() > 0
  动作: 继续处理请求
- 数据整合规则: 整合从数据库获取的学习计划数据，并计算完成进度
  条件: pager.getRecords() != null && !pager.getRecords().isEmpty()
  动作: 整合数据并计算完成进度
- Excel导出规则: 将整合后的数据导出为Excel文件
  条件: response != null && pager.getRecords() != null
  动作: 导出Excel文件

### RenovationOrgBannerController_delete_RuleSet
- 描述: 该规则集定义了RenovationOrgBannerController_delete API的业务规则。
- 业务域: 装修组织横幅管理

主要规则:
- 验证ID有效性: 检查传入的ID是否为有效的Long类型，并且在数据库中存在对应的横幅记录。
  条件: id != null && baseMapper.selectById(id) != null
  动作: 继续执行删除操作。

### MsgRecordController_sendFeiShuInteractive_RuleSet
- 描述: 规则集用于定义MsgRecordController_sendFeiShuInteractive API的行为逻辑
- 业务域: 课程通知

主要规则:
- 验证id参数: 检查传入的id参数是否为'1'，以决定调用哪个方法
  条件: id.equals('1')
  动作: 调用respondService.sendFeiShuInteractive(1909065097658118146L)

### TrainPlanningController_queryPlanningCounts1_RuleSet
- 描述: 规则集用于定义TrainPlanningController_queryPlanningCounts1 API的业务规则。
- 业务域: 课程规划

主要规则:
- Filter Non-Compulsory Plans: 过滤掉仅包含选修课程的计划。
  条件: CollectionUtils.isNotEmpty(planningIdList) && planningIdList.stream().allMatch(id -> baseMapper.queryCompulsoryCount(id) == 0)
  动作: countsDetailVo = new TrainPlanningCountsDetailVo(); defaultCount(countsDetailVo);
- Calculate No Study Count: 计算未开始学习的计划数量。
  条件: countsDetailVo != null
  动作: countsDetailVo.setNoStudyCount(planningIdList.size() - (countsDetailVo.getFinishCount() + countsDetailVo.getStudyingCount()));

### UserLearnReportController_Rules
- 描述: 与UserLearnReportController_studyLearnExport相关的业务规则集合
- 业务域: 课程学习报告

主要规则:
- StudyReportRequest有效性验证: 验证StudyReportRequest对象是否有效，包括检查queryDimension字段是否为空
  条件: StringUtils.isEmpty(request.getQueryDimension())
  动作: 返回空的IPage对象
- 用户学习数据查询: 根据StudyReportRequest对象中的查询维度、当前页码和每页大小查询用户的学习数据
  条件: request.getQueryDimension() != null
  动作: 调用courseStudentStudyDurationDao的相关方法查询用户学习数据
- 用户学习数据分批处理: 当用户数量大于等于30000时，将用户数据分批处理以提高性能
  条件: partition.size() >= 3
  动作: 调用completeResponse方法对用户学习数据进行分批处理
- 学习时长计算: 根据查询结果计算每个用户的每日学习时长、总学习时长和平均每日学习时长
  条件: CollectionUtil.isNotEmpty(pager.getRecords())
  动作: 遍历pager.getRecords()，计算每个用户的每日学习时长、总学习时长和平均每日学习时长
- 学习天数修正: 如果用户的总学习天数为0但总学习时长不为0，则将总学习天数修正为1
  条件: response.getTotalDays().equals("0") && !response.getTotalDuration().equals("00:00:00")
  动作: 将response.getTotalDays()设置为"1"

### CourseChapterController_getCourseChapter_Rules
- 描述: 规则集用于描述CourseChapterController_getCourseChapter API的具体业务规则。
- 业务域: 课程管理

主要规则:
- 验证courseId有效性: 检查courseId是否为空或无效。
  条件: courseId == null || courseId <= 0
  动作: 抛出异常或返回错误信息
- 根据课程来源类型和editFlag设置taskType: 如果课程来源类型为2且editFlag不为空，则将每个章节的子节点的taskType设置为5。
  条件: coursePo.getCourseSourceType() == 2 && StringUtils.isNotBlank(editFlag)
  动作: treeVo.getChildren().forEach(child -> child.setTaskType(5));

### CourseSectionLearnController_flushStudyStatus_RuleSet
- 描述: 该规则集定义了CourseSectionLearnController_flushStudyStatus API的业务规则。
- 业务域: 课程学习管理

主要规则:
- Course ID有效性验证: 验证传入的courseId是否为有效的Long类型数值。
  条件: courseId != null && courseId > 0
  动作: 继续执行刷新学习状态的操作。

### BannerController_Rules
- 描述: 管理端-banner列表查询相关的业务规则集合
- 业务域: 课程管理

主要规则:
- 未删除Banner查询规则: 查询所有isDel字段为0的banner记录，并按照createDate字段降序排列。
  条件: bannerPo.getIsDel() == 0
  动作: 将符合条件的bannerPo对象转换为BannerQueryResponse对象，并添加到结果列表中

### Validation Rules for CourseSectionVo
- 描述: A set of validation rules to ensure the integrity and correctness of the CourseSectionVo object.
- 业务域: 课程管理

主要规则:
- Validate CourseSectionVo Object: Ensures that the CourseSectionVo object is valid before processing it in the addCourseSection method.
  条件: @Validated annotation ensures that the CourseSectionVo object meets all constraints defined in its class.
  动作: Proceed with adding or updating the course section.

### ThirdPartyController_syncFullRecord_RuleSet
- 描述: 该规则集定义了ThirdPartyController_syncFullRecord API的业务规则，包括请求体验证和同步操作。
- 业务域: 课程学习记录同步

主要规则:
- 请求体验证规则: 验证请求体是否为有效的ThirdCourseStudyRecordSyncService.FullParam对象。
  条件: param instanceof ThirdCourseStudyRecordSyncService.FullParam
  动作: 继续处理请求，调用syncService.syncFull(param)。

### ProfessionalCertificationsController_Rules
- 描述: 该规则集定义了ProfessionalCertificationsController_getProfessionalCertPersonInfo API的业务规则。
- 业务域: 专业认证管理

主要规则:
- 验证Access-Token有效性: 从HttpServletRequest中获取Access-Token，并验证其有效性。
  条件: token != null && !token.isEmpty()
  动作: 继续处理请求
- 验证用户信息获取的成功性: 调用userInfoFeign.getUserInfo和getUserInfoRoleByUserId方法获取用户信息和角色信息，并验证其成功性。
  条件: resultUserInfo.getCode() == 0 && userInfoRoleVoResultVo.getCode() == 0
  动作: 继续处理请求
- 验证公司信息获取的成功性: 调用professionalCertificationsMapper.getEmpInfoCompany方法获取用户的公司名称，并验证其成功性。
  条件: empInfoCompany != null
  动作: 设置公司名称

### CourseSectionLearnController_Rules
- 描述: 规则集用于CourseSectionLearnController_getIsLikeById API的业务逻辑验证。
- 业务域: 课程学习

主要规则:
- Validate Section ID: 验证传入的sectionId是否为有效的Long类型。
  条件: sectionId != null && sectionId > 0
  动作: 继续处理请求，调用sectionLearnService.getIsLikeById(sectionId)

### UserLearningDurationDataController_learningRateSave_Rules
- 描述: 该规则集定义了UserLearningDurationDataController_learningRateSave API的业务规则。
- 业务域: 学习进度管理

主要规则:
- Param参数验证: 验证param参数是否为空，如果为空则使用昨天的日期作为默认值。
  条件: param == null
  动作: 使用昨天的日期作为默认值
- StartDate和EndDate验证: 验证ParamObj对象中的startDate和endDate字段是否非空，如果非空则刷新指定时间段内的学习率数据。
  条件: StringUtils.isNotBlank(startDate) && StringUtils.isNotBlank(endDate)
  动作: 刷新指定时间段内的学习率数据

### OrganizationKanBanController_courseScorePage_RuleSet
- 描述: 该规则集定义了处理POST请求以获取组织看板中的课程满意度评分分页数据时所需的验证规则和业务规则。
- 业务域: 课程满意度管理

主要规则:
- 课程请求验证规则: 验证请求体是否为有效的OrgBoardCourseRequest对象。
  条件: request != null && request.isValid()
  动作: 继续处理请求，调用courseScoreSecondPage服务。

### RenovationController_stopDecoration_Rules
- 描述: 管理端停用装修功能的业务规则集合
- 业务域: 装修管理

主要规则:
- 验证code参数: 检查传入的code参数是否为空或无效
  条件: code == null || code.isEmpty()
  动作: 抛出异常或返回错误信息
- 获取最高权限选项: 通过code获取最高权限选项
  条件: code != null && !code.isEmpty()
  动作: 调用adminDataPermissionService.getHighestPermissionOption(code)
- 获取装修结果列表: 根据权限选项获取相关的装修结果列表
  条件: adminPermissionVO != null
  动作: 调用baseMapper.getWayOneByCode(renovationCode, perType)
- 更新装修结果状态: 如果存在相关装修结果，则更新这些结果的状态为停用
  条件: CollectionUtils.isNotEmpty(wayOneList)
  动作: 调用renovationWayOneService.updateStopStatusByRenovationId(collectPub)
- 更新数据库记录: 更新数据库中与code和权限类型匹配的记录
  条件: adminPermissionVO != null
  动作: 调用baseMapper.updateByCode(renovationCode, perType)
- 清除装修模块缓存: 清除相关的装修模块缓存
  条件: true
  动作: 调用renovationModuleService.deleteZonesCache()

### BannerController_save_RuleSet
- 描述: 管理端-banner新增接口的业务规则集合
- 业务域: 广告管理

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则抛出异常
  条件: request == null
  动作: 抛出异常
- 用户信息获取: 从当前会话中获取用户信息
  条件: webSessionUtils.getUserInfo() != null
  动作: 获取用户信息
- 请求体转换: 将BannerSaveRequest对象转换为BannerPo对象
  条件: request != null
  动作: 转换请求体
- 设置领域代码: 将BannerPo对象的领域代码设置为当前用户的业务代码
  条件: userInfo.getBuCode() != null
  动作: 设置领域代码
- 插入广告横幅信息: 将BannerPo对象插入数据库
  条件: bannerPo != null
  动作: 插入广告横幅信息

### CourseCategoryController_editCategoryPosition_Rules
- 描述: 规则集用于管理CourseCategoryController_editCategoryPosition API的业务规则
- 业务域: 课程管理

主要规则:
- 验证分类是否存在: 根据传入的分类ID获取对应的课程分类实体，如果分类不存在则抛出异常
  条件: categoryPo == null
  动作: throw new BizBaseException("该目录不存在")
- 验证维度编码是否为空: 检查该分类的维度编码，如果为空则抛出异常
  条件: dimensionCodes.length == 0
  动作: throw new BizBaseException("课程目录权限错误")
- 验证顺序号的有效性: 验证顺序号的有效性，如果小于0则设置为0，如果大于列表大小则设置为列表大小
  条件: orderNo < 0 || orderNo > courseCategoryPos.size()
  动作: if (orderNo < 0) { orderNo = 0; } if (orderNo > courseCategoryPos.size()) { orderNo = courseCategoryPos.size(); }

### CourseController_insertHistoryData_RuleSet
- 描述: 该规则集定义了CourseController_insertHistoryData API的业务规则。
- 业务域: 课程管理

主要规则:
- 验证用户信息是否为空: 检查从数据库查询到的学生信息是否为空。
  条件: CollectionUtils.isEmpty(studentPos)
  动作: 不执行后续操作，直接返回成功响应。
- 验证用户详细信息是否为空: 检查通过Feign客户端获取的用户详细信息是否为空。
  条件: ObjectUtils.isEmpty(data) || ObjectUtils.isEmpty(data.getUserInfo())
  动作: 跳过当前用户，继续处理下一个用户。

### Validation Rules for CourseSectionLearnController
- 描述: This rule set contains validation rules for the CourseSectionLearnController API.
- 业务域: 课程管理

主要规则:
- Validate CourseCommentVo Object: Ensures that the CourseCommentVo object provided in the request body is valid according to the defined constraints.
  条件: @Validated annotation ensures that the CourseCommentVo object meets all the validation constraints defined in its class.
  动作: Proceed with the API execution if the CourseCommentVo object is valid.

### CourseSectionLearnController_clickLikeCourse_RuleSet
- 描述: 该规则集定义了CourseSectionLearnController_clickLikeCourse API的业务规则。
- 业务域: 课程学习与互动

主要规则:
- Validate ClickLikeCourseVo: 验证请求体是否符合ClickLikeCourseVo的约束。
  条件: 请求体为有效的ClickLikeCourseVo对象
  动作: 继续处理点赞逻辑
- Handle Like Course: 调用sectionLearnService的clickLikeCourse方法来处理点赞逻辑。
  条件: 请求体验证通过
  动作: 调用sectionLearnService.clickLikeCourse(clickLikeCourseVo)
- Return Success Response: 如果点赞成功，返回成功的ResultVo<Void>响应。
  条件: sectionLearnService.clickLikeCourse(clickLikeCourseVo)执行成功
  动作: return ResultVo.success()
- Handle Exception: 如果发生异常，记录错误日志并返回失败的ResultVo<Void>响应。
  条件: sectionLearnService.clickLikeCourse(clickLikeCourseVo)抛出异常
  动作: ex.printStackTrace(); log.error("clickLikeCourseErrorEnd", ex); return ResultVo.fail("clickLikeCourse error");

### CourseController_Rules
- 描述: 规则集用于CourseController中的业务逻辑验证。
- 业务域: 课程管理

主要规则:
- Validate Course ID Exists: 验证提供的课程ID是否存在于数据库中。
  条件: courseService.getRoleId(id) != null
  动作: 返回ResultVo.success(roleId)

### SceneCourseController_queryThemeAndCourseList_RuleSet
- 描述: 该规则集定义了SceneCourseController_queryThemeAndCourseList API的业务规则。
- 业务域: 课程管理

主要规则:
- Validate_sceneId_not_null: 验证场景ID是否为空，如果为空则抛出异常。
  条件: sceneId == null
  动作: throw new BizBaseException("场景id不能为空")

### RenovationReportController_exportGetReportEvaluationList_RuleSet
- 描述: 规则集用于管理端-导出专业专区课程学员评价数据的API。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体是否为空，如果为空则不进行后续操作。
  条件: CollectionUtils.isEmpty(list)
  动作: return ResultVo.success();
- Set Pagination Parameters: 设置当前页码和每页大小。
  条件: renvationCourseEvaluationVo != null
  动作: renvationCourseEvaluationVo.setCurrent(1); renvationCourseEvaluationVo.setSize(50000);
- Generate Report Evaluation List: 根据请求体中的参数获取报告评估列表。
  条件: renvationCourseEvaluationVo != null
  动作: IPage<ReportStudentEvaluationVo> reportEvaluationList = getReportEvaluationList(renvationCourseEvaluationVo);
- Export to Excel: 将生成的报告评估列表导出为Excel文件。
  条件: reportEvaluationList != null && !CollectionUtils.isEmpty(reportEvaluationList.getRecords())
  动作: ExportUtil.fillExcel(response, fileName, templateName, list);

### CourseCommentReplyController_topThisComment_RuleSet
- 描述: 规则集用于处理课程评价置顶API的业务逻辑
- 业务域: 课程评价管理

主要规则:
- 验证课程评价是否存在: 根据传入的ID查询课程评价，如果评价不存在则抛出异常
  条件: courseSectionCommentDao.selectById(id) == null
  动作: throw new BizBaseException("根据评价id未查询到课程评价")
- 验证课程是否存在: 根据课程评价的courseId查询课程，如果课程不存在则抛出异常
  条件: courseDao.selectById(courseSectionCommentPo.getCourseId()) == null
  动作: throw new BizBaseException("该课程已经不存在")
- 验证当前用户信息是否为空: 获取当前用户的角色信息，如果用户信息为空则抛出异常
  条件: currentRoleInfo.getUserInfo() == null
  动作: throw new BizBaseException("当前用户信息为空")

### CommitteeCommentController_delCommitteeComment_RuleSet
- 描述: 规则集用于描述CommitteeCommentController_delCommitteeComment API的业务规则。
- 业务域: 课程评价管理

主要规则:
- 验证评论ID是否存在且属于当前用户: 检查传入的评论ID是否存在于数据库中，并且该评论是否属于当前登录用户。
  条件: committeeCommentPo == null || !StringUtil.equals(userInfo.getEmpsn(), committeeCommentPo.getUserNo())
  动作: throw new BizBaseException("该评价已经删除，请勿重复删除")

### CourseStudentController_Rules
- 描述: 规则集用于验证和处理CourseStudentController_getStudentByCourseId API的请求和响应。
- 业务域: 课程管理

主要规则:
- CourseIDNotNull: 验证课程ID是否为空。
  条件: courseId == null
  动作: 抛出BizBaseException异常，提示'外部编辑课程学员范围时，课程id不能未空'
- CourseExists: 验证课程是否存在。
  条件: coursePo == null
  动作: 抛出BizBaseException异常，提示'外部编辑课程学员范围时，未获取到课程'
- CoursePublished: 验证课程状态是否已发布。
  条件: coursePo.getStatus() == 0
  动作: 抛出BizBaseException异常，提示'未发布的课程，不允许在外部编辑课程学员范围'

### CourseChapterEditRules
- 描述: 规则集用于管理端修改课程大纲章的API。包括对请求体的校验以及数据转换和更新的规则。
- 业务域: 课程管理

主要规则:
- Validate CourseChapteVo: 对传入的CourseChapteVo对象进行校验，确保其符合编辑课程章节的要求。
  条件: @Validated(CourseChapteVo.EditCourseChapteValid.class)
  动作: 校验通过，继续处理
- Convert CourseChapteVo to CourseChapterPo: 将CourseChapteVo对象转换为CourseChapterPo对象，以便后续的数据持久化操作。
  条件: courseChapteVo != null
  动作: 转换成功，继续处理
- Update CourseChapter in Database: 通过courseChapterService的editCourseChapter方法更新数据库中的课程章节信息。
  条件: courseChapterPo != null
  动作: 更新成功，返回成功响应

### StudentCollectionController_queryLectureRoomCategory_RuleSet
- 描述: 规则集用于验证和处理StudentCollectionController_queryLectureRoomCategory API的逻辑
- 业务域: 课程管理

主要规则:
- 用户账号验证规则: 验证用户账号是否为空
  条件: account == null || account.isEmpty()
  动作: 抛出BizBaseException异常，提示'未获取到用户账号'
- 百家讲堂领域编码验证规则: 验证百家讲堂领域编码是否为空
  条件: lectureRoomBuCodes == null || lectureRoomBuCodes.isEmpty()
  动作: 抛出BizBaseException异常，提示'未获取到百家讲堂领域编码'
- 用户可见课程ID列表获取规则: 根据用户账号和百家讲堂领域编码获取用户可见的课程ID列表
  条件: lectureRoomBuList != null && !lectureRoomBuList.isEmpty()
  动作: 调用QueryOnlineClassListLogic的getVisibleIdsForLectureRoom方法获取visibleIds
- 用户可见课程分类筛选规则: 根据用户可见的课程ID列表筛选出用户有权限访问的课程分类
  条件: visibleIds != null && !visibleIds.isEmpty()
  动作: 查询课程信息并筛选出用户有权限访问的课程分类
- 用户可见平台课程筛选规则: 根据用户可见的课程ID列表和平台编码筛选出用户有权限访问的平台课程
  条件: result != null && !result.isEmpty()
  动作: 查询平台课程并筛选出用户有权限访问的平台课程
- 平台课程分类组装规则: 将筛选出的平台课程分类信息组装成树形结构
  条件: childrenMap != null && !childrenMap.isEmpty()
  动作: 将子分类信息添加到父分类中

### VersionAnnouncementController_add_RuleSet
- 描述: 管理端创建或更新公告API的业务规则集合
- 业务域: 课程管理

主要规则:
- PublishType默认值设置规则: 如果请求体中的publishType字段为空，则默认设置为0
  条件: request.getPublishType() == null
  动作: request.setPublishType(0)
- 公告新增或编辑规则: 根据请求体中的ID字段判断是新增还是编辑公告
  条件: request.getId() == null
  动作: 执行新增公告逻辑

### AllowListController_updateAllowlist_RuleSet
- 描述: 规则集用于管理AllowListController_updateAllowlist API的业务规则
- 业务域: 白名单管理

主要规则:
- Check ID Existence: 验证AllowListVo对象中的ID字段是否为空
  条件: allowListVo.getId() == null
  动作: 抛出BizBaseException异常，提示'主键id不能为空'
- Check User Permissions: 验证当前登录用户是否有权限管理白名单
  条件: CollectionUtils.isEmpty(roleList)
  动作: 抛出BizBaseException异常，提示'当前登陆人无权限管理权限'
- Check Superadmin Role: 验证当前登录用户是否具有超级管理员权限
  条件: CollectionUtils.isEmpty(collect)
  动作: 抛出BizBaseException异常，提示'当前登陆人无超管权限管理白名单'
- Validate Domain Address: 验证AllowListVo对象中的域名地址是否有效
  条件: new URL(domainNameAddress) throws MalformedURLException
  动作: 抛出BizBaseException异常，提示'请检查外部链接地址'
- Check Domain Existence: 验证该域名地址是否已存在于白名单中
  条件: CollectionUtils.isNotEmpty(allowListPos)
  动作: 抛出BizBaseException异常，提示'该链接已经存在'

### CourseCategoryController_get2CategoryByFirst_RuleSet
- 描述: 规则集用于处理/course/category/get2CategoryByFirst API的业务逻辑。
- 业务域: 课程分类管理

主要规则:
- CheckFirstCategoryCourses: 检查指定的一级分类下是否有课程。
  条件: courseService.getAllCategoryCourseNum(id) == 0
  动作: return new ArrayList<>(0)
- FilterSecondCategoryWithoutCourses: 过滤掉没有课程的二级分类。
  条件: courseService.getAllCategoryCourseNum(idCh) == 0
  动作: courseCategoryPos.removeIf(o -> o.getId().equals(idCh))

### UnlockCategoriesRules
- 描述: 规则集用于管理批量解锁课程分类的业务逻辑
- 业务域: 课程管理

主要规则:
- CheckForNonExistentCategories: 检查请求体中的课程分类是否存在
  条件: 存在不存在的课程分类
  动作: 抛出异常或返回错误信息
- FilterLockedCategories: 筛选出当前处于锁定状态的课程分类
  条件: 课程分类处于锁定状态
  动作: 将这些分类的状态更新为未锁定

### CourseMoveValidationRules
- 描述: 规则集用于验证课程移动API的输入参数和业务逻辑
- 业务域: 课程管理

主要规则:
- CheckUserMovePermission: 检查用户是否有移动课程的权限
  条件: right != null && right == 0
  动作: 抛出BizBaseException("无课程移动权限")
- CheckDraftCourses: 检查课程是否处于草稿状态
  条件: !CollectionUtils.isEmpty(draftCourses)
  动作: 抛出BizBaseException("无法移动草稿课程")
- CheckTargetCategoryLevel: 检查目标目录是否为末级目录
  条件: CollectionUtils.isNotEmpty(childrenIds)
  动作: 抛出BizBaseException("课程移动目标目录不是末级目录")
- CheckPermissionCodeFormat: 验证权限码格式
  条件: StringUtils.isEmpty(moveCourseVo.getPerCode()) || moveCourseVo.getPerCode().split("-").length != 2
  动作: 抛出BizBaseException("权限码有误")

### OrganizationKanBanController_courseStudyDetail_Rules
- 描述: 该规则集定义了OrganizationKanBanController_courseStudyDetail API的业务规则。
- 业务域: 课程学习统计

主要规则:
- 请求体验证规则: 验证请求体是否为空或无效。
  条件: request == null || !request.isValid()
  动作: 抛出异常或返回错误响应

### ExamOverviewRules
- 描述: 规则集用于管理考试总览API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体是否为空或不符合预期格式。
  条件: request == null || !isValid(request)
  动作: 抛出异常或返回错误响应

### Course Management Rules
- 描述: 规则集，用于定义课程管理相关的业务规则。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体是否符合OrgBoardBaseRequest格式。
  条件: request instanceof OrgBoardBaseRequest
  动作: 继续处理请求

### RecentStudyController_Rules
- 描述: 规则集用于RecentStudyController_addRecentLearn API的数据校验和权限检查
- 业务域: 课程学习管理

主要规则:
- 验证RecentStudyVo对象的有效性: 检查RecentStudyVo对象是否为空
  条件: recentStudyVo == null
  动作: 抛出BizBaseException异常，提示'最近在学入参为空'
- 验证业务类型是否正确: 检查RecentStudyVo对象的businessType字段是否为1
  条件: recentStudyVo.getBusinessType() == null || recentStudyVo.getBusinessType() != 1
  动作: 抛出BizBaseException异常，提示'最近在学业务类型有误'
- 验证业务ID是否有效: 检查RecentStudyVo对象的businessId字段是否为空，并查询对应的课程信息是否存在
  条件: recentStudyVo.getBusinessId() == null || coursePo == null
  动作: 抛出BizBaseException异常，提示'最近在学业务ID为空'或'未获取到课程基本信息'
- 验证学员对课程的可见性: 调用courseStudentCustomListService的isLook方法来检查学员对课程的可见性
  条件: !courseStudentCustomListService.isLook(recentStudyVo.getBusinessId(), null)
  动作: 返回空响应

### BannerController_delete_RuleSet
- 描述: 规则集用于管理BannerController_delete API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- 验证banner是否存在并且可以被删除: 检查传入的banner ID是否存在于数据库中，并且是否可以被删除。
  条件: bannerDao.selectById(id) != null && bannerDao.selectById(id).getIsDel() == 0
  动作: bannerDao.update(new BannerPo(), new LambdaUpdateWrapper<BannerPo>().set(BannerPo::getIsDel, 1).eq(BannerPo::getId, id)); return ResultVo.success();

### courseStudyDetailExport_RuleSet
- 描述: 该规则集定义了courseStudyDetailExport API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体验证规则: 验证请求体OrgBoardCourseRequest是否正确。
  条件: request != null
  动作: 继续处理请求
- 设置默认分页参数规则: 设置请求体OrgBoardCourseRequest的current为0，size为150000。
  条件: request != null
  动作: 设置request.current=0, request.size=150000
- 获取课程学习明细规则: 调用courseStudyDetail服务获取课程学习明细数据。
  条件: request != null
  动作: 调用service.courseStudyDetail(request)获取IPage<OrgBoardCourseStudyRankResponse>
- 导出Excel文件规则: 调用exportExcel工具方法生成并导出Excel文件。
  条件: iPage != null && iPage.getRecords() != null
  动作: 调用EasyExcelUtils.exportExcel(response, "课程累计学习明细", "课程累计学习明细", iPage.getRecords(), OrgBoardCourseStudyRankResponse.class)

### RenovationZoneController_getZoneHome_RuleSet
- 描述: 规则集用于描述RenovationZoneController_getZoneHome API的具体业务逻辑和验证规则。
- 业务域: 课程专区

主要规则:
- 验证专委会编码(code)是否为空: 检查传入的专委会编码(code)是否为空，如果为空则抛出异常。
  条件: StringUtils.isBlank(code)
  动作: 抛出异常
- 验证设备来源(source)的有效性: 检查传入的设备来源(source)是否有效，如果不为空则进行后续处理。
  条件: !StringUtils.isBlank(source)
  动作: 继续执行
- 根据用户可见性权限过滤课程: 根据当前用户账号过滤课程，只返回用户可见的课程。
  条件: CollectionUtils.isNotEmpty(allCourseIds)
  动作: 调用filterUser方法过滤课程

### CourseController_getByBusinessCode_Rules
- 描述: 通过业务编码获取课程信息的业务规则集。
- 业务域: 课程管理

主要规则:
- 验证业务编码并获取课程信息: 当接收到GET请求时，验证业务编码是否存在，并调用courseService的getByBusinessCode方法获取相应的课程信息。
  条件: businessCode != null && !businessCode.isEmpty()
  动作: 调用courseService.getByBusinessCode(businessCode)获取课程信息，并封装到ResultVo<CommonBusinessInfoVo>中返回。

### CourseSectionLearnController_refreshHistoryData_RuleSet
- 描述: 规则集用于定义CourseSectionLearnController_refreshHistoryData API的行为和验证逻辑。
- 业务域: 课程学习

主要规则:
- Refresh History Data Success Rule: 验证刷新历史学习数据操作是否成功。
  条件: this.sectionLearnService.refreshHistoryData() completes without exception
  动作: return ResultVo.success()
- Refresh History Data Failure Rule: 验证刷新历史学习数据操作是否失败。
  条件: this.sectionLearnService.refreshHistoryData() throws an exception
  动作: ex.printStackTrace(); log.error("refreshHistoryDataErrorEnd", ex); return ResultVo.fail("refreshHistoryData error");

### SceneCourseController_queryCourse_RuleSet
- 描述: 该规则集定义了SceneCourseController_queryCourse API的业务规则。
- 业务域: 课程管理

主要规则:
- 查询参数验证: 验证查询参数是否为空，如果为空则返回所有符合条件的课程。
  条件: param == null || param.isEmpty()
  动作: 查询所有符合条件的课程。
- 课程状态过滤: 过滤出未删除(isDel=0)、状态为启用(status=1)且未映射(isMapping=0)的课程。
  条件: CoursePo::getIsDel == 0 && CoursePo::getStatus == 1 && CoursePo::getIsMapping == 0
  动作: 返回符合条件的课程。
- 课程名称或代码模糊查询: 根据查询参数param模糊查询课程名称(name)或课程代码(code)。
  条件: param != null && !param.isEmpty()
  动作: 执行模糊查询。
- 结果数量限制: 限制返回的课程数量为最多10条。
  条件: 查询结果数量 > 10
  动作: 截取前10条记录。

### CourseCodeGenerationRules
- 描述: 课程编码生成相关的业务规则
- 业务域: 课程管理

主要规则:
- CheckForExistingCode: 检查数据库中是否存在旧编码
  条件: StringUtils.isNotBlank(codeOld)
  动作: Integer newCode = Integer.parseInt(codeOld) + 1; CodeIncreaseRecordPo recordPo = new CodeIncreaseRecordPo(); recordPo.setIncreaseValue(newCode); recordPo.setCodeType(codeType); increaseRecordDao.insert(recordPo);
- CheckForNewCodeRecord: 检查数据库中是否存在新编码记录
  条件: StringUtils.isEmpty(id)
  动作: increaseRecordDao.increaseValue(codeType); code = increaseRecordDao.queryNewCodeValue(codeType);

### CommitteeKanBanController_exportUserStudyDurationDetailRank_RuleSet
- 描述: 规则集用于管理CommitteeKanBanController_exportUserStudyDurationDetailRank API的业务逻辑
- 业务域: 学习进度管理

主要规则:
- 验证专区code是否为空: 检查请求体中的code字段是否为空，如果为空则抛出BizBaseException异常
  条件: StringUtils.isBlank(request.getCode())
  动作: throw new BizBaseException("专区code不能为空")
- 验证排序字段是否完整: 检查请求体中的orderType和orderCode字段是否都非空，如果非空则拼接orderType字符串
  条件: StringUtils.isNotBlank(request.getOrderType()) && StringUtils.isNotBlank(request.getOrderCode())
  动作: request.setOrderType(request.getOrderType() + " , ")

### CourseStudentCalculationRules
- 描述: 规则集用于管理端通过规则计算特定课程的学生数量。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 检查请求体是否为空。
  条件: ObjectUtils.isEmpty(courseStudentVo)
  动作: 抛出异常或返回错误响应
- Set Admin Permissions: 设置管理员权限。
  条件: 无条件
  动作: 调用setAdmin(courseStudentVo)
- Deal Rule Configuration: 处理规则配置。
  条件: 无条件
  动作: 调用dealRuleConfig(courseStudentVo)
- Check and Save/Update CourseStudentPo: 检查是否存在CourseStudentPo对象，如果不存在则插入新记录，否则更新现有记录。
  条件: ObjectUtils.isEmpty(courseStudentPo)
  动作: 插入新记录
- Calculate Student Numbers Based on Rules: 根据规则配置计算学生数量。
  条件: cal || add <= 0
  动作: 调用this.baseMapper.calByRules(courseStudentVo)
- Get Imported Users Count: 查询自定义导入了多少人。
  条件: 无条件
  动作: 调用courseStudentCustomListDao.getImpAddUser(null, courseStudentVo.getCourseId())
- Get Excluded Users Count: 查询出自定义排除或者规则排除的人。
  条件: chooseRuleFlag
  动作: 调用courseStudentCustomListDao.getExcludeRule(courseStudentVo, chooseRuleFlag)
- Return Calculation Results: 返回计算结果。
  条件: 无条件
  动作: 返回ResultVo.success(result)

### CoursePermissionValidationRules
- 描述: 课程权限验证相关的业务规则集合
- 业务域: 课程权限管理

主要规则:
- 课程ID列表非空验证: 验证请求体中的课程ID列表是否为空
  条件: CollectionUtils.isEmpty(courseIds)
  动作: 返回false
- 管理员角色权限码存在验证: 验证管理员角色权限码是否存在
  条件: adminRolePermissionCodes == null || CollectionUtils.isEmpty(adminRolePermissionCodes.getAdminRoleCodes())
  动作: 返回false
- 超级管理员权限验证: 验证是否为超级管理员
  条件: adminRoleCodes.stream().anyMatch(item -> item != null && StringUtils.equals(item.getRoleCode(), Role.SUPERADMIN))
  动作: 返回true
- 用户课程权限验证: 验证用户是否有权限访问所有课程
  条件: courses.stream().allMatch(course -> canUseCourse(course, adminRoleCodes, courseStudents, code))
  动作: 返回true

### CourseStudentApi_courseStudySync_RuleSet
- 描述: 该规则集定义了CourseStudentApi_courseStudySync API的业务规则，包括请求参数的验证、数据转换和保存。
- 业务域: 课程管理

主要规则:
- 验证请求参数: 验证请求参数的有效性，包括检查用户虚拟工号是否存在以及课程号是否有效。
  条件: request == null || StringUtils.isBlank(request.getAccountProxy()) || thirdCourseInfoEntity == null
  动作: 返回ResultVo.fail()
- 转换并保存数据: 将请求参数转换为内部数据模型，并将其保存到数据库中。
  条件: request != null && !StringUtils.isBlank(request.getAccountProxy()) && thirdCourseInfoEntity != null
  动作: 执行converter方法并将结果保存到数据库

### TrainPlanningController_globalSearch_RuleSet
- 描述: 规则集用于描述TrainPlanningController_globalSearch API的业务逻辑和处理流程
- 业务域: 培训计划与课程查询

主要规则:
- Validate Request Body: 检查请求体是否为空或无效
  条件: globalSearchVo == null
  动作: 返回ResultVo.fail("globalSearch error")
- Set Keywords in TrainPlanningVo: 如果globalSearchVo包含关键字，则将其设置到TrainPlanningVo中
  条件: StringUtils.isNotBlank(globalSearchVo.getKeyWords())
  动作: trainPlanningVo.setPlanningName(globalSearchVo.getKeyWords()); onlineClassVo.setKeyWords(globalSearchVo.getKeyWords());
- Set User Information in TrainPlanningVo: 从WebSessionUtils获取用户账号，并设置到TrainPlanningVo中
  条件: account = webSessionUtils.getUserAccount()
  动作: trainPlanningVo.setAccount(account);
- Filter Visible Courses: 根据用户权限过滤出可见的课程ID列表
  条件: allVisible = logic.getVisibleIdList(currentUser, employee, courseDao, categoryIdList)
  动作: if (CollectionUtils.isNotEmpty(allVisible)) { ... }
- Convert CoursePo to OnlineClassDetailsVo: 将CoursePo对象转换为OnlineClassDetailsVo对象
  条件: records = QueryOnlineClassListLogic.convertResult(coursePoList)
  动作: if (CollectionUtils.isNotEmpty(records)) { ... }
- Set Organization or Category Name: 根据维度类型和代码设置组织或类别名称
  条件: dimensionName = courseService.orgOrCategoryName(course.getDimensionType(), course.getDimensionCodes())
  动作: vo.setDimensionName(dimensionName);

### RenovationReportController_getReportCourseStudentList_Rules
- 描述: 规则集用于管理端查询专业专区课程学员数据的API
- 业务域: 课程管理

主要规则:
- 验证RenvationCourseStudentVo对象: 检查RenvationCourseStudentVo对象是否为空或无效
  条件: renvationCourseStudentVo == null
  动作: 抛出异常或返回错误信息
- 设置renovationCode: 从AdminPermissionVO中获取renovationCode并设置到RenvationCourseStudentVo对象中
  条件: adminPermissionVO != null && adminPermissionVO.getPerCodes() != null
  动作: renvationCourseStudentVo.setCode(adminPermissionVO.getPerCodes())
- 确定查询方式: 根据way的值决定调用哪个查询方法
  条件: way == null || way == 1
  动作: 调用courseDao.getReportCourseStudentList(pageVo, renvationCourseStudentVo)
- 检查记录: 检查查询结果是否为空
  条件: CollectionUtils.isEmpty(records)
  动作: 返回null

### UserLearningDetailExportRules
- 描述: 规则集用于描述用户学习时长明细导出API的业务规则
- 业务域: 课程管理

主要规则:
- 设置默认分页参数: 在接收到请求后，设置请求体中的current为0，size为150000
  条件: 请求体存在
  动作: 设置request.setCurrent(0); request.setSize(150000);
- 查询用户学习时长明细: 调用service.userLearningDetailFSecPage(request)方法查询用户的学习时长明细
  条件: 请求体存在且参数设置正确
  动作: IPage<OrgLearningDurationResponse> iPage = service.userLearningDetailFSecPage(request);
- 导出Excel文件: 调用EasyExcelUtils.exportExcel方法将查询到的数据导出为Excel文件
  条件: 查询结果存在
  动作: EasyExcelUtils.exportExcel(response, "用户学习时长明细", "用户学习时长明细", iPage.getRecords(), OrgLearningDurationResponse.class);
- 设置文件名: 如果fileName为空，则使用当前日期作为文件名
  条件: fileName为空
  动作: fileName = DateUtils.formatDate(new Date(),"yyyy-MM-dd");
- 设置响应头: 设置HTTP响应头，指定文件类型和文件名
  条件: fileName已设置
  动作: response.setContentType("application/vnd.ms-excel;charset=utf-8"); response.setCharacterEncoding("UTF-8"); response.setHeader("Content-disposition", "attachment;filename=" + fileName + ".xlsx");
- 写入Excel数据: 将查询到的数据写入到Excel文件中
  条件: 响应头设置完成
  动作: EasyExcel.write(outputStream, pojoClass).sheet(sheetName).doWrite(list);
- 关闭输出流: 关闭ServletOutputStream以释放资源
  条件: Excel数据写入完成
  动作: IOUtils.closeQuietly(outputStream);

### CourseCategoryController_getCourseCategoryTree_RuleSet
- 描述: 规则集用于管理CourseCategoryController_getCourseCategoryTree API的业务规则。
- 业务域: 课程分类管理

主要规则:
- PerCodeNotEmptyValidation: 验证perCode参数是否为空
  条件: perCode == null || perCode.isEmpty()
  动作: 抛出异常，提示领域或者专委会编码不能为空

### userScoreOverview_RuleSet
- 描述: 该规则集定义了userScoreOverview API的业务规则，包括请求体验证、查询逻辑等。
- 业务域: 员工满意度管理

主要规则:
- Validate Request Body: 验证请求体是否为空或不符合预期格式
  条件: request == null || !isValid(request)
  动作: 抛出异常或返回错误响应
- Query User Score Overview: 调用service.queryOrgOverview方法查询用户评分概览
  条件: 请求体验证通过
  动作: service.queryOrgOverview(request, OrgBoardBaseConstants.USER_SCORE)
- Return Success Response: 将查询结果封装到ResultVo<OrgBoardBaseResponse>中并返回
  条件: 查询成功
  动作: return ResultVo.success(response)

### CourseStudentImportRules
- 描述: 规则集用于管理端导入学员API的业务规则
- 业务域: 课程管理

主要规则:
- ValidateExcelFormat: 检查上传的文件是否为Excel格式
  条件: file == null || !(isExcel2003(fileName) || isExcel2007(fileName))
  动作: throw new BizBaseException("请下载模板上传文件")
- ValidateCourseExistence: 根据课程ID检查课程是否存在
  条件: coursePo == null
  动作: throw new BizBaseException("根据课程id未查询到课程")
- ValidateUserPermissions: 检查当前用户是否有权限导入学员
  条件: CollectionUtils.isEmpty(dataPermissionList) || !hasPermission(dataPermissionList, userInfo)
  动作: errBuilder.append(userCode).append(":无此人员权限");
- ValidateExcelContentFormat: 检查Excel文件内容格式是否正确
  条件: row0 == null || !StringUtils.contains(c1, "姓名") || !StringUtils.contains(c2, "工号")
  动作: throw new BizBaseException("请下载模板，按要求完成填写再上传文件")
- ValidateUserInfoExistenceAndMatch: 检查学员信息是否存在且匹配
  条件: ObjectUtils.isEmpty(userInfoRoleVo) || userInfoRoleVo.getCode() != 0 || userInfoRoleVo.getData() == null || !StringUtils.equalsIgnoreCase(userInfo.getEmpname(), userName)
  动作: errBuilder.append(userCode).append(":人员不存在或工号姓名不匹配");

### UserLearnReportController_examLearnDetailExport_RuleSet
- 描述: 该规则集定义了UserLearnReportController_examLearnDetailExport API的业务规则。
- 业务域: 课程学习报告

主要规则:
- 验证请求体中的current和size字段: 验证请求体中的current和size字段是否符合预期的范围和类型。
  条件: request.current >= 0 && request.size > 0
  动作: 继续处理请求

### BannerQueryRules
- 描述: 规则集用于处理BannerController_query API的业务逻辑
- 业务域: 课程展示

主要规则:
- Validate Source Parameter: 验证source参数是否为'Mobile'或'PC'
  条件: source.equals('Mobile') || source.equals('PC')
  动作: 继续查询横幅信息
- Check DomainCode Parameter: 验证domainCode参数是否为空
  条件: domainCode != null && !domainCode.isEmpty()
  动作: 从Redis缓存中获取横幅信息
- Filter BannerPo by Source: 根据source过滤出有效的横幅URL
  条件: source.equals('Mobile')
  动作: 过滤出originalMobileUrl不为空的BannerPo对象
- Convert BannerPo to BannerQueryResponse: 将BannerPo对象转换为BannerQueryResponse对象
  条件: bannerPos != null && !bannerPos.isEmpty()
  动作: 调用ConvertUtils.sourceToTarget方法进行转换
- Filter RenovationBannerPo by ImageType: 根据source过滤出有效的RenovationBannerPo对象
  条件: source.equals('Mobile')
  动作: 过滤出imageType为'mb'的RenovationBannerPo对象
- Convert RenovationBannerPo to RenovationResponse: 将RenovationBannerPo对象转换为RenovationResponse对象
  条件: bannerList != null && !bannerList.isEmpty()
  动作: 遍历bannerList并设置RenovationResponse对象的属性
- Convert RenovationResponse to BannerQueryResponse: 将RenovationResponse对象转换为BannerQueryResponse对象
  条件: orgList != null && !orgList.isEmpty()
  动作: 遍历orgList并设置BannerQueryResponse对象的属性

### RenovationController_getRenovationByCode_RuleSet
- 描述: 规则集用于管理端-根据code查询装修的业务逻辑
- 业务域: 装修管理

主要规则:
- Check Code Parameter: 检查传入的code参数是否为空
  条件: code == null || code.isEmpty()
  动作: 返回默认的RenovationResultVO
- Check Query Results: 检查查询结果是否为空
  条件: wayOneList.isEmpty() && collectPub.isEmpty() && collectDraft.isEmpty() && collectStop.isEmpty()
  动作: 返回初始查询结果resultVO
- Set QR Code URL: 为每个RenovationVO对象设置二维码URL
  条件: CollectionUtils.isNotEmpty(renovationList)
  动作: renovationList.forEach(o -> o.setQrCodeUrl(renovationWeb + o.getRenovationId() + "&zoneCode=" + code))
- Filter and Set Renovation Way: 过滤状态为STOP的RenovationVO对象，并将其renovationWay设置为null
  条件: o.getStatus() != null && o.getStatus() == RenovationConstants.STOP
  动作: o.setRenovationWay(null)
- Group Renovation List by Template Type: 根据templateType对renovationList进行分组
  条件: CollectionUtils.isNotEmpty(renovationList)
  动作: Map<Integer, List<RenovationVO>> collect = renovationList.stream().collect(Collectors.groupingBy(o -> o.getTemplateType()))

### WarningEducationController_queryWarningFilm_RuleSet
- 描述: 规则集用于描述 WarningEducationController_queryWarningFilm API 的业务逻辑和验证规则。
- 业务域: 课程查询与管理

主要规则:
- Validate Current User Existence: 验证当前登录用户是否存在，如果不存在则返回空的 PageInfo 对象。
  条件: employee == null
  动作: return new PageInfo<>();
- Query Course Category ID Based on Type: 根据传入的查询类型查询相应的课程分类ID。
  条件: articleCourseVo.getQueryType() == ...
  动作: courseCategoryList = courseCategoryDao.queryArticleCategoryId(...);
- Retrieve Course Details Based on User Permission: 根据查询类型和用户权限获取课程详情。
  条件: isVsible && !CollectionUtils.isEmpty(courseCategoryList)
  动作: articleCourseVos = getArticleCourseVos(...); return pageList(...);

### CourseOverviewRules
- 描述: 课程总览API的相关业务规则。
- 业务域: 课程管理

主要规则:
- RequestBodyNotEmpty: 验证请求体是否为空。
  条件: request == null
  动作: 抛出异常，提示请求体不能为空。

### UserLearnReportController_studyLearnPage_RuleSet
- 描述: 该规则集定义了UserLearnReportController_studyLearnPage API的业务规则。
- 业务域: 课程学习报告

主要规则:
- 验证queryDimension字段: 检查请求体中的queryDimension字段是否为空，如果为空则直接返回空的分页对象。
  条件: StringUtils.isEmpty(request.getQueryDimension())
  动作: return page;
- 处理queryDimension字段: 根据queryDimension字段的值设置queryDMCode和queryDMKey。
  条件: StringUtils.equals(queryDMCode, 'org')
  动作: if (StringUtils.equals(queryDMValue, '99')) { request.setQueryDMKey(Arrays.stream(groupPlatCode.split(",")).collect(Collectors.toList())); } else if (StringUtils.equals(queryDMValue, 'chainDoMain')) { return page; } else if (!StringUtils.equals(queryDMValue, 'ALL')) { request.setQueryDMKey(Arrays.stream(queryDMValue.split(",")).collect(Collectors.toList())); }
- 并发查询用户学习时长: 根据用户列表分区并发查询每个用户的每日学习时长、总学习时长和学习天数。
  条件: partition.size() >= 3
  动作: List<UserStudyReportResponse> userStudyReportResponses = completeResponse(pager.getRecords(), todayDurationMap, totalDurationMap, totalStudyDayCountMap); pager.setRecords(userStudyReportResponses);
- 设置学习时长和天数: 根据查询结果设置每个UserStudyReportResponse对象的todayDuration、totalDuration、totalDays和avgStudyDuration字段。
  条件: response.getUserCode()存在
  动作: response.setTodayDuration(...); response.setTotalDuration(...); response.setTotalDays(...); response.setAvgStudyDuration(...);
- 处理学习时长但无学习天数的情况: 如果用户的学习天数为0但总学习时长不为0，则根据总学习时长设置学习天数。
  条件: response.getTotalDays().equals('0') && !response.getTotalDuration().equals('00:00:00')
  动作: String days = String.valueOf(Integer.parseInt(response.getTotalDuration().split(":")[0])); response.setTotalDays(days.equals('0') ? '1' : days);

### CourseSectionLearnController Rules
- 描述: 规则集用于验证和处理CourseSectionLearnController中的业务逻辑
- 业务域: 课程学习管理

主要规则:
- 验证请求参数: 验证查询参数committeeCode和type的有效性
  条件: committeeCode != null && !committeeCode.isEmpty() && type != null && !type.isEmpty()
  动作: 继续处理请求
- 获取用户学习排名: 调用sectionLearnService.getUserLearnRank方法获取用户学习排名
  条件: validateRequestParams成功
  动作: 调用sectionLearnService.getUserLearnRank(committeeCode, type)

### Learn Rate Overview Rules
- 描述: 规则集用于验证和处理学习率概览API的请求和响应。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体是否符合OrgBoardBaseRequest格式。
  条件: request != null && request instanceof OrgBoardBaseRequest
  动作: 继续处理请求
- Process Query Org Overview: 调用service.queryOrgOverview方法处理请求，并返回学习率概览信息。
  条件: validateRequestBody成功
  动作: 调用service.queryOrgOverview(request, OrgBoardBaseConstants.LEARN_RATE)
- Return Success Response: 返回ResultVo<OrgBoardBaseResponse>类型的成功响应。
  条件: processQueryOrgOverview成功
  动作: return ResultVo.success(response)

### learnningRateRank_RuleSet
- 描述: 学习率排行API相关的业务规则集合
- 业务域: 课程管理

主要规则:
- 组织级别为3时返回空列表: 如果请求体中的组织级别(orgLevel)为'3'，则API返回空的学习率排行结果列表。
  条件: Objects.equals(request.getOrgLevel(), '3')
  动作: return ResultVo.success(Collections.emptyList())

### MsgRecordController_queryMsgReadUser_RuleSet
- 描述: 规则集用于定义MsgRecordController_queryMsgReadUser API的业务规则。
- 业务域: 消息管理

主要规则:
- 验证请求有效性: 验证请求是否符合预期格式和条件。
  条件: 请求方法为GET且路径为/msg/queryMsgReadUser
  动作: 继续处理请求
- 调用recordService的queryMsgReadUser方法: 调用recordService的queryMsgReadUser方法来处理查询逻辑。
  条件: 请求通过验证
  动作: 调用recordService.queryMsgReadUser()
- 返回成功响应: 返回一个ResultVo<Void>类型的响应表示操作成功。
  条件: recordService.queryMsgReadUser()执行成功
  动作: 返回ResultVo.success()

### CourseCategoryController_Rules
- 描述: 课程分类控制器相关的业务规则集合
- 业务域: 课程管理

主要规则:
- 课程分类存在性验证: 验证给定ID的课程分类是否存在
  条件: courseCategoryService.getCourseCategory(id) == null
  动作: throw new BizBaseException("该目录不存在")

### CourseCategoryInitializationRules
- 描述: 规则集用于管理端初始化领域课程目录的业务逻辑。
- 业务域: 课程管理

主要规则:
- DomainCodesNotEmptyValidation: 验证请求体中的domainCodes列表是否为空。
  条件: CollectionUtils.isEmpty(initDomainCategory.getDomainCodes())
  动作: return;
- CategoryCodesNotEmptyValidation: 验证请求体中的categoryCodes列表是否非空。
  条件: CollectionUtils.isNotEmpty(initDomainCategory.getCategoryCodes())
  动作: 处理categoryCodes列表，创建并保存课程分类。

### RenovationOrgBannerController_Rules
- 描述: 该规则集定义了RenovationOrgBannerController_list API的业务规则
- 业务域: 课程装修

主要规则:
- 请求参数验证: 验证请求参数是否为空或缺少domainCode字段
  条件: Objects.isNull(request) || Objects.isNull(request.getDomainCode())
  动作: return null
- 装修信息验证: 验证查询到的装修信息是否为空
  条件: Objects.isNull(renovationPo)
  动作: return null
- banner列表验证: 验证查询到的banner列表是否为空
  条件: CollectionUtils.isEmpty(list)
  动作: return null

### CourseCategoryController_RuleSet
- 描述: 规则集用于管理CourseCategoryController中的业务规则。
- 业务域: 课程分类管理

主要规则:
- Validate Category ID: 验证分类ID是否大于0。如果ID大于0，则查询数据库获取该ID对应的分类全名称；否则，返回根分类名称。
  条件: id > 0
  动作: 调用super.baseMapper.queryAllCategoryNameById(id)获取分类全名称

### OrganizationKanBanController_planningScoreExport_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_planningScoreExport API的业务规则。
- 业务域: 课程管理

主要规则:
- 验证请求体: 验证传入的OrgBoardPlanningRequest对象是否符合预期格式。
  条件: request != null && request.isValid()
  动作: 继续处理请求
- 设置默认分页参数: 将请求体中的current设置为0，size设置为150000。
  条件: true
  动作: request.setCurrent(0); request.setSize(150000);
- 获取规划评分数据: 调用service.planningScoreSecondPage方法获取规划评分数据。
  条件: true
  动作: IPage<OrgBoardPlanningScoreResponse> iPage = service.planningScoreSecondPage(request, OrgBoardBaseConstants.PLANNING);
- 导出数据到Excel: 调用EasyExcelUtils.exportExcel方法将数据导出为Excel文件。
  条件: iPage != null && !iPage.getRecords().isEmpty()
  动作: EasyExcelUtils.exportExcel(response, "地图满意度", "地图满意度", iPage.getRecords(), OrgBoardPlanningScoreResponse.class);

### RenovationReportController_exportGetReportCourseList_RuleSet
- 描述: 规则集用于描述RenovationReportController_exportGetReportCourseList API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体非空验证: 验证请求体RenvationCourseVo是否为空。
  条件: renvationCourseVo == null
  动作: 抛出异常或返回错误响应
- 设置默认分页参数: 设置RenvationCourseVo的当前页(current)和每页大小(size)为默认值。
  条件: true
  动作: renvationCourseVo.setCurrent(1); renvationCourseVo.setSize(1000);
- 获取报告课程列表: 根据RenvationCourseVo中的查询条件获取报告课程列表。
  条件: true
  动作: IPage<ReportDetailsVo> reportCourseList = getReportCourseList(renvationCourseVo);
- 检查课程列表是否为空: 检查获取到的课程列表是否为空。
  条件: CollectionUtils.isEmpty(list)
  动作: 直接返回，不进行后续操作
- 导出Excel文件: 将课程列表数据填充到Excel模板中，并通过HttpServletResponse返回给客户端。
  条件: true
  动作: ExportUtil.fillExcel(response, fileName, templateName, list);

### CourseEditValidationRules
- 描述: 规则集用于验证和处理课程编辑请求
- 业务域: 课程管理

主要规则:
- SafetyLevelNotEmpty: 验证安全等级是否为空
  条件: StringUtils.isBlank(courseVO.getSafetyLevel())
  动作: throw new BizBaseException("安全等级不能为空")
- LecturerNamesLengthCheck: 验证讲师名称长度是否超过200字符
  条件: StringUtils.isNotBlank(courseVO.getLecturerNames()) && courseVO.getLecturerNames().length() > 200
  动作: throw new BizBaseException("讲师名称不能超过200字符")
- LecturerIntroductionLengthCheck: 验证讲师简介长度是否超过500字符
  条件: StringUtils.isNotBlank(courseVO.getLecturerIntroduction()) && courseVO.getLecturerIntroduction().length() > 500
  动作: throw new BizBaseException("讲师简介不能超过500字符")
- CourseExistenceCheck: 验证课程是否存在
  条件: dbCourse == null
  动作: throw new BizBaseException("课程不存在")
- CategorySelectionCheck: 验证所属目录是否选择子目录
  条件: courseCategoryDao.queryByCategoryParentId(categoryId) > 0
  动作: throw new BizBaseException("所属目录请选择子目录")
- ContentCategorySelectionCheck: 验证课程类别是否选择子类别
  条件: courseCategoryDao.queryByCategoryParentId(contentsId) > 0
  动作: throw new BizBaseException("课程类别请选择子类别")

### MsgRecordController_save_RuleSet
- 描述: 该规则集定义了MsgRecordController_save API的业务规则，包括请求体验证和消息记录保存逻辑。
- 业务域: 消息管理

主要规则:
- 请求体验证规则: 验证传入的MsgRecordRequest对象是否符合预期格式和约束。
  条件: request != null && request.isValid()
  动作: 继续处理请求
- 保存消息记录规则: 调用recordService的saveUpdate方法保存消息记录。
  条件: validate_request_body成功
  动作: recordService.saveUpdate(request)
- 返回成功响应规则: 返回ResultVo<Void>类型的成功响应。
  条件: save_message_record成功
  动作: return ResultVo.success()

### CommitteeController_getOneCategory_Rules
- 描述: 规则集用于描述CommitteeController_getOneCategory API的业务规则。
- 业务域: 课程管理

主要规则:
- Validate Dimension Code Parameter: 检查维度编码参数是否为空，如果不为空，则使用该参数进行一级分类的筛选。
  条件: dimensionCode != null && !dimensionCode.isEmpty()
  动作: 使用dimensionCode参数调用courseCategoryService.getOneCategory(dimensionCode)
- Filter Categories Without Courses: 检查获取到的一级分类列表是否为空，如果不为空，则过滤掉没有课程的目录。
  条件: !oneCategory.isEmpty()
  动作: 遍历oneCategory列表，移除所有课程数量为0的目录

### CourseSectionLearnController_getCourseOverview_Rules
- 描述: 与CourseSectionLearnController_getCourseOverview API相关的业务规则集合。
- 业务域: 课程学习

主要规则:
- 验证请求参数: 验证请求参数committeeCode和type是否为有效的字符串。
  条件: committeeCode != null && !committeeCode.isEmpty() && type != null && !type.isEmpty()
  动作: 继续处理请求，调用sectionLearnService.getCourseOverview(committeeCode, type)。

### CourseController_addCourseTemporarily_RuleSet
- 描述: 管理端暂存课程基本信息的业务规则集合
- 业务域: 课程管理

主要规则:
- 讲师名称长度验证: 验证讲师名称长度不超过200字符
  条件: StringUtils.isNotBlank(courseVO.getLecturerNames()) && courseVO.getLecturerNames().length() > 200
  动作: throw new BizBaseException("讲师名称不能超过200字符")
- 讲师简介长度验证: 验证讲师简介长度不超过500字符
  条件: StringUtils.isNotBlank(courseVO.getLecturerIntroduction()) && courseVO.getLecturerIntroduction().length() > 500
  动作: throw new BizBaseException("讲师简介不能超过500字符")
- 所属目录验证: 验证所属目录是否为子目录
  条件: courseCategoryDao.queryByCategoryParentId(categoryId) > 0
  动作: throw new BizBaseException("所属目录请选择子目录")
- 课程类别验证: 验证课程类别是否为子类别
  条件: courseCategoryDao.queryByCategoryParentId(contentsId) > 0
  动作: throw new BizBaseException("课程类别请选择子类别")
- 设置课程创建角色和维度代码: 根据用户角色和权限设置课程的创建角色和维度代码
  条件: Role.WarningEducationDomainCode.equals(courseVO.getPerCode()) && !roleCodeList.contains(Role.SUPERADMIN)
  动作: 根据角色设置dimensionCodes和createRole
- 处理课程附件: 将课程附件列表转换为JSON字符串并设置到coursePo中
  条件: CollectionUtils.isNotEmpty(attachmentsList)
  动作: coursePo.setAttachments(JSON.toJSONString(attachmentsList))
- 处理课程封面: 根据课程文本信息处理课程封面图片，并设置到coursePo中
  条件: StringUtils.isNotBlank(courseVO.getText())
  动作: 处理课程封面图片并设置到coursePo中
- 处理讲师信息: 根据讲师类型处理讲师名称和简介信息
  条件: lecturerType == null || lecturerType == 2
  动作: coursePo.setLecturerNames(""); coursePo.setLecturerIntroduction("")
- 处理课程范围: 将课程范围列表转换为JSON字符串并设置到coursePo中
  条件: CollectionUtils.isNotEmpty(scopeList)
  动作: coursePo.setScope(JSON.toJSONString(scopeList))
- 保存或更新课程信息: 根据课程ID是否存在来决定保存还是更新课程信息
  条件: id != null
  动作: baseMapper.updateById(coursePo)

### Validation Rules for RenovationWayOneVO
- 描述: A set of validation rules for the RenovationWayOneVO object used in the RenovationController_addRenovationOne API
- 业务域: 装修管理

主要规则:
- Validate Renovation ID: If renovationId is provided, check if it exists and if its status is DRAFT, then delete old data
  条件: renovationWayOneVO.getRenovationId() != null
  动作: Delete old data if status is DRAFT
- Validate Module List: Ensure that the moduleList is not empty
  条件: CollectionUtils.isEmpty(renovationWayOneVO.getModuleList())
  动作: Throw BizBaseException with message '组件集合不能为空'
- Validate Banner Component: If moduleType is 'banner', ensure that banner components are not empty and image counts do not exceed limits
  条件: renovationModuleVO.getModuleType().equals('banner')
  动作: Check banner component validity and image counts
- Validate Topic Component: If moduleType is 'topic', ensure that topic components are valid based on the addConten value
  条件: renovationModuleVO.getModuleType().equals('topic')
  动作: Check topic component validity based on addConten value
- Validate Dynamic Component: If moduleType is 'dynamic', ensure that dynamic components are not empty and URLs are valid
  条件: renovationModuleVO.getModuleType().equals('dynamic')
  动作: Check dynamic component validity and URLs
- Validate URL: Check if the URL is a valid海尔内部网址
  条件: renovationWayOneVO.getIsCheck() != null && renovationWayOneVO.getIsCheck() == 1 && StringUtils.isNotBlank(t.getLink())
  动作: Throw BizBaseException if URL is not valid

### ThirdPartyController_eceibsStudyRecord_RuleSet
- 描述: 该规则集定义了处理第三方系统课程学习记录同步请求时所需的验证规则和业务规则。
- 业务域: 课程学习记录同步

主要规则:
- 验证请求体格式: 验证请求体是否符合EceibsStudyRecordVo格式
  条件: 请求体格式正确且所有必填字段存在
  动作: 继续处理请求
- 处理学习记录: 调用EceibsStudyRecordLogic组件处理学习记录数据
  条件: 请求体验证通过
  动作: 调用EceibsStudyRecordLogic.getStudyRecord(recordVo)
- 返回成功响应: 返回处理结果为JSONArray的成功响应
  条件: EceibsStudyRecordLogic.getStudyRecord(recordVo)执行成功
  动作: 返回ResultVo.success(logic.getStudyRecord(recordVo))

### CourseSectionController_getCourseIds_RuleSet
- 描述: 规则集用于处理通过课程ID查询章节ID的业务逻辑，特别是与云学堂相关的用户信息同步。
- 业务域: 课程管理

主要规则:
- CheckIfCourseBelongsToCloudXueTang: 检查课程是否属于云学堂，并在必要时同步用户信息。
  条件: courseIds != null && courseIds.getLinkUrl().contains("yunxuetang.cn")
  动作: userInfoFeign.syncYxtUser(account, SecurityConstants.FROM_VALUE)

### CourseStudentCustomListController_RuleSet
- 描述: 规则集用于CourseStudentCustomListController中的业务逻辑验证
- 业务域: 课程管理

主要规则:
- courseStudentId不能为空: 验证传入的courseStudentId是否为空，若为空则抛出异常
  条件: StringUtils.isBlank(courseStudentId)
  动作: throw new BizBaseException("课程配置主键为空")

### WarningEducationController_queryLatestNotice_RuleSet
- 描述: 规则集用于描述WarningEducationController_queryLatestNotice API的业务逻辑和验证规则
- 业务域: 警示教育

主要规则:
- 验证RenovationPo对象是否存在: 根据zoneCode查询RenovationPo对象，如果不存在则返回空的WarningFilmDynamicResponse对象
  条件: renovation == null
  动作: return new WarningFilmDynamicResponse()
- 验证查询到的模块ID列表是否为空: 查询最小模块ID列表，如果为空则返回空的WarningFilmDynamicResponse对象
  条件: CollectionUtils.isEmpty(longs)
  动作: return new WarningFilmDynamicResponse()

### CourseStudentCustomListController_getUserPage_RuleSet
- 描述: 规则集用于管理端-学员条件查询API的业务逻辑。
- 业务域: 学员管理

主要规则:
- 验证courseStudentId有效性: 检查请求体中的courseStudentId是否对应有效的学员管理数据。
  条件: courseStudentDao.selectById(courseStudentCustomListDto.getCourseStudentId()) == null
  动作: 抛出BizBaseException异常
- 选择合适的查询方法: 根据courseStudentPo对象中的属性选择合适的数据库查询方法。
  条件: cal
  动作: 调用baseMapper.searchPage(page, courseStudentCustomListDto)

### Validation Rules for OnlineClassVo
- 描述: This rule set contains validation rules for the OnlineClassVo object used in the StudentCollectionController_queryOnlineClassList API.
- 业务域: 在线课程管理

主要规则:
- Validate OnlineClassVo: Ensures that the OnlineClassVo object provided in the request body meets all necessary validation constraints defined by EditOnlineClassValid.
  条件: @Validated(OnlineClassVo.EditOnlineClassValid.class)
  动作: Proceed with processing the request if the OnlineClassVo object is valid.

### RenovationZoneController_listZoneModules_RuleSet
- 描述: 该规则集定义了RenovationZoneController_listZoneModules API的业务规则，包括参数验证、模块处理和用户可见性过滤。
- 业务域: 课程管理

主要规则:
- 验证专委会编码是否为空: 检查传入的专委会编码是否为空，如果为空则抛出异常。
  条件: code == null || code.isEmpty()
  动作: 抛出异常，提示专委会编码不能为空
- 根据专委会编码查找RenovationPo对象: 通过传入的专委会编码查找对应的RenovationPo对象。
  条件: renovationService.getIdByZoneCode(code) != null
  动作: 获取RenovationPo对象
- 根据RenovationPo对象的ID查找RenovationModulePo列表: 根据RenovationPo对象的ID查找相关的RenovationModulePo列表。
  条件: renovationModuleService.listCourseModuleByZoneCode(code) != null
  动作: 获取RenovationModulePo列表
- 根据模块类型和关联的RenovationTopicPo列表进一步处理每个模块: 根据模块类型和关联的RenovationTopicPo列表进一步处理每个模块，生成ZoneModuleVo对象。
  条件: renovationModule.getModuleType() == RenovationMediaTypeEnum.TOPIC.getCode() && CollectionUtils.isNotEmpty(topicList)
  动作: 生成ZoneModuleVo对象并添加到模块列表中
- 根据用户的可见性过滤课程ID: 根据用户的可见性过滤课程ID。
  条件: CollectionUtils.isNotEmpty(allCourseIds)
  动作: 调用QueryOnlineClassListLogic的filterUser方法过滤用户可见的课程ID
- 过滤用户可见的ZoneModuleVo列表: 过滤用户可见的ZoneModuleVo列表。
  条件: CollectionUtils.isNotEmpty(allVisibleIds)
  动作: 返回用户可见的ZoneModuleVo列表

### CourseSectionLearnController_Rules
- 描述: 与CourseSectionLearnController_batchRefreshStudyInfo相关的业务规则集合。
- 业务域: 学习进度管理

主要规则:
- ValidateFullRefreshParameter: 验证fullRefresh参数的有效性，确保其为布尔值。
  条件: fullRefresh != null && (fullRefresh == true || fullRefresh == false)
  动作: 继续执行批量刷新学习信息的操作。

### CourseController_officeCourses_Rules
- 描述: 规则集用于管理端批量下架课程的API
- 业务域: 课程管理

主要规则:
- 课程ID列表非空验证: 验证请求体中的课程ID列表是否为空
  条件: CollectionUtils.isEmpty(courseStatusUpdateVo.getCourseIds())
  动作: 抛出BizBaseException异常，提示'课程id不能为空'
- 课程引用检查: 检查课程是否被任何学习地图引用
  条件: CollectionUtils.isNotEmpty(usedCourses)
  动作: 构建OfficeError列表，返回ResultVo<CourseUpdateStatusResultVo>，提示'有被学习地图使用的课程'
- 用户登录验证: 验证当前用户是否已登录
  条件: user == null
  动作: 抛出BizBaseException异常，提示'用户未登录'

### CourseCategoryController_Rules
- 描述: 规则集用于CourseCategoryController_getUserCategories API的业务逻辑验证和处理
- 业务域: 课程管理

主要规则:
- 用户存在性验证: 验证当前登录用户是否存在
  条件: bscEmployeeDao.selectOne(...) == null
  动作: throw new BizBaseException("用户不存在")

### CommitteeController_queryCoursesForCommittee_Rules
- 描述: 规则集用于管理CommitteeController_queryCoursesForCommittee API的业务逻辑
- 业务域: 课程管理

主要规则:
- Validate Level One Category ID: 检查请求体中的levelOneCategoryId是否为空，如果不为空，则查询所有子分类ID并添加到请求体中；如果为空，则查询所有一级分类ID并添加到请求体中。
  条件: !StringUtils.isEmpty(courseCommitteeVo.getLevelOneCategoryId())
  动作: allChildrenIdForLevelOne.add(courseCommitteeVo.getLevelOneCategoryId());
- Set User Account and Dimension Code: 从webSession中获取用户账号信息和维度代码，并将其设置到请求体中。
  条件: true
  动作: String account = webSession.getUserInfo().getEmpsn(); courseCommitteeVo.setAccount(account); courseCommitteeVo.setDimensionCode(webSession.getUserInfo().getJobtopcategorycode());
- Query Courses: 根据请求体中的信息查询课程列表。
  条件: true
  动作: IPage<CourseCommitteeDetailVo> courses = committeeDao.queryCoursesForCommittee(pageVo, courseCommitteeVo);
- Parse Parameters: 对查询结果进行参数解析。
  条件: true
  动作: parseParameters(records); courses.setRecords(records);

### CourseSectionLearnController_isShowWindow_RuleSet
- 描述: 规则集用于定义CourseSectionLearnController_isShowWindow API的业务规则。
- 业务域: 课程学习

主要规则:
- Course ID Exists Rule: 验证传入的课程ID是否存在。
  条件: courseId != null
  动作: 调用sectionLearnService.isShowWindow(courseId)获取是否需要弹窗的信息。

### learnDurationOverview_RuleSet
- 描述: 规则集用于管理learnDurationOverview API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- RequestBodyNotEmpty: 验证请求体是否为空。
  条件: request == null
  动作: 抛出异常，提示请求体不能为空。

### CourseSearchHistoryController_Rules
- 描述: 课程搜索历史管理相关的业务规则集合。
- 业务域: 课程搜索历史管理

主要规则:
- Validate KeyWord Parameter: 检查关键字参数是否为空或无效。
  条件: keyWord == null || keyWord.isEmpty()
  动作: 记录日志并返回错误信息

### OrganizationKanBanController_planningOverview_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_planningOverview API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则返回错误。
  条件: request == null
  动作: 抛出异常或返回错误响应

### CourseController_importDesignatedPerson_RuleSet
- 描述: 该规则集定义了导入指定人员可观看课程信息的业务规则。
- 业务域: 课程管理

主要规则:
- 文件和课程ID验证规则: 验证上传的文件和课程ID是否有效。
  条件: file != null && courseId != null
  动作: 继续处理导入逻辑
- 保存用户信息规则: 从文件中读取用户信息并保存到数据库。
  条件: 文件读取成功
  动作: 调用saveUser方法保存用户信息

### TestAAAController_refreshUpdatePermission_RuleSet
- 描述: 规则集用于描述TestAAAController_refreshUpdatePermission API的业务规则。
- 业务域: 课程管理

主要规则:
- 查询所有课程学生信息: 从数据库中查询所有课程学生的信息。
  条件: 调用baseMapper.queryAllCourses()
  动作: 获取所有课程学生的信息列表courseStudentPos
- 查询课程信息: 根据课程ID查询课程信息。
  条件: courseStudentPo.getCourseId() != null
  动作: 调用courseDao.selectById(courseStudentPo.getCourseId())获取课程信息coursePo
- 获取用户角色信息: 根据用户的更新代码或创建代码获取用户的角色信息。
  条件: updateCode != null && !updateCode.isEmpty() || createCode != null && !createCode.isEmpty()
  动作: 调用userInfoFeign.getUserInfoRoleByUserId(updateCode, SecurityConstants.FROM_VALUE)获取用户角色信息userInfoRoleVoResultVo
- 解析用户数据权限: 解析用户角色的数据权限信息，更新课程学生的组织域代码和分类域代码。
  条件: userInfoRoleVoResultVo.getCode() == 0 && dataPermissionList != null && !dataPermissionList.isEmpty()
  动作: 根据角色的数据权限信息更新courseStudentPo的domainCodeOrg和domainCodeCa
- 批量更新课程学生信息: 批量更新课程学生的组织域代码和分类域代码到数据库。
  条件: updateList != null && !updateList.isEmpty()
  动作: 调用baseMapper.batchRefreshUpdaterDomainCode(updateList)批量更新课程学生信息

### OrganizationKanBanController_planningCommentDetail_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_planningCommentDetail API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体验证规则: 验证请求体是否为有效的OrgBoardThirdRequest对象。
  条件: request != null && request instanceof OrgBoardThirdRequest
  动作: 继续处理请求

### UserLearnReportController_examLearnDetailPage_RuleSet
- 描述: 该规则集定义了UserLearnReportController_examLearnDetailPage API的业务规则。
- 业务域: 课程学习报告

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则返回错误信息。
  条件: request == null
  动作: 抛出异常或返回错误响应

### CommitteeCommentPermissionRules
- 描述: 该规则集定义了学员在特定委员会评论的权限验证逻辑。
- 业务域: 课程委员会评论权限管理

主要规则:
- 用户信息存在性验证: 验证当前用户信息是否存在。
  条件: userInfoRoleVo == null
  动作: 返回false
- perCode字段非空验证: 验证请求中的perCode字段是否为空。
  条件: StringUtils.isEmpty(perCode)
  动作: 返回false
- perCode格式验证: 验证请求中的perCode字段是否符合'category-xxx'格式。
  条件: !perCodeSplit[0].equalsIgnoreCase('category')
  动作: 返回false
- 用户专委会验证: 验证当前用户是否属于请求中的委员会。
  条件: !(categoryCode.equalsIgnoreCase(perCodeSplit[1]) || secCategoryCode.equalsIgnoreCase(perCodeSplit[1]))
  动作: 返回false

### RenovationReportController_getReportEvaluationList_Rules
- 描述: 规则集用于验证和处理RenovationReportController_getReportEvaluationList API的请求体参数。
- 业务域: 课程管理

主要规则:
- 学习适应性评分转换规则: 根据学习适应性评分列表，生成对应的具体评分列表。
  条件: learnFitSrcoeList is not empty
  动作: Convert learnFitSrcoeList to learnSrcoeList with corresponding scores.
- 响应速度评分转换规则: 根据响应速度评分列表，生成对应的具体评分列表。
  条件: respSpeedScoreList is not empty
  动作: Convert respSpeedScoreList to respScoreList with corresponding scores.
- 学员评价数据获取规则: 调用courseDao的getReportEvaluationList方法获取学员评价数据。
  条件: learnSrcoeList or respScoreList is set
  动作: Invoke courseDao.getReportEvaluationList to fetch evaluation data.
- 空记录检查规则: 检查获取的学员评价数据记录是否为空。
  条件: records is empty
  动作: Return null.

### CourseChapterResourceValidationRules
- 描述: 课程章节资源验证规则集，用于确保课程章节的小节都有对应的资源文件URL。
- 业务域: 课程资源管理

主要规则:
- CheckCourseChapterSectionsForResources: 检查指定课程的所有章节及其小节，确保每个小节都有对应的资源文件URL。
  条件: CollectionUtils.isEmpty(courseSectionVos)
  动作: throw new BizBaseException("章下节不能为空");
- CheckEachSectionForResourceFileURL: 检查每个小节的资源文件URL是否存在。
  条件: StringUtils.isBlank(courseSectionVo.getFileUrl())
  动作: throw new BizBaseException(courseChapterSectionDetailVo.getName() + courseSectionVo.getName() + "资源为空");

### VersionAnnouncementController_queryHistoryAnno_RuleSet
- 描述: 该规则集定义了VersionAnnouncementController_queryHistoryAnno API的业务规则。
- 业务域: 课程管理

主要规则:
- 验证publishType有效性: 验证请求体中的publishType字段是否为有效的整数值（0或1）。
  条件: request.getPublishType() != 0 && request.getPublishType() != 1
  动作: 抛出异常或返回错误信息

### Course Management Rules
- 描述: 规则集用于管理课程信息的添加和更新过程中的各种验证和业务逻辑
- 业务域: 课程管理

主要规则:
- 讲师名称长度验证: 验证讲师名称长度不超过200字符
  条件: StringUtils.isNotBlank(courseVO.getLecturerNames()) && courseVO.getLecturerNames().length() > 200
  动作: throw new BizBaseException("讲师名称不能超过200字符")
- 讲师简介长度验证: 验证讲师简介长度不超过500字符
  条件: StringUtils.isNotBlank(courseVO.getLecturerIntroduction()) && courseVO.getLecturerIntroduction().length() > 500
  动作: throw new BizBaseException("讲师简介不能超过500字符")
- 所属目录验证: 验证所属目录是否为子目录
  条件: courseCategoryDao.queryByCategoryParentId(categoryId) > 0
  动作: throw new BizBaseException("所属目录请选择子目录")
- 课程类别验证: 验证课程类别是否为子类别
  条件: courseCategoryDao.queryByCategoryParentId(contentsId) > 0
  动作: throw new BizBaseException("课程类别请选择子类别")
- 课程封面处理: 处理课程封面图片的加水印操作
  条件: StringUtils.isNotBlank(courseVO.getText())
  动作: String newUrl = waterMarkUtils.getFileUrl(courseVO.getText()); if (StringUtils.isNotBlank(newUrl)) { DocVo docVo = new DocVo(); docVo.setUrl(newUrl); docVo.setName("课程封面"); coursePo.setCover(JSON.toJSONString(docVo)); }
- 讲师信息处理: 根据讲师类型设置讲师名称和简介为空
  条件: lecturerType == null || lecturerType == 2
  动作: coursePo.setLecturerNames(""); coursePo.setLecturerIntroduction("");
- 课程维度设置: 根据用户角色设置课程的维度代码和组织级别
  条件: Role.WarningEducationDomainCode.equals(courseVO.getPerCode()) && !roleCodeList.contains(Role.SUPERADMIN)
  动作: if (roleCodeList.contains(Role.WarningEducationAdmin)) { coursePo.setDimensionCodes("warningEducation"); coursePo.setCreateRole(Role.WarningEducationAdmin); } else { List<UserDataPermissionVo> dataPermissionListNew = dataPermissionList.stream().filter(o -> o.getRoleCode().equals(Role.WarningEducationDomainAdmin)).collect(Collectors.toList()); List<String> collect = dataPermissionListNew.stream().filter(e -> StringUtils.equals(RoleEnum.HRSYNTHESISGROUP.getCode(), e.getDimensionCode()) || StringUtils.equals(RoleEnum.BU_CODE.getCode(), e.getDimensionCode()) || StringUtils.equals(RoleEnum.PT_CODE.getCode(), e.getDimensionCode()) || StringUtils.equals(RoleEnum.XW_CODE.getCode(), e.getDimensionCode())).map(UserDataPermissionVo::getPropertyCode).collect(Collectors.toList()).stream().sorted().collect(Collectors.toList()); List<String> collectNew = new ArrayList<>(); for (String s : collect) { collectNew.add("warningEducation-" + s); } String code = String.join(",", collectNew); coursePo.setCreateRole(Role.WarningEducationDomainAdmin); coursePo.setDimensionCodes(code); } coursePo.setOrgLevel(4); coursePo.setDimensionType("category");
- 课程保存或更新: 根据课程ID是否存在来决定保存新课程还是更新现有课程
  条件: id != null
  动作: CoursePo coursePoOld = baseMapper.selectById(id); if (coursePoOld != null) { baseMapper.updateById(coursePo); }

### StudentCollectionController_queryMyCollectionList_RuleSet
- 描述: 规则集用于描述StudentCollectionController_queryMyCollectionList API的业务规则。
- 业务域: 在线课程管理

主要规则:
- Validate User Account: 检查MyCollectionVo中的用户账号是否为空，如果为空则从请求头中获取。
  条件: myCollectionVo.getAccount() == null || myCollectionVo.getAccount().isEmpty()
  动作: account = webSessionUtils.getUserAccount()

### WarningEducationController_queryAllEvaluations_RuleSet
- 描述: 规则集用于描述WarningEducationController_queryAllEvaluations API的业务逻辑。
- 业务域: 课程评价管理

主要规则:
- 查询课程评价: 根据提供的课程ID查询课程的所有评价。
  条件: courseId != null
  动作: 调用courseSectionCommentDao.queryAllEvaluations(courseId)获取评价列表。
- 设置删除标志: 对属于当前登录学员的评价设置删除标志。
  条件: commentDetailVos.stream().anyMatch(o -> o.getUserNo().equals(account))
  动作: 遍历评价列表，如果评价的用户编号等于当前登录用户的账号，则将评价的删除标志设置为1。

### WarningEducationController_visitDynamic_RuleSet
- 描述: 该规则集定义了WarningEducationController_visitDynamic API的业务规则，包括动态类型的验证和用户访问历史的记录。
- 业务域: 课程动态管理

主要规则:
- 动态类型有效性验证: 验证传入的dynamicType参数是否属于预设的有效类型之一
  条件: dynamicType 不等于 'homepage_dynamics' 或 'homepage_rules' 或 'homepage_notice'
  动作: 返回空响应，不记录访问历史
- 用户访问历史记录: 如果用户尚未访问过该动态，则记录用户的访问历史
  条件: renovationDynamicBrowsingHistoryPo 对象为空
  动作: 创建新的renovationDynamicBrowsingHistoryPo对象并设置相关属性，然后保存到数据库

### TrainPlanningController_queryPlanningCountsIntegrityClassroom_RuleSet
- 描述: 规则集用于处理TrainPlanningController_queryPlanningCountsIntegrityClassroom API的业务逻辑。
- 业务域: 课程管理

主要规则:
- Validate User Account: 验证用户账号是否存在。
  条件: webSessionUtils.getUserAccount() != null
  动作: 继续执行后续逻辑
- Calculate No Study Count: 计算未学习的数量。
  条件: CollectionUtils.isNotEmpty(planningIdList)
  动作: noStudyCount = planningIdList.size() - (finishCount + studyingCount)
- Calculate No Finish Count: 计算未完成的数量。
  条件: CollectionUtils.isNotEmpty(planningIdList)
  动作: noFinishCount = noStudyCount + studyingCount
- Default Counts: 如果没有找到任何规划，则设置默认数量。
  条件: !CollectionUtils.isNotEmpty(planningIdList)
  动作: defaultCount(countsDetailVo)

### SceneCourseController_querySceneDetail_RuleSet
- 描述: 该规则集定义了SceneCourseController_querySceneDetail API的业务规则，包括用户账号验证、场景ID验证以及课程权限过滤。
- 业务域: 课程管理

主要规则:
- 用户账号验证: 验证当前请求的用户账号是否存在
  条件: userAccount == null
  动作: 返回空的SceneCategoryPo对象
- 场景ID验证: 验证传入的场景ID是否存在
  条件: sceneId == null
  动作: 返回空的SceneCategoryPo对象
- 课程权限过滤: 根据用户账号过滤用户无权限的课程，并统计每个专题的课程数量
  条件: themeList != null && !themeList.isEmpty()
  动作: 遍历themeList，调用getHasPermissionCourseIds方法过滤课程ID，并统计每个专题的课程数量

### UserLearnReportController_courseLearnDetailPage_RuleSet
- 描述: 该规则集定义了UserLearnReportController_courseLearnDetailPage API的业务规则。
- 业务域: 课程学习报告

主要规则:
- 请求体验证规则: 验证请求体是否为有效的CourseLearnReportRequest对象，包括current和size字段的有效性。
  条件: request != null && request.current > 0 && request.size > 0
  动作: 继续处理请求

### Validation Rules for Course Comments
- 描述: This rule set contains validation rules for the CommentCourseVo object used in the course comment API.
- 业务域: 课程学习与评价

主要规则:
- Validate CommentCourseVo: Ensure that the CommentCourseVo object is valid according to the defined constraints.
  条件: @Validated CommentCourseVo commentCourseVo
  动作: Proceed with commentCourse method call if valid

### CourseStudentStudyController_Rules
- 描述: 该规则集定义了CourseStudentStudyController_queryStudyDetails API的业务规则。
- 业务域: 课程学习管理

主要规则:
- Validate CourseStudyDetailVo: 验证请求体中的CourseStudyDetailVo对象是否符合要求。
  条件: @RequestBody @Validated CourseStudyDetailVo courseStudyDetailVo
  动作: 继续处理请求
- Query Study Details: 根据CourseStudyDetailVo对象中的信息查询课程学习详情。
  条件: this.service.queryStudyDetail(courseStudyDetailVo)
  动作: 获取PageInfo<CourseStudentStudyVo>对象
- Return ResultVo: 将查询到的PageInfo<CourseStudentStudyVo>对象封装到ResultVo<CourseStudentStudyVo>对象中并返回。
  条件: ResultVo.successPage(pageInfo)
  动作: 返回ResultVo<CourseStudentStudyVo>对象

### OrganizationKanBanController_userLearningDetail_RuleSet
- 描述: 规则集用于验证和处理OrganizationKanBanController_userLearningDetail API的请求和响应
- 业务域: 课程学习统计

主要规则:
- 请求体非空验证: 验证传入的OrgBoardDetailRequest请求体是否为空
  条件: request == null
  动作: 抛出异常或返回错误信息

### RenovationZoneController_Rules
- 描述: 规则集用于RenovationZoneController_getByOrgCode API的业务逻辑验证和处理。
- 业务域: 课程专区管理

主要规则:
- 专委会编码不能为空: 验证传入的专委会编码是否为空
  条件: code == null || code.isEmpty()
  动作: 抛出异常，提示专委会编码不能为空
- 查询专区信息: 根据组织编码查询专区信息
  条件: renovationZoneService.getOne(...) != null
  动作: 返回专区的赞助者、名称和联系人

### UserLearningDurationDataController_refreshCourseRatingData_RuleSet
- 描述: 该规则集定义了刷新用户课程满意度数据时需要遵循的具体业务规则。
- 业务域: 课程满意度管理

主要规则:
- 验证请求体: 验证传入的UserRatingDataDto对象是否符合预期的数据格式和约束。
  条件: UserRatingDataDto对象不为空且所有必填字段都已正确填写
  动作: 继续处理请求
- 构建DTO: 根据传入的UserRatingDataDto对象构建内部使用的DTO。
  条件: UserRatingDataDto对象通过验证
  动作: 调用buildDto方法构建DTO
- 刷新规划满意度数据: 根据构建好的DTO刷新规划满意度数据。
  条件: DTO构建成功
  动作: 调用refreshPlanningRatingData方法刷新规划满意度数据
- 刷新课程满意度数据: 根据构建好的DTO刷新课程满意度数据。
  条件: DTO构建成功
  动作: 调用refreshCourseRatingData方法刷新课程满意度数据
- 刷新专委会满意度数据: 根据构建好的DTO刷新专委会满意度数据。
  条件: DTO构建成功
  动作: 调用refreshZoneRatingData方法刷新专委会满意度数据

### CourseStudentCustomListController_batchAddOrCancel_RuleSet
- 描述: 该规则集定义了CourseStudentCustomListController_batchAddOrCancel API的业务规则，包括必填字段验证、数据库操作和Redis缓存更新。
- 业务域: 课程管理

主要规则:
- 必填字段验证: 验证课程id、导入类型、isDel是否为空
  条件: ObjectUtils.isEmpty(courseStudentCustomListDto.getCourseId()) || ObjectUtils.isEmpty(courseStudentCustomListDto.getImportType()) || ObjectUtils.isEmpty(courseStudentCustomListDto.getIsDel())
  动作: 抛出BizBaseException异常
- 删除学生信息: 如果isDel为DEL_FLAG_YES，则删除学生信息并更新Redis缓存
  条件: courseStudentCustomListDto.getIsDel() == PoConstants.DEL_FLAG_YES
  动作: 更新数据库，设置fileName和fileUrl为null；将fileUrl缓存到Redis，有效期12小时
- 添加学生信息: 如果isDel为DEL_FLAG_NO且fileUrl为空，则从Redis获取文件URL并解析其中的学生信息，然后批量保存到数据库
  条件: courseStudentCustomListDto.getIsDel() == PoConstants.DEL_FLAG_NO && StringUtils.isBlank(fileUrl)
  动作: 从Redis获取文件URL并解析其中的学生信息；设置courseStudentId、courseId、importType、createDate和updateDate；批量保存到数据库
- 更新学生信息: 根据courseId和importType更新学生信息的isDel字段
  条件: courseStudentCustomListDto.getIsDel() != PoConstants.DEL_FLAG_YES
  动作: 更新数据库，设置isDel字段
- 处理对立人员信息: 如果存在对立人员信息，则根据account更新其isDel字段
  条件: !CollectionUtils.isEmpty(otherUserList)
  动作: 遍历userList，根据account更新otherUserList中的isDel字段

### TranscodeController_transcodeStatus_RuleSet
- 描述: 该规则集定义了TranscodeController_transcodeStatus API的业务规则。
- 业务域: 课程资源管理

主要规则:
- 验证转码任务查询: 验证是否有转码任务需要查询。
  条件: 客户端发送GET请求到/transcode/transcodeStatus路径
  动作: 调用transcodeService.queryTranscodeResults()方法获取转码任务结果

### RenovationZoneController_Rules
- 描述: 规则集用于RenovationZoneController_listZones API的业务逻辑处理
- 业务域: 课程专区管理

主要规则:
- Validate Source Parameter: 检查source参数的有效性，确保其符合预期的格式或预设值
  条件: source != null && !source.isEmpty()
  动作: 继续处理请求
- Check Cache Availability: 检查Redis缓存中是否存在指定source的专区列表信息
  条件: redisService.getString(RedisKeys.RENOVATION_ZONE_LIST_KEY + source) != null
  动作: 从缓存中读取专区列表信息并返回
- Filter Renovation Zones: 根据特定条件过滤专区列表信息
  条件: r != null && (checkModeOne(r, hasTopicRenovationIds, hasBannerRenovationIds) || checkModeTwo(r, source))
  动作: 保留符合条件的专区信息
- Sort Renovation Zones: 对专区列表信息进行排序
  条件: zones != null && !zones.isEmpty()
  动作: 按照orderNo和publishDate进行排序
- Store in Cache: 将处理后的专区列表信息存储到Redis缓存中
  条件: zones != null && !zones.isEmpty()
  动作: 将专区列表信息存储到Redis缓存中，设置过期时间为30分钟

### CourseCategoryController_get2Category_RuleSet
- 描述: 规则集用于处理CourseCategoryController_get2Category API的业务逻辑。
- 业务域: 课程分类管理

主要规则:
- 检查domainCode是否为空: 如果domainCode为空，则从当前用户信息中获取。
  条件: StringUtils.isBlank(domainCode)
  动作: 从webSession中获取UserInfoRoleVo，然后获取domainCode
- 验证用户权限信息: 如果用户权限信息为空，则抛出BizBaseException异常。
  条件: userInfoRoleVo == null
  动作: throw new BizBaseException("未获取到用户权限信息")
- 验证用户信息: 如果用户信息为空，则抛出BizBaseException异常。
  条件: userInfo == null
  动作: throw new BizBaseException("未获取到用户信息")
- 验证domainCode是否为空: 如果domainCode仍然为空，则抛出BizBaseException异常。
  条件: StringUtils.isBlank(domainCode)
  动作: throw new BizBaseException("未查询到当前用户所属领域")
- 验证二级分类列表是否为空: 如果获取到的二级分类列表为空，则返回空列表。
  条件: CollectionUtils.isEmpty(courseCategoryPos)
  动作: return new ArrayList<>(0)
- 验证每个二级分类是否有课程: 如果某个二级分类没有课程，则从列表中移除。
  条件: courseService.getAllCategoryCourseNum(idCh) == 0
  动作: courseCategoryPos.removeIf(o -> o.getId().equals(idCh))

### CourseCategoryController_getCategorytByUserAndFirst_RuleSet
- 描述: 规则集用于描述CourseCategoryController_getCategorytByUserAndFirst API的业务规则
- 业务域: 在线课程导航

主要规则:
- 一级标签编码不允许为空: 检查传入的一级标签id是否为空，如果为空则抛出异常
  条件: id == null
  动作: throw new BizBaseException("一级标签编码不允许为空")
- 查询用户领域编码: 通过用户账号查询用户所属的领域编码
  条件: webSession.getUserAccount() != null
  动作: bscEmployeeDao.selectOne(new LambdaQueryWrapper<>(BscEmployee.class).select(BscEmployee::getBuCode).eq(BscEmployee::getEmpSn, webSession.getUserAccount()))
- 过滤课程分类信息: 根据用户领域编码和一级标签id过滤课程分类信息
  条件: employee != null && !StringUtils.isBlank(employee.getBuCode())
  动作: baseMapper.selectList(new LambdaQueryWrapper<>(CourseCategoryPo.class).in(CourseCategoryPo::getCategoryLevel, levelList).eq(CourseCategoryPo::getIsDel, 0).eq(CourseCategoryPo::getDimensionType, "org"))
- 构建课程分类树: 根据过滤后的课程分类信息构建课程分类树
  条件: CollectionUtils.isNotEmpty(categoryPoList)
  动作: 构建课程分类树逻辑

### CourseController_pageBigAndPublishCourses_RuleSet
- 描述: 规则集用于CourseController_pageBigAndPublishCourses API的业务逻辑验证。
- 业务域: 课程管理

主要规则:
- 验证请求体: 验证请求体是否符合BigAndPublishCourseQueryVo的结构要求。
  条件: coursesVO != null
  动作: 继续处理请求
- 检查是否为大课程: 根据coursesVO.getIsBigCourse()的值判断是否需要进一步处理大课程映射。
  条件: new Integer(1).equals(coursesVO.getIsBigCourse())
  动作: 获取大课程映射并解析
- 解析参数: 对查询结果中的每一条记录进行参数解析。
  条件: page != null && CollectionUtils.isNotEmpty(page.getRecords())
  动作: 调用parseParameters(records)方法

### TrainPlanningController_queryPlanningCounts_RuleSet
- 描述: 规则集用于描述TrainPlanningController_queryPlanningCounts API的业务逻辑和规则。
- 业务域: 课程管理

主要规则:
- Validate User Account: 验证当前登录学员的账号信息是否存在。
  条件: webSessionUtils.getUserAccount() != null
  动作: 继续执行后续逻辑以查询培训计划状态统计信息。
- Query Planning IDs: 查询当前登录学员相关的培训计划ID列表。
  条件: CollectionUtils.isNotEmpty(planningIdList)
  动作: 继续执行后续逻辑以查询培训计划状态统计信息。
- Calculate No Study Count: 计算未学习的培训计划数量。
  条件: countsDetailVo != null
  动作: 设置countsDetailVo的noStudyCount属性。

### CourseController_getCourse_Rules
- 描述: 课程查询API相关的业务规则集合
- 业务域: 课程管理

主要规则:
- 课程存在性验证: 验证根据传入的课程ID查询到的课程是否存在
  条件: coursePo == null
  动作: throw new BizBaseException("根据id未查询到课程")
- 课程映射ID验证: 如果课程存在映射ID，则使用映射ID重新查询课程信息
  条件: coursePo.getIsMapping() != null && coursePo.getIsMapping() == PoConstants.DEL_FLAG_YES
  动作: id = coursePo.getMappingId(); coursePo = baseMapper.queryByCourseId(id);
- 创建人信息处理: 根据课程的创建人信息设置buName
  条件: StringUtils.isNotBlank(coursePo.getCreateCode())
  动作: 查询创建人信息并设置buName
- 链接URL处理: 根据课程ID查询链接URL并设置linkUrl
  条件: coursePo.getIsLinks() != null && coursePo.getIsLinks() == 1
  动作: 查询链接URL并设置linkUrl
- 封面处理: 根据课程的封面信息设置coverVo
  条件: StringUtils.isNotBlank(coverString)
  动作: 解析封面信息并设置coverVo
- 附件处理: 根据课程的附件信息设置attachmentsList
  条件: StringUtils.isNotBlank(attachments)
  动作: 解析附件信息并设置attachmentsList
- 范围处理: 根据课程的范围信息设置scopeList
  条件: StringUtils.isNotBlank(scope)
  动作: 解析范围信息并设置scopeList
- 内容名称处理: 根据课程的内容ID查询内容名称并设置contentsName
  条件: courseContent != null
  动作: 设置contentsName
- 分类名称处理: 根据课程的分类ID查询分类名称并设置categoryName
  条件: courseCategory != null
  动作: 设置categoryName
- 课程评分计算: 根据课程ID计算课程评分并设置evaluate
  条件: courseGradVo != null && totalEvaluate != null && evaSectionCount != null && !evaSectionCount.equals(0)
  动作: 计算评分并设置evaluate

### PingEndpointRules
- 描述: 定义了/test/ping API端点的业务规则，包括认证要求。
- 业务域: 系统健康检查

主要规则:
- Authentication Required: 所有对/test/ping路径的GET请求必须经过认证。
  条件: request.isAuthenticated() == false
  动作: throw new UnauthorizedAccessException()

### CourseStudentStudyDurationController_refreshDuration_RuleSet
- 描述: 规则集用于管理CourseStudentStudyDurationController_refreshDuration API的业务逻辑和验证。
- 业务域: 课程管理

主要规则:
- Authorization Check: 检查请求是否具有适当的授权以访问API。
  条件: 用户已登录并且具有管理权限
  动作: 允许请求继续处理
- Refresh Study Duration: 调用courseStudentStudyDurationService的refreshStudyDuration方法来刷新用户的学习时长。
  条件: API被调用
  动作: courseStudentStudyDurationService.refreshStudyDuration()

### CourseCategoryDeletionRules
- 描述: 规则集用于管理端删除课程分类时的各种验证和操作
- 业务域: 课程管理

主要规则:
- CheckCategoryExistence: 验证指定ID的课程分类是否存在
  条件: categoryPo == null
  动作: 抛出BizBaseException异常，提示'该目录不存在'
- CheckCategoryCourses: 验证指定ID的课程分类是否有关联的课程
  条件: num > 0
  动作: 抛出BizBaseException异常，提示'该目录有课程,无法删除'
- CheckUserPermissions: 验证当前用户是否有权限删除该课程分类
  条件: highestPermissionOption == null || StringUtils.isEmpty(highestPermissionOption.getRoleCode()) || !highestPermissionOption.getRoleCode().equals(courseRoleProperty.getSuperAdmin())
  动作: 抛出BizBaseException异常，提示'该分类没有权限删除'

### RenovationReportController_Rules
- 描述: 管理端-专委会报表根据族群查询专业专区数据的业务规则集合
- 业务域: 装修管理

主要规则:
- Validate Renovation Code: 检查专区code是否为空，如果为空则抛出BizBaseException异常
  条件: StringUtils.isBlank(code)
  动作: throw new BizBaseException("专区code不能为空")
- Split and Process Codes: 将专区code字符串按逗号分割，并对每个维度code获取最高权限选项，然后添加到codes列表中
  条件: code != null
  动作: String[] split = code.split(","); for (String dimensionCode : split) { AdminPermissionVO adminPermissionVO = adminDataPermissionService.getHighestPermissionOption(dimensionCode); String renovationCode = adminPermissionVO.getPerCodes(); codes.add(renovationCode); }
- Fetch Renovation Reports: 根据codes列表查询对应的装修报告列表
  条件: codes != null
  动作: List<RenovationReport> renovationList = renovationDao.getRenovationList(codes);
- Set Values for Renovation Way 1: 如果装修报告的装修方式为1，则设置相应值
  条件: renovationReport.getRenovationWay() == 1
  动作: setValue(renovationReport)
- Rename ESG Report: 如果装修报告列表只有一个元素且其renovationCode为'esg'，则将其renovationName设置为'ESG专委会'
  条件: renovationList.size() == 1 && StringUtils.equals("esg", renovationList.get(0).getRenovationCode())
  动作: renovationList.get(0).setRenovationName("ESG专委会");

### CourseController_guessLikeForYou_RuleSet
- 描述: 规则集用于描述CourseController_guessLikeForYou API的具体业务逻辑和验证规则。
- 业务域: 课程推荐

主要规则:
- 验证当前登录学员信息是否存在: 检查当前登录学员的信息是否存在于数据库中，如果不存在则抛出异常。
  条件: employee == null
  动作: throw new BizBaseException("获取当前登录人信息失败")
- 验证推荐课程列表是否为空: 检查推荐课程列表是否为空，如果为空则返回空列表。
  条件: CollectionUtils.isEmpty(allClassDetails)
  动作: return Collections.emptyList()
- 验证学员是否有权限查看推荐课程: 根据学员的可见类型和自定义列表，过滤掉学员无权限查看的课程。
  条件: CollectionUtils.isEmpty(allVisibleIds)
  动作: return Collections.emptyList()

### OrganizationKanBanController_courseBoard_RuleSet
- 描述: 该规则集定义了处理课程整体满意度三级页面请求的相关业务规则。
- 业务域: 课程满意度管理

主要规则:
- 请求体格式验证: 验证传入的请求体是否符合OrgBoardThirdRequest格式。
  条件: 请求体格式为OrgBoardThirdRequest
  动作: 继续处理请求

### CommitteeSatisfactionCalculationRules
- 描述: 该规则集定义了计算专委会培训满意度的具体业务规则。
- 业务域: 课程管理

主要规则:
- FilterPublishedAndNotDeletedCommittees: 过滤已发布且未删除的专委会。
  条件: renovationPo.getStatus() == 1 && renovationPo.getIsDel() == 0
  动作: 将符合条件的renovationCode添加到renovationCodes列表中。
- ValidateComments: 验证评论的有效性，包括已完成评价的评论或最新发布的评价。
  条件: planningComment.getCommentPlanningStatus() == 1 || (planningComment.getCommentPlanningStatus() == 0 && personComment.getCommentPlanningStatus() == 1) || (planningComment.getCommentDate().isAfter(personComment.getCommentDate()))
  动作: 将符合条件的planningComment添加到validScoreMap中。
- CalculateAverageScore: 计算专委会的平均满意度分数。
  条件: CollectionUtil.isNotEmpty(validScoreMap)
  动作: 计算总分数并除以有效评论的数量，得到平均分数。

### Validation Rules for RecentStudyVo
- 描述: 一组用于验证RecentStudyVo对象有效性的规则
- 业务域: 学习规划

主要规则:
- Validate RecentStudyVo: 验证RecentStudyVo对象的有效性
  条件: @Validated注解确保RecentStudyVo对象的所有字段都符合预设的约束条件
  动作: 通过验证

### CommitteeKanBanController_userAvgLearnDurationDistribution_Rules
- 描述: 规则集用于管理端-人均学习时长分布页面查询API的业务规则
- 业务域: 课程管理

主要规则:
- Validate Request Body Fields: 检查请求体中的code和queryType字段是否为空
  条件: StringUtil.isBlank(request.getCode()) || StringUtil.isBlank(request.getQueryType())
  动作: return iPage
- Validate Current Role Info: 检查当前角色信息是否为空
  条件: Objects.isNull(currentRoleInfo)
  动作: return iPage
- Validate Organization Code List: 检查组织编码列表是否为空
  条件: CollectionUtils.isEmpty(orgCodeList)
  动作: return iPage
- Format Average Learning Duration: 格式化平均学习时长为两位小数
  条件: CollectionUtils.isNotEmpty(reList.getRecords())
  动作: reList.getRecords().forEach(c -> c.setAvgLearnDuration(String.format("%.2f", Double.valueOf(c.getAvgLearnDuration()))))

### CourseStudentStudyDurationController_getTeamWeekPlan_RuleSet
- 描述: 规则集用于验证和处理CourseStudentStudyDurationController_getTeamWeekPlan API的请求参数和响应。
- 业务域: 课程学习管理

主要规则:
- 验证查询参数num的有效性: 验证查询参数num是否为正整数。
  条件: num > 0
  动作: 继续处理请求，调用courseStudentStudyDurationService.listTeamOnWeekPlan(num)。

### Redis Test Rules
- 描述: 规则集用于验证Redis缓存功能API的行为。
- 业务域: 缓存服务

主要规则:
- Redis Set and Get Validation: 验证Redis服务是否能够正确设置和获取键值对。
  条件: redisService.set("123", "456", 10, TimeUnit.SECONDS) && redisService.getString("123") != null
  动作: 返回从Redis中获取的值。

### Course Student Study Rules
- 描述: 规则集用于处理课程学员学习详情导出相关的业务逻辑。
- 业务域: 课程管理

主要规则:
- Validate Course Study Detail Vo: 验证传入的CourseStudyDetailVo对象的有效性。
  条件: courseStudyDetailVo != null && courseStudyDetailVo.isValid()
  动作: 继续处理导出逻辑。

### RenovationZoneController_Rules
- 描述: 规则集，用于描述 RenovationZoneController_getZoneHomeRenovationId 接口的业务规则
- 业务域: 课程管理

主要规则:
- 验证 renovationId 是否为空: 检查 renovationId 参数是否为空，如果为空则抛出异常
  条件: renovationId == null
  动作: 抛出异常，提示 'ID不能为空'
- 验证 source 是否有效: 检查 source 参数是否为 'MOBILE' 或 'PC'，如果不是则设置默认值 'MOBILE'
  条件: source 不等于 'MOBILE' 且 source 不等于 'PC'
  动作: 设置 source 为 'MOBILE'
- 根据 source 过滤横幅信息: 根据 source 参数过滤横幅信息，如果是 'MOBILE' 则返回 mbBannerList，如果是 'PC' 则返回 pcBannerList
  条件: source 等于 'MOBILE'
  动作: 返回 mbBannerList
- 根据 source 和 renovationModule 过滤横幅信息: 根据 source 和 renovationModule 的 moduleType 过滤横幅信息，如果是 'MOBILE' 且 mbBanners 为空则跳过该模块，如果是 'PC' 且 pcBanners 为空则跳过该模块
  条件: (source 等于 'MOBILE' 且 mbBanners 为空) 或 (source 等于 'PC' 且 pcBanners 为空)
  动作: 跳过该模块
- 根据 source 和 renovationModule 过滤课程信息: 根据 source 和 renovationModule 的 addConten 过滤课程信息，如果是 'PC' 则返回最多5个课程，如果是 'MOBILE' 则返回配置数量的课程
  条件: source 等于 'PC'
  动作: 返回最多5个课程
- 根据 source 和 renovationModule 过滤子分类信息: 根据 source 和 renovationModule 的 addConten 过滤子分类信息，如果是 'BY_CATEGORY' 则返回子分类ID
  条件: addConten 等于 RenovationContentTypeEnum.BY_CATEGORY.getValue()
  动作: 返回子分类ID

### Validation Rules for CourseStudyDataVo
- 描述: This rule set contains validation rules for the CourseStudyDataVo object used in the CourseController_exportStudyData API.
- 业务域: 课程管理

主要规则:
- Validate CourseStudyDataVo Object: Ensure that the CourseStudyDataVo object provided in the request body adheres to the constraints defined by the CourseStudyValid group.
  条件: @Validated(CourseStudyDataVo.CourseStudyValid.class)
  动作: Proceed with the export operation if the object is valid.

### RecentStudyController_refreshRecentLearnData_RuleSet
- 描述: 规则集用于处理RecentStudyController_refreshRecentLearnData API的业务逻辑
- 业务域: 学习进度管理

主要规则:
- CheckAndDeleteOldLearningRecords: 检查是否存在需要删除的学习记录数据，并删除每个账户和业务ID组合下的旧学习记录数据，只保留最新的记录。
  条件: delMap is not empty
  动作: For each account and businessID combination in delMap, sort the RecentStudyVo list by recentStudyTime in descending order and delete all but the first element.

### Validation Rules for CourseChapterController
- 描述: This rule set contains validation rules for the CourseChapterController API.
- 业务域: 课程管理

主要规则:
- Validate CourseChapteVo Object: Ensure that the CourseChapteVo object provided in the request body is valid according to the defined constraints.
  条件: @RequestBody @Validated CourseChapteVo courseChapteVo is not null and meets all validation constraints
  动作: Proceed with adding or updating the course chapter
- Check if Chapter ID Exists: If the id field in the CourseChapteVo object is not null, check if a chapter with that ID already exists.
  条件: courseChapteVo.getId() != null && baseMapper.selectById(courseChapteVo.getId()) != null
  动作: Delete the existing chapter and proceed with adding the new one
- Convert and Save Course Chapter: Convert the CourseChapteVo object to a CourseChapterPo object and save it to the database.
  条件: courseChapteVo is valid
  动作: Convert using ConvertUtils.sourceToTarget and save using super.save

### CourseRecommendationRules
- 描述: 在线课程推荐相关的业务规则集合
- 业务域: 在线课程推荐

主要规则:
- Check User Login Status: 检查当前用户是否已登录，如果没有登录则记录错误日志。
  条件: StringUtils.isEmpty(webSession.getUserAccount())
  动作: log.error("=========recommendForYou 获取当前登录人id未空 account = {}================", account);
- Validate User Existence: 验证用户是否存在，如果不存在则抛出BizBaseException异常。
  条件: tltrewEmployee == null
  动作: throw new BizBaseException("用户不存在");
- Filter Visible Courses: 根据用户可见的课程ID列表过滤推荐课程列表。
  条件: !CollectionUtils.isEmpty(visibleIdsForRecommend)
  动作: 遍历visibleIdsForRecommend，将对应的OnlineClassDetailsVo添加到visibleList中。
- Sort Recommended Courses: 根据预设的推荐课程ID列表对筛选后的课程进行排序。
  条件: !CollectionUtils.isEmpty(visibleList)
  动作: 遍历courseIds，将对应的OnlineClassDetailsVo添加到result中。

### CommitmentLetterController_Rules
- 描述: 规则集用于管理端查询用户是否签署承诺书的业务逻辑。
- 业务域: 课程管理

主要规则:
- 用户登录验证: 验证当前用户是否已登录。
  条件: webSessionUtils.getUserAccount() == null || webSessionUtils.getUserAccount().isEmpty()
  动作: 抛出 BizBaseException("用户未登录")
- 查询用户签署的承诺书: 查询数据库中当前用户是否有一条已同意的承诺书记录。
  条件: list(new LambdaQueryWrapper<CommitmentLetterPo>().eq(CommitmentLetterPo::getUserNo, userNo).eq(CommitmentLetterPo::getIsAgreed, BooleanEnum.YES.getValue()).last(" limit 1 ")).isEmpty()
  动作: 返回 CommitmentLetterVo.builder().userNo(userNo).isAgreed(BooleanEnum.NO.getValue()).build()

### Validation Rules for Course Comment List Query
- 描述: This rule set contains validation rules for the CourseSectionLearnController_queryCommentList API.
- 业务域: 课程管理

主要规则:
- Validate CourseCommentVo Object: Ensure that the CourseCommentVo object in the request body is valid according to the defined constraints.
  条件: @Validated annotation ensures that the CourseCommentVo object meets all the constraints defined in its class.
  动作: Proceed with the query if the CourseCommentVo object is valid.

### CourseController_getCourseEvaluationData_RuleSet
- 描述: 该规则集定义了CourseController_getCourseEvaluationData API的业务规则。
- 业务域: 课程评价

主要规则:
- 请求有效性验证: 验证请求是否有效，由于该API没有请求参数和请求体，因此主要验证请求方法是否为GET。
  条件: 请求方法 == 'GET'
  动作: 继续处理请求，调用courseService.getCourseEvaluationData()

### StudentCollectionController_queryCollection_RuleSet
- 描述: 规则集用于描述StudentCollectionController_queryCollection API的业务规则。
- 业务域: 课程收藏管理

主要规则:
- 用户登录验证: 在查询课程收藏状态之前，验证用户是否已登录。
  条件: webSessionUtils.getUserAccount() != null
  动作: 继续执行查询操作

### CourseStudentCustomListController_deleteFile_RuleSet
- 描述: 规则集用于CourseStudentCustomListController_deleteFile API的业务逻辑验证和处理
- 业务域: 课程管理

主要规则:
- 验证请求体字段非空: 验证courseId、importType和isDel字段是否为空
  条件: ObjectUtils.isEmpty(courseStudentCustomListDto.getCourseId()) || ObjectUtils.isEmpty(courseStudentCustomListDto.getImportType()) || ObjectUtils.isEmpty(courseStudentCustomListDto.getIsDel())
  动作: throw new BizBaseException("课程id、导入类型、isDel不能为空")
- 根据importType查询用户: 根据importType查询要删除的人员
  条件: importType == 0 || importType == 1
  动作: this.baseMapper.selectList(new LambdaQueryWrapper<CourseStudentCustomListPo>().eq(CourseStudentCustomListPo::getCourseId, courseStudentCustomListDto.getCourseId()).eq(CourseStudentCustomListPo::getImportType, importType))
- 删除文件服务器上的文件: 从文件服务器上删除相应的文件
  条件: StringUtils.isNotBlank(fileName)
  动作: fileInfoFeign.delete(fileName)
- 更新数据库中的文件信息: 更新数据库中的文件信息字段为null
  条件: importType == 0 || importType == 1
  动作: baseMapper.update(null, fileWrapper)
- 逻辑删除之前添加的所有数据: 如果导入和排除都未空就删除之前添加的所有数据
  条件: (importType == 0 && StringUtils.isEmpty(courseStudentPo.getExcludeUserFileUrl())) || (importType == 1 && StringUtils.isEmpty(courseStudentPo.getFileUrl()))
  动作: baseMapper.logicDelByCourseId(courseStudentPo.getCourseId())

### RenovationZoneController_Rules
- 描述: 该规则集定义了RenovationZoneController_listZonePreviewModules API的业务规则
- 业务域: 课程装修

主要规则:
- ID不能为空: 验证传入的ID参数是否为空
  条件: id == null
  动作: 抛出异常，提示'id不能为空'
- 检查装修区域是否存在: 通过ID查找装修区域记录，如果不存在则返回空列表
  条件: renovation == null
  动作: 返回空列表
- 检查模块列表是否为空: 如果模块列表为空，则返回空列表
  条件: CollectionUtils.isEmpty(moduleList)
  动作: 返回空列表
- 检查话题列表是否为空: 如果话题列表为空，则返回空列表
  条件: CollectionUtils.isEmpty(topicList)
  动作: 返回空列表
- 过滤模块列表: 根据话题ID列表过滤模块列表
  条件: topicListIds.contains(m.getId())
  动作: 保留模块
- 转换模块对象: 将模块对象列表转换为ZoneModuleVo对象列表
  条件: source != null
  动作: 转换对象

### AllowListController_getList_RuleSet
- 描述: 规则集用于管理AllowListController_getList API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- Validate AllowListVo: 验证请求体是否为有效的AllowListVo对象。
  条件: allowListVo != null && allowListVo.getCurrent() > 0 && allowListVo.getSize() > 0
  动作: 继续处理请求。
- Pagination AllowListVo: 根据AllowListVo中的分页信息进行分页查询。
  条件: allowListVo.getCurrent() > 0 && allowListVo.getSize() > 0
  动作: 调用allowListService的getList方法进行分页查询。

### CommitteeRatingsByCommitteeRules
- 描述: 规则集用于定义查询专委会排序分数时的各种业务规则。
- 业务域: 课程管理

主要规则:
- FilterPublishedAndNotDeletedCommittees: 筛选已发布的且未删除的专委会列表
  条件: RenovationPo.getStatus == 1 && RenovationPo.getIsDel == 0
  动作: 将符合条件的专委会代码添加到renovationCodes列表中
- FetchZoneIdsForCommittees: 获取专委会下的地图ID
  条件: renovationCodes列表不为空
  动作: 调用trainPlanningFeign.getPlanningByZoneIds(zoneListQueryVo)获取地图ID
- CalculateCommitteeRatings: 计算专委会的各个评分维度
  条件: renovationCodes列表不为空
  动作: 分别调用statisticCourseRatingsByCommittee、statisticTargetTalentCoverRateByCommittee、statisticPromotingLearningExperienceByCommittee、statisticPlanningCompletionRateByCommittee、statisticLearningSceneByCommittee、statisticRespSpeedByCommittee、statisticTrainSatisfactionByCommittee方法计算评分
- SetCommitteeName: 设置专委会名称
  条件: renovationCode != 'esg'
  动作: 调用odsCategoryTopFeign.getNameByCode(renovationCode)获取专委会名称

### CourseCategoryController_getCategoryByUser_Rules
- 描述: 规则集用于CourseCategoryController_getCategoryByUser API的业务逻辑验证
- 业务域: 在线课程管理

主要规则:
- Validate User Existence: 检查当前用户是否存在且buCode不为空
  条件: employee == null || StringUtils.isBlank(employee.getBuCode())
  动作: return Collections.emptyList()
- Validate Query Result: 检查查询结果是否为空
  条件: CollectionUtils.isEmpty(categoryPoList)
  动作: return new ArrayList<>()

### RenovationModuleController_Rules
- 描述: 规则集用于管理端根据code查询课程的业务逻辑
- 业务域: 课程管理

主要规则:
- 验证addConten字段: 检查请求体中的addConten字段是否等于BY_CATEGORY的值
  条件: renovationQueryCourse.getAddConten() == RenovationContentTypeEnum.BY_CATEGORY.getValue()
  动作: 获取子分类ID并更新查询条件

### CourseChapterController_deleteCourseChapter_RuleSet
- 描述: 规则集用于管理端删除课程大纲章的业务逻辑
- 业务域: 课程管理

主要规则:
- 验证课程章节是否存在: 检查给定的课程章节ID是否对应有效的课程章节记录
  条件: courseChapterPo == null
  动作: throw new BizBaseException("根据id未查询到有效数据")
- 验证课程章节是否为最后一章: 检查给定的课程章节ID对应的课程是否有多个章节
  条件: count == 1
  动作: throw new BizBaseException("最后一章不可删除")

### CourseStudentCustomListController_isLook_Rule_Set
- 描述: 管理端-通过课程ID查询用户是否有权限观看课程的业务规则集
- 业务域: 课程权限管理

主要规则:
- Check Planning Course Permissions: 检查用户是否有通过课程规划导入的权限
  条件: planningIds 不为空 && plannings 包含 empsn
  动作: 返回 true
- Check Visible Type 1: 检查课程的可见类型是否为1（公开可见）
  条件: visibleType == 1
  动作: 返回 true
- Check Visible Type 3 and Admin Permissions: 检查课程的可见类型是否为3（特定部门可见）并且用户属于特定部门
  条件: visibleType == 3 && courseStudentPo.getPermissionsCode().split(',').contains(permsMap.get('buCode'))
  动作: 返回 true
- Check Special Committee Admin Permissions: 检查特殊委员会管理员是否有权限
  条件: createRole 等于 SPECIALCOMMITTEEADMIN && courseStudentPo.getPermissionsCode().split(',').contains(permsMap.get('jobTopCategoryCode') 或 permsMap.get('jobSecondCategoryCode'))
  动作: 返回 true
- Check Custom Exclusion: 检查用户是否在自定义排除列表中
  条件: visibleType == 4 && accountVisible 包含 id
  动作: 返回 false
- Check Custom Import: 检查用户是否在自定义导入列表中
  条件: visibleType == 4 && accountVisible 包含 id
  动作: 返回 true
- Check Conditional Rules: 检查用户是否满足课程的条件规则
  条件: studentPo.getIsConditional() == 1 && 满足所有条件
  动作: 返回 true
- Check Non-Conditional Rules: 检查用户是否满足课程的非条件规则
  条件: studentPo.getIsConditional() == 0 && 满足任意条件
  动作: 返回 true
- Check Design List Permissions: 检查用户是否在设计列表中有权限
  条件: visibleType == 5 && courseStudentDesignListPos 不为空
  动作: 返回 true

### SceneCourseController_updateSceneCategory_RuleSet
- 描述: 规则集用于验证和处理SceneCourseController_updateSceneCategory API的请求和响应。
- 业务域: 课程管理

主要规则:
- 场景分类ID和排序号验证规则: 验证场景分类列表中的每个分类是否包含有效的场景ID和排序号
  条件: categoryList.stream().anyMatch(po -> po.getId() == null || po.getSortNo() == null)
  动作: 抛出BizBaseException异常，提示场景ID或排序号不能为空

### VersionAnnouncementController_Rules
- 描述: 管理端公告列表查询接口相关的业务规则集合。
- 业务域: 课程管理

主要规则:
- User Admin Validation Rule: 验证当前用户是否为管理员。
  条件: this.getUserIfAdmin() != null
  动作: 允许查询公告列表。
- Query Conditions Handling Rule: 根据请求中的分页信息和查询条件进行数据库查询。
  条件: request.getCurrent() > 0 && request.getSize() > 0
  动作: 执行分页查询。
- Response Data Conversion Rule: 将查询结果转换为前端所需的格式。
  条件: versionAnnoPage.getRecords().size() > 0
  动作: 转换并设置展示信息。

### Validation Rules for CourseController_queryCoursesForPlan
- 描述: 一组用于验证CourseController_queryCoursesForPlan API请求体和用户权限的规则。
- 业务域: 课程管理

主要规则:
- 权限码格式验证: 验证请求体中的权限码(perCode)是否为空且格式是否正确（格式为'xxx-yyy'）。
  条件: StringUtils.isEmpty(coursesVO.getPerCode()) || coursesVO.getPerCode().split("-").length != 2
  动作: 抛出BizBaseException异常，提示权限码有误。
- 用户权限验证: 验证是否成功获取了用户的权限信息。
  条件: adminPermissionVO == null
  动作: 抛出BizBaseException异常，提示获取用户权限失败。

### learnRateTrend_RuleSet
- 描述: 学习率趋势API相关的业务规则集合。
- 业务域: 课程管理

主要规则:
- RequestBodyNotEmpty: 验证请求体是否为空。
  条件: request == null
  动作: 抛出异常，提示请求体不能为空。

### UserLearningDurationDataController_refreshDailyStudyDuration_RuleSet
- 描述: 规则集用于管理UserLearningDurationDataController_refreshDailyStudyDuration API的业务逻辑和验证。
- 业务域: 课程学习管理

主要规则:
- API Call Success Rule: 验证API调用是否成功，通过检查返回的ResultVo对象的状态码。
  条件: resultVo.getStatusCode() == 200
  动作: 记录日志并返回成功响应

### CommitteeKanBanController_queryStudyDurationTrend_Rules
- 描述: 规则集用于管理委员会看板控制器查询学习时长趋势的业务逻辑
- 业务域: 学习进度管理

主要规则:
- Validate Request Body: 验证请求体是否符合CommitteeKanBanLearnRateVO的格式要求
  条件: @RequestBody @Validated CommitteeKanBanLearnRateVO committeeKanBanLearnRateVO
  动作: 通过验证
- Determine Query Type: 根据queryType字段确定查询的时间范围
  条件: queryType == 4
  动作: 获取当前日期前6个月的每个月最后一天
- Fetch Permission Codes: 根据委员会代码获取管理员的最高权限选项
  条件: codeSplit != null
  动作: 调用adminDataPermissionService.getHighestPermissionOption获取权限代码
- Retrieve Study Duration Trend Data: 根据查询类型和日期范围从数据库中获取学习时长趋势数据
  条件: queryType in [0, 2, 3, 4, 5, 6]
  动作: 调用userLearningDurationDataDao的方法获取数据
- Sort and Paginate Data: 对获取的数据进行排序并分页
  条件: allList is not empty
  动作: 调用pageList方法进行分页，并按日期排序

### CourseSectionLearnController Rules
- 描述: 规则集用于描述CourseSectionLearnController_queryCourseLearn API的业务规则
- 业务域: 课程学习

主要规则:
- Validate CourseSectionLearnVo: 验证请求体中的CourseSectionLearnVo对象是否有效
  条件: @RequestBody @Validated CourseSectionLearnVo sectionLearn
  动作: 通过验证
- Check Course Source Type: 检查课程的来源类型是否为2
  条件: Objects.equals(byId.getCourseSourceType(), 2)
  动作: 调用getArticleInfoBySectionId方法获取文章内容文本并设置到响应对象中

### CourseStudentController_getById_RuleSet
- 描述: 规则集用于管理CourseStudentController_getById API的业务逻辑
- 业务域: 课程管理

主要规则:
- 验证学生是否存在: 检查通过id查询的学生是否存在，如果不存在则抛出异常
  条件: studentPo == null
  动作: throw new BizBaseException("未获取到课程配置信息")
- 处理分享人信息: 将分享人字符串转换为List<String>并去重
  条件: StringUtils.isNotBlank(sharePerson)
  动作: courseStudentVo.setSharePersons(Arrays.stream(sharePerson.split(",")).distinct().collect(Collectors.toList()))
- 设置年龄赛道名称: 如果年龄赛道不为空，则从数据库中获取赛道名称并设置到courseStudentVo中
  条件: StringUtils.isNotBlank(ageTrack)
  动作: courseStudentVo.setAgeTrackName(baseMapper.getAgeTrackName(ageTrack))
- 设置用户角色名称: 如果用户角色不为空，则从数据库中获取角色名称并设置到courseStudentVo中
  条件: StringUtils.isNotBlank(userRole)
  动作: courseStudentVo.setUserRoleName(baseMapper.getUserRoleName(userRole))

### OrganizationKanBanController_planningScorePage_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_planningScorePage API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则返回错误。
  条件: request == null
  动作: 抛出异常或返回错误响应

### CourseController_addPageView_RuleSet
- 描述: 该规则集定义了CourseController_addPageView API的业务规则，包括对courseId参数的验证以及增加浏览量的具体逻辑。
- 业务域: 课程管理

主要规则:
- courseId有效性验证: 验证传入的courseId是否为空或无效。
  条件: courseId == null || courseId.isEmpty()
  动作: 抛出异常或返回错误响应

### RenovationReportController_getReportCourseList_RuleSet
- 描述: 规则集用于管理RenovationReportController_getReportCourseList API的业务逻辑。
- 业务域: 课程管理

主要规则:
- 验证课程ID列表是否为空: 检查请求体中的courseIds字段是否为空。如果为空，则返回null。
  条件: CollectionUtils.isEmpty(renvationCourseVo.getCourseIds())
  动作: return null
- 根据维度类型分类课程详情: 根据维度类型（category或org）对查询到的课程详情进行分类。
  条件: 维度类型为'category'或'org'
  动作: 分类课程详情并补充维度名称

### AllowListController_deleteAllowlist_Rules
- 描述: 规则集用于管理AllowListController_deleteAllowlist API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- 验证白名单ID是否存在: 在删除白名单之前，验证传入的白名单ID是否存在于数据库中。
  条件: allowListService.existsById(id)
  动作: allowListService.deleteAllowlist(id); return ResultVo.success("删除白名单成功");

### Validation Ruleset for OrganizationKanBanController_courseCommentDetail
- 描述: 该规则集定义了对OrganizationKanBanController_courseCommentDetail API请求体的验证规则。
- 业务域: 课程满意度管理

主要规则:
- Validate Request Body: 验证请求体是否为有效的OrgBoardThirdRequest对象。
  条件: request != null && request instanceof OrgBoardThirdRequest
  动作: 继续处理请求

### TrainPlanningController_queryTrainPlanning_RuleSet
- 描述: 规则集用于描述TrainPlanningController_queryTrainPlanning API的业务逻辑
- 业务域: 学习计划管理

主要规则:
- Validate TrainPlanningVo: 验证请求体是否符合TrainPlanningVo的规范
  条件: @RequestBody @Validated TrainPlanningVo trainPlanningVo
  动作: 通过验证
- Set User Account: 从请求头中获取用户账号并设置到TrainPlanningVo对象中
  条件: webSessionUtils.getUserAccount()
  动作: 设置trainPlanningVo.setAccount(account)
- Query Integrity Classroom: 如果isIntegrity为1，则查询完整课堂信息
  条件: StringUtils.isNotBlank(trainPlanningVo.getIsIntegrity()) && StringUtils.equals("1", trainPlanningVo.getIsIntegrity())
  动作: baseMapper.queryIntegrityClassroom(pageVo, trainPlanningVo)
- Calculate Course Counts: 根据查询结果计算每个学习计划的必修课程数、选修课程数、总课程数以及完成课程数
  条件: resultList.getRecords().size() > 0
  动作: 遍历detailVos和detailsVos，更新TrainPlanningDetailVo对象的课程计数
- Check Planning Expiry: 判断每个学习计划是否过期
  条件: vo.getPlanningMode() == 1 && vo.getStartDay() != null && vo.getEndDay() != null
  动作: 如果当前时间大于结束时间，则设置vo.setIsExpired(1)，否则设置vo.setIsExpired(0)
- Publish Planning Info Event: 如果ids不为空，则发布PlanningInfoEvent事件
  条件: CollectionUtils.isNotEmpty(ids)
  动作: projectCreatePublish.publishGitGroupHarbor(new PlanningInfoEvent(ids))

### ExportController_exportEvaluateList_RuleSet
- 描述: 规则集用于管理ExportController_exportEvaluateList API的业务逻辑和数据处理。
- 业务域: 课程管理

主要规则:
- CourseCommentVo有效性验证: 验证请求体中的CourseCommentVo对象是否有效。
  条件: @RequestBody @Validated CourseCommentVo courseCommentVo
  动作: 继续处理请求
- 查询组织人员信息: 如果请求体中包含account或organizeCode，则查询组织人员信息。
  条件: StringUtils.isNotEmpty(courseCommentVo.getAccount()) || StringUtils.isNotEmpty(courseCommentVo.getOrganizeCode())
  动作: 调用sectionLearnDao.queryOrganizedPersons(courseCommentVo)获取组织人员信息
- 查询课程评分列表: 根据请求体中的筛选条件查询课程评分列表。
  条件: 无特定条件
  动作: 调用sectionCommentDao.exportEvaluateList(courseCommentVo)获取课程评分列表
- 设置课程评分列表参数: 根据查询到的组织人员信息设置课程评分列表的参数。
  条件: !CollectionUtils.isEmpty(sectionCommentList)
  动作: 调用setParams(sectionCommentList, employees)设置参数
- 导出Excel文件: 将处理后的课程评分列表数据填充到指定的Excel模板中并返回给客户端。
  条件: 无特定条件
  动作: 调用ExportUtil.fillExcel(response, fileName, templateName, sectionCommentList)生成并导出Excel文件

### CommitteeCommentController_Rules
- 描述: 规则集用于CommitteeCommentController_addCommitteeComment API的业务逻辑验证
- 业务域: 课程评价

主要规则:
- 评论分数有效性验证: 验证传入的CommitteeCommentVo对象中的评论分数是否在有效范围内
  条件: committeeCommentVo.getScore() >= 1 && committeeCommentVo.getScore() <= 5
  动作: 继续执行后续逻辑
- 用户评论权限验证: 根据传入的perCode字段解析维度类型和维度代码，并检查用户是否有权限评论
  条件: checkCanComment(userInfoRoleVo, perCodeSplit[1]) == true
  动作: 继续执行后续逻辑

### PublicCourseRegisterController_getLivePublicCourse_RuleSet
- 描述: 规则集用于处理学员端查询直播公开课的API逻辑。
- 业务域: 课程管理

主要规则:
- 验证BasePageVo有效性: 验证请求体BasePageVo中的分页信息是否有效。
  条件: basePageVo != null && basePageVo.getCurrent() > 0 && basePageVo.getSize() > 0
  动作: 继续处理请求
- 获取员工信息: 通过当前登录学员的账号获取对应的员工信息。
  条件: account != null
  动作: 调用bscEmployeeDao.selectOne获取员工信息
- 查询直播公开课: 使用获取到的员工信息和分页信息查询符合条件的直播公开课。
  条件: employee != null
  动作: 调用baseMapper.getLivePublicCourse查询直播公开课

### Validation Rules for RenovationZoneController
- 描述: A set of validation rules for the RenovationZoneController API.
- 业务域: 课程管理

主要规则:
- Validate ZoneQueryCourseVo: Ensure that the ZoneQueryCourseVo object in the request body is valid and contains all required fields.
  条件: moduleCourseVo != null && moduleCourseVo.getModuleId() != null && moduleCourseVo.getCurrent() > 0 && moduleCourseVo.getSize() > 0
  动作: Proceed with processing the request
- Check Module Existence: Verify that the module specified by moduleId exists in the system.
  条件: renovationModuleService.getById(moduleCourseVo.getModuleId()) != null
  动作: Continue processing the request
- Set Renovation Details: Set dimensionCode, dimensionType, addConten from RenovationPo to RenovationQueryCourseDto.
  条件: renovationModule != null
  动作: Set details in RenovationQueryCourseDto
- Query Courses: Query courses based on the content type (BY_COURSE or BY_CATEGORY) and set them in RenovationQueryCourseDto.
  条件: renovationModule.getAddConten() == RenovationContentTypeEnum.BY_COURSE.getValue() || renovationModule.getAddConten() == RenovationContentTypeEnum.BY_CATEGORY.getValue()
  动作: Query courses and set them in RenovationQueryCourseDto
- Select Courses For Zone: Select courses for the zone based on RenovationQueryCourseDto and return the result as a Page of OnlineClassDetailsVo.
  条件: renovationQueryCourse != null
  动作: Select courses and return the result

### CommitteeKanBanController_queryStudyDuration_Rules
- 描述: 规则集用于管理端-查询人均学习时长API的业务逻辑
- 业务域: 课程管理

主要规则:
- Validate CommitteeKanBanLearnRateVO: 验证请求体中的CommitteeKanBanLearnRateVO对象是否有效
  条件: committeeKanBanLearnRateVO != null && committeeKanBanLearnRateVO.getCode() != null && !committeeKanBanLearnRateVO.getCode().isEmpty() && committeeKanBanLearnRateVO.getQueryType() != null && committeeKanBanLearnRateVO.getEmployeeType() != null
  动作: 继续处理请求
- Process Committee Codes: 解析委员会代码并获取最高权限选项
  条件: codeList.size() > 0
  动作: 调用adminDataPermissionService.getHighestPermissionOption方法获取权限选项
- Query Study Duration: 根据解析后的委员会代码、查询类型和员工类型查询人均学习时长
  条件: codeList.size() > 0 && committeeKanBanLearnRateVO.getQueryType() != null && committeeKanBanLearnRateVO.getEmployeeType() != null
  动作: 调用userLearningDurationDataDao.queryStudyDuration方法查询人均学习时长

### MsgRecordController_list_Rules
- 描述: 该规则集定义了MsgRecordController_list API的业务规则，包括请求体验证、消息记录列表获取和响应封装。
- 业务域: 课程消息管理

主要规则:
- 请求体验证: 验证请求体是否为QueryListRequest类型并且必填。
  条件: request != null && request instanceof QueryListRequest
  动作: 继续处理请求
- 获取消息记录列表: 调用recordService.list方法根据请求条件获取消息记录列表。
  条件: 请求体验证通过
  动作: recordService.list(request)
- 封装响应: 将获取的消息记录列表封装到ResultVo<IPage<MsgResultResponse>>中返回。
  条件: 获取消息记录列表成功
  动作: return ResultVo.success(responseIPage)

### VersionAnnouncementController_exportVersionAnno_RuleSet
- 描述: 该规则集定义了VersionAnnouncementController_exportVersionAnno API的业务规则。
- 业务域: 课程管理

主要规则:
- 用户权限验证: 验证当前用户是否为管理员，只有管理员才能导出版本公告列表。
  条件: this.getUserIfAdmin() != null
  动作: 继续执行导出逻辑
- 查询版本公告数据: 根据传入的HistoryVerPubRequest参数查询数据库中的版本公告数据。
  条件: request.getPublishType() != null
  动作: 添加publishType条件进行查询
- 数据转换: 将查询到的VersionAnnouncementPo数据转换为VersionAnnoListVo格式。
  条件: versionAnnouncementPos.size() > 0
  动作: 执行convertAndUV方法进行数据转换
- 生成Excel文件: 使用ExportUtil工具将转换后的数据填充到Excel模板中。
  条件: versionAnnoListVos.size() > 0
  动作: 调用fillExcel方法生成Excel文件

### NewComerEventController_Rules
- 描述: 该规则集定义了添加新人活动事件API的业务规则。
- 业务域: 课程管理

主要规则:
- 事件类型验证规则: 验证传入的TNewComerEvent对象中的eventType字段是否为空或不在预设的typeList中。
  条件: StringUtils.isBlank(event.getEventType()) || !typeList.contains(event.getEventType())
  动作: 抛出BizBaseException异常，提示'事件类型有误！'

### TranscodeController Rules
- 描述: 定义了TranscodeController API相关的业务规则
- 业务域: 视频处理

主要规则:
- 验证请求体格式: 检查请求体是否符合TranscodeRequest格式
  条件: 请求体格式不符合TranscodeRequest
  动作: 抛出异常并返回400 Bad Request

### CourseQrcodeSignController_signDetailExport_RuleSet
- 描述: 该规则集定义了CourseQrcodeSignController_signDetailExport API的业务规则。
- 业务域: 课程签到管理

主要规则:
- 调整请求体中的size属性: 如果请求体中的签到ID列表不为空，则将请求体中的size属性调整为签到ID列表的大小。
  条件: CollectionUtils.isNotEmpty(request.getSignIds())
  动作: request.setSize(request.getSignIds().size())
- 验证courseId是否为空: 如果请求体中的courseId为空，则直接返回空的IPage对象。
  条件: Objects.isNull(request.getCourseId())
  动作: return ipage

### MsgRecordController_revoke_RuleSet
- 描述: 该规则集定义了MsgRecordController_revoke API的业务规则，包括消息ID的验证和撤销操作的执行。
- 业务域: 消息管理

主要规则:
- 消息ID验证规则: 验证消息ID是否存在并有效。
  条件: msgId != null && msgId > 0
  动作: 继续执行撤销操作

### Validation Rules for OnlineClassVo
- 描述: This rule set contains validation rules for the OnlineClassVo object used in the StudentCollectionController_queryLectureRoomCourses API.
- 业务域: 课程管理

主要规则:
- Validate BuCode and PtCode: Ensure that either buCode or ptCode is provided but not both simultaneously.
  条件: (!StringUtils.isEmpty(onlineClassVo.getBuCode()) && StringUtils.isEmpty(onlineClassVo.getPtCode())) || (StringUtils.isEmpty(onlineClassVo.getBuCode()) && !StringUtils.isEmpty(onlineClassVo.getPtCode()))
  动作: Proceed with querying courses based on the provided code(s)
- Validate OnlineClassVo Object: Validate the entire OnlineClassVo object using the EditOnlineClassValid group.
  条件: @Validated(OnlineClassVo.EditOnlineClassValid.class)
  动作: Proceed with processing the request

### CourseStudentCustomListController_batchSaveUser_RuleSet
- 描述: 规则集用于管理端批量保存人员的逻辑判断和处理。
- 业务域: 课程管理

主要规则:
- 检查规则信息: 检查courseStudentId对应的规则信息是否存在且有效。
  条件: ObjectUtils.isEmpty(courseStudentPo) || (StringUtils.isBlank(courseStudentPo.getOrgCode()) && StringUtils.isBlank(courseStudentPo.getCategoryTopCode()) && StringUtils.isBlank(courseStudentPo.getCategorySecCode()) && StringUtils.isBlank(courseStudentPo.getAgeTrack()) && StringUtils.isBlank(courseStudentPo.getUserRole()) && StringUtils.isBlank(courseStudentPo.getOrderValue()) && StringUtils.isBlank(courseStudentPo.getInHaierDate()))
  动作: 按照自定义导入信息保存人员
- 检查自定义导入信息: 检查是否存在自定义导入信息。
  条件: add > 0
  动作: 返回0，表示没有新的人员需要保存

### SceneCourseController_queryCourseList_RuleSet
- 描述: 该规则集定义了SceneCourseController_queryCourseList API的业务规则，包括参数验证、课程查询、权限过滤、分页和聚合。
- 业务域: 课程管理

主要规则:
- 验证用户账号、主题ID和场景ID: 检查用户账号、主题ID和场景ID是否为空，如果任一为空则返回空的PageInfo。
  条件: userAccount == null || vo.getThemeId() == null || vo.getSceneId() == null
  动作: return new PageInfo<>();
- 过滤课程ID: 根据用户的权限过滤课程ID，如果过滤后的课程ID列表为空则返回空的PageInfo。
  条件: courseIds.isEmpty()
  动作: return new PageInfo<>();
- 查询课程详情: 根据过滤后的课程ID列表查询课程详情。
  条件: courseIds.isNotEmpty()
  动作: courseDao.selectList(queryWrapper)
- 聚合课程详情: 聚合课程详情，包括课程ID、名称、封面、简介、范围、更新日期、讲师类型、讲师名称、讲师简介、点赞数、是否链接、课程来源类型、评价节数、浏览次数、总评价和平均评价。
  条件: coursePoList.isNotEmpty()
  动作: QueryOnlineClassListLogic.convertResult(pagedCoursePoList)
- 复制分页信息: 将分页信息从PageInfo<CoursePo>复制到PageInfo<OnlineClassDetailsVo>。
  条件: records.isNotEmpty()
  动作: EnhancedBeanUtil.copyProperties(newPage, PageInfo::new)

### LearningRateDistributionRules
- 描述: 该规则集定义了处理学习率分布API请求和响应的具体业务规则。
- 业务域: 课程管理

主要规则:
- ValidateRequestBody: 验证请求体是否符合OrgBoardBaseRequest格式
  条件: request != null && request 符合 OrgBoardBaseRequest 格式
  动作: 继续处理请求
- QueryLearningRateDistribution: 调用service.queryDistribution方法查询学习率分布数据
  条件: 请求体验证通过
  动作: 调用service.queryDistribution(request, OrgBoardBaseConstants.LEARN_RATE)
- ReturnSuccessResponse: 返回成功响应，包含查询到的学习率分布数据
  条件: 查询操作成功完成
  动作: 返回ResultVo.success(ipage)

### CourseSectionLearnController_initLearn_RuleSet
- 描述: 规则集用于定义CourseSectionLearnController_initLearn API的业务规则。
- 业务域: 课程学习管理

主要规则:
- 验证courseId有效性: 检查传入的courseId是否为有效的Long类型数值。
  条件: courseId != null && courseId > 0
  动作: 继续执行初始化操作。

### VersionAnnouncementController_delAnnoInfo_RuleSet
- 描述: 规则集用于管理端删除公告接口的业务规则
- 业务域: 课程管理

主要规则:
- Check if Announcement is Latest: 检查要删除的公告是否为最新发布的公告，如果是则不允许删除
  条件: annoPO != null && annoPO.getIsNewPublish() == 0
  动作: 允许删除公告

### CourseSearchHistoryController_delHistorySearch_RuleSet
- 描述: 规则集用于描述CourseSearchHistoryController_delHistorySearch API的业务规则。
- 业务域: 课程搜索历史管理

主要规则:
- 清空历史搜索记录: 当接收到GET请求时，调用historyService.delHistorySearch()方法清空当前登录学员的历史搜索记录。
  条件: 接收到GET请求
  动作: 调用historyService.delHistorySearch()方法

### CourseMappingController_refreshCategoryOrder_Rules
- 描述: 规则集用于管理端刷新组织初始化目录顺序的API
- 业务域: 课程管理

主要规则:
- 检查课程分类是否存在: 查询所有维度类型为组织且层级为1的课程分类，如果不存在则结束操作。
  条件: CollectionUtils.isEmpty(courseCategories)
  动作: return
- 检查维度编码分组是否为空: 根据维度编码对课程分类进行分组，如果分组结果为空则结束操作。
  条件: MapUtils.isEmpty(categoryMap)
  动作: return
- 检查每个维度编码下的课程分类是否为空: 遍历每个维度编码下的课程分类，如果某个维度编码下的课程分类为空则结束操作。
  条件: CollectionUtils.isEmpty(orgCategories)
  动作: return
- 设置'其他'分类的顺序号: 如果分类名为'其他'，则将其顺序号设置为999。
  条件: StringUtils.equals('其他', orgCategory.getCategoryName())
  动作: orgCategory.setOrderNo(999)
- 更新课程分类顺序号: 批量更新课程分类的顺序号。
  条件: true
  动作: courseCategoryService.batchUpdateOrderNo(courseCategories)

### Validation Rules for CourseReportDataVo
- 描述: 该规则集定义了对CourseReportDataVo对象进行验证的规则。
- 业务域: 课程管理

主要规则:
- Validate CourseReportDataVo: 验证传入的CourseReportDataVo对象是否符合预期的数据格式和约束。
  条件: @Validated注解确保CourseReportDataVo对象中的字段通过了所有定义的校验器。
  动作: 如果验证通过，继续处理请求。

### RenovationZoneController_Rules
- 描述: 规则集用于RenovationZoneController_pageZoneModuleCourse API的业务逻辑验证和处理
- 业务域: 课程管理

主要规则:
- ZoneQueryCourseVo有效性验证: 验证请求体中的ZoneQueryCourseVo对象是否有效
  条件: @RequestBody @Validated ZoneQueryCourseVo moduleCourseVo
  动作: 通过验证
- 模块存在性检查: 检查请求体中的模块ID对应的模块是否存在
  条件: renovationModule == null
  动作: 抛出BizBaseException("模块不存在")
- 课程ID列表获取: 根据模块内容类型获取课程ID列表
  条件: renovationModule.getAddConten() == RenovationContentTypeEnum.BY_COURSE.getValue()
  动作: 调用getCourseIds获取课程ID列表
- 用户可见课程过滤: 根据当前用户过滤可见的课程ID列表
  条件: allVisibleIds.isEmpty()
  动作: 返回空的IPage对象
- 分页处理: 根据请求体中的当前页码和每页大小对课程ID列表进行分页处理
  条件: allCourseIds.isEmpty()
  动作: 返回空的IPage对象

### CourseSectionController_editCourseSection_Rule_Set
- 描述: 规则集用于管理端-修改课程大纲节的API，包括各种校验和处理逻辑。
- 业务域: 课程管理

主要规则:
- 课程大纲内容不能为空: 如果传入的courseSectionVoList为空，则抛出BizBaseException异常。
  条件: CollectionUtils.isEmpty(courseSectionVoList)
  动作: throw new BizBaseException("课程大纲内容不能为空")
- 得到课程章节不允许与其他课程同时配置在同一课程中: 如果taskTypeList包含5且大小大于1，则抛出BizBaseException异常。
  条件: taskTypeList.contains(5) && taskTypeList.size() > 1
  动作: throw new BizBaseException("得到课程章节不允许与其他课程同时配置在同一课程中!")
- 节的时长不能为空: 如果节的totalDuration或fileDuration为空，则抛出BizBaseException异常。
  条件: StringUtils.isBlank(ch.getTotalDuration()) || StringUtils.isBlank(ch.getFileDuration())
  动作: throw new BizBaseException("节[" + ch.getLabel() + "]时长不能为空")
- 文档的需要完成页数不能小于0: 如果文档的documentNeedPages小于0，则抛出BizBaseException异常。
  条件: collectPage.stream().anyMatch(n -> n < 0)
  动作: throw new BizBaseException("文档的需要完成页数不能小于0")
- 海尔内部网址检查: 如果传入的url不是海尔内部网址，则抛出BizBaseException异常。
  条件: !allowListService.checkHaierWeb(vo.getFileUrl(), AllowTypeEnum.EXTERNAL_LINK.getStatus())
  动作: throw new BizBaseException("仅支持填写海尔内部网址")

### RenovationZoneController_delRedis_RuleSet
- 描述: 该规则集定义了RenovationZoneController_delRedis API的业务规则，包括键的验证、缓存的删除和重新生成。
- 业务域: 专区管理

主要规则:
- 键验证规则: 验证传入的键是否在预定义的数据来源集合中
  条件: !ZONE_SOURCES.contains(key)
  动作: 抛出BizBaseException异常
- 缓存删除规则: 删除指定键的Redis缓存
  条件: key != null && !key.isEmpty()
  动作: 调用redisService.del方法删除缓存
- 缓存重新生成规则: 重新生成新的缓存数据并存储到Redis中
  条件: zoneValue == null || zoneValue.isEmpty()
  动作: 调用renovationModuleService.listZones方法获取最新专区数据，并调用redisService.set方法存储到Redis

### UserLearnReportController_planningLearnDetailPage_Rules
- 描述: 该规则集定义了UserLearnReportController_planningLearnDetailPage API的业务规则。
- 业务域: 学习进度报告

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则抛出异常。
  条件: request == null
  动作: 抛出异常
- 分页查询: 根据请求中的当前页(current)和每页大小(size)进行分页查询。
  条件: request.getCurrent() != null && request.getSize() != null
  动作: 执行分页查询
- 数据处理: 如果查询到数据，则对每个记录进行处理，包括设置总任务数、必修任务数、已完成必修任务数以及计算学习进度百分比。
  条件: pager.getRecords() != null && !pager.getRecords().isEmpty()
  动作: 对每个记录进行处理
- 学习进度计算: 计算每个学习计划的完成进度百分比。
  条件: c.getFinishPlanningTaskCount() != null && c.getRequiredPlanningTaskCount() != null
  动作: 计算完成进度百分比

### Validation Rules for CommitteeKanBanLearnRateVO
- 描述: 一组用于验证CommitteeKanBanLearnRateVO请求体的规则。
- 业务域: 课程管理

主要规则:
- Validate CommitteeKanBanLearnRateVO: 验证CommitteeKanBanLearnRateVO对象的有效性，包括code、queryType和employeeType字段。
  条件: committeeKanBanLearnRateVO != null && committeeKanBanLearnRateVO.getCode() != null && committeeKanBanLearnRateVO.getQueryType() != null && committeeKanBanLearnRateVO.getEmployeeType() != null
  动作: 继续处理请求。

### CourseChapterController_getChapteAndSection_Rules
- 描述: 规则集用于CourseChapterController_getChapteAndSection API的业务逻辑验证和处理
- 业务域: 课程管理

主要规则:
- 课程存在性验证: 验证给定的courseId对应的课程是否存在
  条件: courseDao.selectById(courseId) != null
  动作: 继续处理，获取章节和小节详情
- 用户代理信息存在性验证: 验证当前登录用户对应的用户代理信息是否存在
  条件: userProxyMapper.selectOne(...) != null
  动作: 继续处理，获取文稿和播放信息

### CourseMappingController_refreshCourseMapping_Rules
- 描述: 规则集用于定义CourseMappingController_refreshCourseMapping API的业务规则
- 业务域: 课程管理

主要规则:
- 课程ID列表非空验证: 验证传入的课程ID列表是否为空
  条件: CollectionUtils.isEmpty(courseIds)
  动作: 抛出BizBaseException异常，提示'要刷新的课程ID为空'
- 用户权限验证: 验证当前用户是否有权限进行课程映射刷新操作
  条件: userAccount == null || whiteList == null || !whiteList.contains(userAccount)
  动作: 抛出BizBaseException异常，提示'无权限'
- 有效课程查询: 根据传入的课程ID列表查询有效的课程信息
  条件: CollectionUtils.isEmpty(courseList)
  动作: 结束方法执行
- 删除旧的映射关系: 如果课程已经存在映射关系，则先删除旧的映射关系
  条件: mappingCount > 0
  动作: 删除旧的映射关系
- 创建新的映射关系: 根据新的课程分类信息创建并保存新的课程映射
  条件: CollectionUtils.isEmpty(mappingCategories)
  动作: 结束方法执行

### CourseCategoryController_addCourseCategory_Rules
- 描述: 规则集用于管理端新增课程分类API的验证逻辑
- 业务域: 课程管理

主要规则:
- 父级目录存在验证: 验证父级目录是否存在
  条件: courseCategoryVO.getCategoryParentId() != 0 && getById(courseCategoryVO.getCategoryParentId()) == null
  动作: 抛出BizBaseException异常，提示'父级目录不存在'
- 层级匹配验证: 验证层级是否匹配
  条件: courseCategoryVO.getCategoryParentId() != 0 && parentCategory.getCategoryLevel() + 1 != courseCategoryVO.getCategoryLevel() || courseCategoryVO.getCategoryParentId() == 0 && courseCategoryVO.getCategoryLevel() != 1
  动作: 抛出BizBaseException异常，提示'层级不匹配'
- 同一级别重名验证: 验证同一级别是否允许重名
  条件: hasSameLevelName(courseCategoryVO.getCategoryLevel(), courseCategoryVO.getCategoryName(), courseCategoryVO.getCategoryParentId(), courseCategoryVO.getPerCode())
  动作: 抛出BizBaseException异常，提示'同一级别不允许重名，请重新填写类别名称'
- 超管权限验证: 验证是否只有超管可以修改课程目录
  条件: parentCategory != null && CourseConstants.COURSE_CATEGORY_INIT_CODES.contains(parentCategory.getCreateRole()) && !courseRoleProperty.getSuperAdmin().equals(courseCategoryPo.getCreateRole())
  动作: 抛出BizBaseException异常，提示'只有超管可以修改课程目录'

### CourseCategoryController_getCatalogList_Rules
- 描述: 规则集用于管理CourseCategoryController_getCatalogList API的业务逻辑。
- 业务域: 课程分类管理

主要规则:
- PerCodeNotEmptyValidation: 验证领域或者专委会编码是否为空
  条件: StringUtils.isBlank(perCode)
  动作: 抛出异常，提示领域或者专委会编码不能为空
- CourseNumCheck: 如果courseNum参数设置为1，则统计每个分类下的课程总数，并将其显示在分类名称后
  条件: courseNum == BooleanEnum.YES.getValue()
  动作: 调用setCategoryNameCourseCount方法统计课程总数，并更新categoryTreeVo的courseCount和label属性
- DisableSpecialCommitteeCategoryCheck: 如果禁用状态参数设置为1，则禁用某些专委会的非专业进阶课程目录
  条件: disabled == BooleanEnum.YES.getValue() && StringUtils.isNotBlank(perCode) && perCode.startsWith(CourseConstants.CATEGORY_DIMENSION_TYPE)
  动作: 调用disableSpecialCommitteeCategory方法禁用相关课程目录

### SceneCourseController_getSceneTopList_Rules
- 描述: 规则集用于描述SceneCourseController_getSceneTopList API的业务规则。
- 业务域: 课程管理

主要规则:
- 获取顶级场景分类列表: 查询所有未删除、父ID为0且场景类型为NORMAL的场景分类，并按照sortNo字段升序排列。
  条件: isDel == 0 && parentId == 0L && sceneType == SceneTypeEnum.NORMAL
  动作: 返回排序后的场景分类列表

### Validation Rules for Course Statistics Query
- 描述: A set of validation rules to ensure the correctness and completeness of the input parameters for querying course statistics.
- 业务域: 课程管理

主要规则:
- Validate perCode Not Empty: Ensure that the perCode parameter is not empty.
  条件: StringUtils.isBlank(perCode)
  动作: throw new BizBaseException("领域或者专委会编码不能为空")
- Validate perCode Format: Ensure that the perCode parameter has the correct format (e.g., 'dimension-code-per-code').
  条件: arr == null || arr.length != 2
  动作: throw new BizBaseException("编码格式错误")

### RenovationOrgBannerController_deactivated_Rules
- 描述: 停用指定ID的装修组织横幅的相关业务规则
- 业务域: 装修组织横幅管理

主要规则:
- 验证renovationId存在且未被删除: 检查传入的renovationId对应的装修项目是否存在，并且未被标记为已删除（isDel=0）
  条件: renovationId != null && renovationPo != null && renovationPo.getIsDel() == 0
  动作: 更新renovationPo的状态为停用（status=2）并从Redis中删除相关横幅信息

### CourseController Rule Set
- 描述: 规则集用于CourseController中的各种验证和业务逻辑。
- 业务域: 课程管理

主要规则:
- Validate JobCourseQueryVo: 验证请求体中的JobCourseQueryVo对象是否有效，包括分页信息和查询条件的有效性。
  条件: jobCourseQueryVo != null && jobCourseQueryVo.getCurrent() > 0 && jobCourseQueryVo.getSize() > 0
  动作: 继续处理请求

### UserRatingDataController_refreshCourseRatingData_RuleSet
- 描述: 规则集用于管理UserRatingDataController_refreshCourseRatingData API的业务逻辑。
- 业务域: 课程满意度管理

主要规则:
- Validate Request Body: 验证请求体是否为空或无效。
  条件: dto == null || !isValid(dto)
  动作: 抛出异常或返回错误响应
- Build DTO: 构建DTO对象以准备后续的数据处理。
  条件: 请求体有效
  动作: 调用buildDto方法
- Refresh Planning Rating Data: 刷新地图满意度数据。
  条件: 请求体有效
  动作: 调用refreshPlanningRatingData方法
- Refresh Course Rating Data: 刷新课程满意度数据。
  条件: 请求体有效
  动作: 调用refreshCourseRatingData方法
- Refresh Zone Rating Data: 刷新专委会满意度数据。
  条件: 请求体有效
  动作: 调用refreshZoneRatingData方法

### CourseSectionController_editSectionName_Rules
- 描述: 规则集用于管理CourseSectionController_editSectionName API的业务逻辑和数据处理
- 业务域: 课程管理

主要规则:
- 请求体非空验证: 验证传入的CourseSectionVo对象是否为空
  条件: courseSectionVO == null
  动作: 抛出异常或返回错误响应

### CourseStudentStudyDurationController_Rules
- 描述: 与CourseStudentStudyDurationController_getWeekPlan相关的业务规则。
- 业务域: 课程学习管理

主要规则:
- Num参数有效性验证: 验证num参数是否为正整数。
  条件: num > 0
  动作: 继续处理请求。

### CommitteeKanBanController Query Rules
- 描述: 规则集用于管理CommitteeKanBanController_queryUserStudyDurationDetailRank API的业务逻辑
- 业务域: 学习进度管理

主要规则:
- Validate Sort Fields: 检查请求体中的排序字段是否有效
  条件: !sqlSortCheck(request)
  动作: 返回空的分页结果
- Validate Committee Code: 检查专委会代码是否为空
  条件: StringUtils.isBlank(request.getCode())
  动作: 抛出BizBaseException异常

### CourseStudentCustomListController_updateUserExtetnalMode_RuleSet
- 描述: 规则集用于验证和处理CourseStudentCustomListController_updateUserExtetnalMode API的请求和响应。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体是否包含必要的字段accountList和businessId。
  条件: businessResource != null && businessResource.getAccountList() != null && businessResource.getBusinessId() != null
  动作: 继续处理请求

### CourseController_Rule_Set
- 描述: 规则集用于定义CourseController_queryIsLikeAndCollectCount API的业务规则。
- 业务域: 课程管理

主要规则:
- Validate_Course_ID_Exists: 验证传入的课程ID是否存在于数据库中。
  条件: 课程ID在数据库中存在
  动作: 调用courseService.queryIsLikeAndCollectCount方法获取课程的点赞和收藏数量。

### Validation Rules for ExportController
- 描述: This rule set contains validation rules for the ExportController_export API.
- 业务域: 课程管理

主要规则:
- Validate CoursesVo Object: Ensure that the CoursesVo object provided in the request body is valid according to the EditCoursesValid constraints.
  条件: @Validated(CoursesVo.EditCoursesValid.class) CoursesVo coursesVO
  动作: Proceed with the export process if the CoursesVo object is valid.

### CommitteeKanBanController_learningRateSave_Rules
- 描述: 规则集用于描述CommitteeKanBanController_learningRateSave API的业务规则。
- 业务域: 课程管理

主要规则:
- ParamValidationRule: 验证param参数是否为空，如果不为空则进一步验证startDate和endDate是否有效。
  条件: param == null
  动作: 获取昨天的日期并刷新学习率数据
- DateRangeValidationRule: 验证param中的startDate和endDate是否有效。
  条件: StringUtils.isNotBlank(startDate) && StringUtils.isNotBlank(endDate)
  动作: 获取指定时间段内的所有日期并刷新学习率数据

### CourseStudentCustomListController_Rules
- 描述: 规则集用于验证CourseStudentCustomListController_getUserListByStudentId API的输入参数和业务逻辑。
- 业务域: 课程管理

主要规则:
- Validate CourseStudentID Existence: 检查请求体中的courseStudentId是否存在对应的学员管理信息。
  条件: courseStudentDao.selectById(courseStudentCustomListDto.getCourseStudentId()) == null
  动作: throw new BizBaseException("根据学员id未查询到学员管理信息")
- Validate CourseID Existence: 检查通过courseStudentId查询到的courseStudentPo中的courseId是否存在对应的课程信息。
  条件: courseStudentPo.getCourseId() == null || courseDao.selectById(courseStudentPo.getCourseId()) == null
  动作: throw new BizBaseException("根据课程id未查询到课程信息")

### CommitmentLetterController_agree_RuleSet
- 描述: 规则集用于管理CommitmentLetterController_agree API的业务逻辑。
- 业务域: 课程管理

主要规则:
- 用户登录验证: 验证用户是否已登录，通过检查请求头中的user-account字段。
  条件: StringUtils.isBlank(userNo)
  动作: 抛出BizBaseException异常，提示用户未登录
- 用户签署状态验证: 验证用户是否已经签署过承诺书，通过查询数据库中的CommitmentLetterPo表。
  条件: count > 0
  动作: 直接返回，不进行任何操作

### CommitteeKanBanController_RuleSet
- 描述: 规则集用于描述CommitteeKanBanController_queryCumulativeLearningRateRanking API的业务规则
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体是否符合CommitteeKanBanLearnRateVO的格式要求
  条件: @RequestBody @Validated CommitteeKanBanLearnRateVO committeeKanBanLearnRateVO
  动作: 继续处理请求
- Parse Committee Code: 解析委员会代码，获取最高权限选项
  条件: String codeSplit = committeeKanBanLearnRateVO.getCode(); String[] split = codeSplit.split(",");
  动作: 生成codeList
- Query Cumulative Learning Rate Ranking: 根据codeList、employeeType和queryType查询累计学习率排行榜
  条件: List<CumulativeLearningRateRankingVO> list = baseMapper.queryCumulativeLearningRateRanking(codeList, employeeType, queryType);
  动作: 返回list

### StudentCollectionController_Compare_Rules
- 描述: 该规则集定义了StudentCollectionController_compare API的业务规则，包括请求体验证、用户信息验证和入参格式验证。
- 业务域: 在线课程管理

主要规则:
- 请求体非空验证: 验证请求体OnlineClassVo是否为空
  条件: onlineClassVo == null
  动作: 抛出异常
- 用户信息验证: 验证当前登录用户信息是否获取成功
  条件: tltrewEmployee == null
  动作: 抛出BizBaseException异常
- 入参格式验证: 验证入参OnlineClassVo的categoryId是否为空
  条件: onlineClassVo.getCategoryId() == null
  动作: 抛出BizBaseException异常

### RenovationController_Rules
- 描述: 该规则集定义了RenovationController_getZoneHomeRenovationId API的业务规则，包括如何根据renovationId获取不同类型的装修数据，并将其转换为对应的VO对象。
- 业务域: 装修管理

主要规则:
- 验证renovationId是否存在: 检查传入的renovationId是否为空，如果不为空，则继续查询相关数据；否则，返回默认的RenovationWayOneVO对象。
  条件: renovationId != null
  动作: 继续查询相关数据
- 根据renovationId获取装修详情: 调用renovationService.getZoneHome方法，根据renovationId获取装修详情，并将其转换为RenovationWayOneVO对象。
  条件: renovationId != null
  动作: 调用renovationService.getZoneHome方法获取装修详情
- 根据renovationId获取模块列表: 调用renovationModuleService.list方法，根据renovationId获取模块列表，并将其转换为RenovationModuleVO对象。
  条件: renovationId != null
  动作: 调用renovationModuleService.list方法获取模块列表
- 根据renovationId获取横幅列表: 调用renovationBannerService.list方法，根据renovationId获取横幅列表，并将其转换为RenovationBannerVO对象。
  条件: renovationId != null
  动作: 调用renovationBannerService.list方法获取横幅列表
- 根据renovationId获取话题列表: 调用renovationTopicService.list方法，根据renovationId获取话题列表，并将其转换为RenovationTopicVO对象。
  条件: renovationId != null
  动作: 调用renovationTopicService.list方法获取话题列表
- 根据renovationId获取学习动态列表: 调用renovationLearningDynamicsDao.getDynamicZoneHome方法，根据renovationId获取学习动态列表，并将其转换为RenovationDynamicVo对象。
  条件: renovationId != null
  动作: 调用renovationLearningDynamicsDao.getDynamicZoneHome方法获取学习动态列表
- 根据模块类型处理横幅数据: 如果模块类型为BANNER且bannerList不为空，则根据moduleId过滤横幅数据，并将其设置到zoneModuleVo中；否则，设置空的横幅列表。
  条件: renovationModule.getModuleType() == RenovationMediaTypeEnum.BANNER.getCode() && CollectionUtils.isNotEmpty(bannerList)
  动作: 根据moduleId过滤横幅数据，并将其设置到zoneModuleVo中
- 根据模块类型处理话题数据: 如果模块类型为TOPIC且topicList不为空，则根据moduleId过滤话题数据，并将其设置到zoneModuleVo中；否则，设置空的话题列表。
  条件: renovationModule.getModuleType() == RenovationMediaTypeEnum.TOPIC.getCode() && CollectionUtils.isNotEmpty(topicList)
  动作: 根据moduleId过滤话题数据，并将其设置到zoneModuleVo中
- 根据模块类型处理学习动态数据: 如果模块类型为DYNAMIC且dynamicList不为空，则根据moduleId过滤学习动态数据，并将其设置到zoneModuleVo中；否则，设置空的学习动态列表。
  条件: renovationModule.getModuleType() == RenovationMediaTypeEnum.DYNAMIC.getCode() && CollectionUtils.isNotEmpty(dynamicList)
  动作: 根据moduleId过滤学习动态数据，并将其设置到zoneModuleVo中

### VersionAnnouncementController_queryAnnoFlagDetail_RuleSet
- 描述: 规则集用于处理查询学员是否已查看最新的公告，并返回公告详情的逻辑
- 业务域: 课程公告管理

主要规则:
- 验证用户是否已登录: 通过Access-Token获取用户信息，如果用户信息为空或用户未登录，则抛出异常要求重新登录
  条件: currentEmpSn == null || currentEmpSn.getUserInfo() == null
  动作: throw new BizBaseException("请重新登录!")
- 验证公告是否存在: 查询最新的公告版本，如果公告不存在，则返回showFlag为false的空公告详情
  条件: versionAnnoPo == null
  动作: return reVo
- 验证用户是否已查看公告: 检查用户是否已经看过最新的公告版本，如果未看过，则设置showFlag为true，并返回公告详情；否则，showFlag为false
  条件: count == 0
  动作: reVo.setShowFlag(true); reVo.setDetail(ConvertUtils.sourceToTarget(versionAnnoPo, VersionAnnoDetailVo.class)); return reVo;

### Course Comment Reply Validation Rules
- 描述: 规则集用于验证CourseSectionLearnController_queryCourseReply API的请求体和处理逻辑。
- 业务域: 课程学习与评价

主要规则:
- Validate Request Body: 验证传入的CourseCommentReplyRequest对象是否符合预期格式和约束。
  条件: request != null && request.getCourseId() != null && request.getPageNumber() > 0 && request.getPageSize() > 0
  动作: 继续处理请求，调用sectionLearnService.queryCommentReplyList(request)

### SceneCategorySaveRules
- 描述: 保存或更新场景分类信息时的业务规则
- 业务域: 课程管理

主要规则:
- 验证父节点: 检查父节点是否存在且是否允许创建二级场景
  条件: po.getParentId() == null || (po.getParentId() != 0L && parent.getIsLeaf() && themeCount > 0)
  动作: 抛出 BizBaseException 异常
- 验证子场景: 检查场景分类是否有子场景，不允许将其设置为叶子节点
  条件: po.getIsLeaf() && 子场景数量 > 0
  动作: 抛出 BizBaseException 异常

### CourseSearchHistoryController_Rules
- 描述: 规则集用于描述CourseSearchHistoryController_queryHistorySearch API的行为和业务规则。
- 业务域: 课程搜索历史

主要规则:
- Check_History_Records_Availability: 检查是否有历史搜索记录。
  条件: this.historyService.queryHistorySearch().isEmpty() == false
  动作: 返回历史搜索记录列表。

### RenovationController_publishDecoration_RuleSet
- 描述: 规则集用于管理端发布装修方式一的业务逻辑
- 业务域: 装修管理

主要规则:
- 请求体非空验证: 验证请求体RenovationWayOneVO是否为空
  条件: renovationWayOneVO == null
  动作: 抛出异常
- 设置检查标志: 设置renovationWayOneVO的isCheck标志为1
  条件: always
  动作: renovationWayOneVO.setIsCheck(1)
- 停用旧装修方式: 停用之前相同装修方式
  条件: CollectionUtils.isNotEmpty(wayOneList)
  动作: renovationWayOneService.updateStopStatusByRenovationId(collect)
- 更新新装修方式状态: 更新当前装修方式的状态
  条件: always
  动作: baseMapper.updateStatus(Long.valueOf(renovationIdstr))
- 发布新装修方式: 发布当前装修方式
  条件: always
  动作: renovationWayOneService.pubByRenovationId(Long.valueOf(renovationIdstr))
- 清除缓存: 清除相关的缓存
  条件: always
  动作: renovationModuleService.deleteZonesCache()

### CourseStudentCustomListController_Rules
- 描述: 该规则集定义了向课程自定义学生列表中添加外部用户的业务规则。
- 业务域: 课程管理

主要规则:
- 验证业务资源是否存在: 检查传入的业务资源ID对应的课程信息是否存在。如果不存在，则返回失败。
  条件: courseStudentPo == null
  动作: return ResultVo.fail("添加人员时,未获取到资源信息")
- 验证用户列表是否为空: 检查传入的用户列表是否为空。如果为空，则无需进一步处理。
  条件: CollectionUtils.isEmpty(addUserList)
  动作: 无需进一步处理
- 区分已导入用户和新用户: 遍历用户列表，区分已导入用户和新用户。对于已导入用户，更新其外部模式；对于新用户，批量添加到课程自定义学生列表中。
  条件: innerImportUserList.contains(commonRuleUser.getUserCode())
  动作: updateUsers.add(commonRuleUser.getUserCode())
- 更新已导入用户的外部模式: 如果存在已导入用户，则更新其外部模式。
  条件: CollectionUtils.isNotEmpty(updateUsers)
  动作: this.updateUserExtetnalMode(courseStudentPo.getId(), updateUsers)
- 批量添加新用户: 如果存在新用户，则批量添加到课程自定义学生列表中。
  条件: CollectionUtils.isNotEmpty(addUsers)
  动作: baseMapper.batchAddUserByTask(addUsers)

### PublicCourseRegisterController_Rules
- 描述: 规则集用于描述PublicCourseRegisterController_goSignUpPublicCourse API的业务规则。
- 业务域: 课程报名

主要规则:
- Validate Current User Info: 验证当前登录学员信息是否为空，如果为空则抛出BizBaseException异常。
  条件: ObjectUtils.isEmpty(userInfo)
  动作: throw new BizBaseException("获取当前登陆人信息失败")
- Set Course Registration Details: 设置PublicCourseRegisterPo对象的相关属性，包括courseId、isRegistered、createCode、createName和createDate。
  条件: courseId != null
  动作: publicCourseRegisterPo.setCourseId(courseId); publicCourseRegisterPo.setIsRegistered(SignUpPublicCourseEnum.YES_SIGN_UP.getType()); publicCourseRegisterPo.setCreateCode(userInfo.getEmpsn()); publicCourseRegisterPo.setCreateName(userInfo.getEmpname()); publicCourseRegisterPo.setCreateDate(LocalDateTime.now());
- Save Course Registration: 保存PublicCourseRegisterPo对象到数据库。
  条件: publicCourseRegisterPo != null
  动作: super.save(publicCourseRegisterPo)

### SceneCourseController_getSceneCategoryTree_RuleSet
- 描述: 该规则集定义了SceneCourseController_getSceneCategoryTree API的业务规则，包括如何根据clientType参数构建场景课程分类树，以及如何处理专业专区和胜任发展场景。
- 业务域: 课程分类管理

主要规则:
- 验证clientType参数: 检查clientType参数是否有效，如果不为空则根据其值进行不同的查询条件设置。
  条件: clientType != null
  动作: 设置查询条件，如CLIENT_TYPE_APP == clientType时，SceneCategoryPo::getShowType == 1
- 构建场景分类树: 从数据库中查询符合条件的场景分类，并按照sortNo字段排序后构建分类树。
  条件: true
  动作: 调用sceneCategoryService.getSceneCategoryTree(clientType)方法构建分类树
- 处理专业专区: 如果场景类型为专业专区，则从Redis中获取或查询数据库获取专区信息，并将其作为子节点添加到分类树中。
  条件: SceneTypeEnum.PROFESSIONAL.equals(vo.getSceneType())
  动作: 调用renovationModuleService.listZones('pc')方法获取专区信息，并添加到vo.getChildren()中
- 处理胜任发展场景: 如果场景类型为胜任发展场景，则通过Feign调用获取相关信息，并将其作为子节点添加到分类树中。如果获取失败，则移除该节点。
  条件: SceneTypeEnum.COMPETENCY_SCENE.equals(vo.getSceneType())
  动作: 调用categorySecFeign.getAllTopList(1)方法获取胜任发展场景信息，并添加到vo.getChildren()中
- 处理非普通场景: 如果场景类型不是普通场景，则将courseCount字段设置为null。
  条件: !SceneTypeEnum.NORMAL.equals(vo.getSceneType())
  动作: vo.setCourseCount(null)

### courseScoreExport_RuleSet
- 描述: 该规则集定义了courseScoreExport API的业务规则，包括请求体的处理、数据获取和服务调用。
- 业务域: 课程满意度管理

主要规则:
- 请求体验证: 验证传入的OrgBoardCourseRequest对象是否符合预期格式。
  条件: request != null
  动作: 继续处理请求
- 设置分页参数: 将OrgBoardCourseRequest对象的current属性设置为0，size属性设置为150000。
  条件: request != null
  动作: request.setCurrent(0); request.setSize(150000);
- 获取课程满意度评分数据: 调用courseScoreSecondPage服务获取课程满意度评分数据。
  条件: request != null
  动作: IPage<OrgBoardCourseScoreResponse> iPage = service.courseScoreSecondPage(request);
- 导出Excel文件: 调用exportExcel工具方法将课程满意度评分数据导出为Excel文件。
  条件: iPage != null && iPage.getRecords() != null
  动作: EasyExcelUtils.exportExcel(response, "课程满意度", "课程满意度", iPage.getRecords(), OrgBoardCourseScoreResponse.class);

### OrganizationKanBanController_learnDurationTrend_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_learnDurationTrend API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则返回错误。
  条件: request == null
  动作: 抛出异常或返回错误响应

### CourseStudentCustomListController_removeUserExternalMode_RuleSet
- 描述: 规则集用于处理从课程学生自定义列表中移除外部模式用户的逻辑
- 业务域: 课程管理

主要规则:
- 验证业务ID是否存在对应的课程学生信息: 检查传入的业务ID是否对应有效的课程学生信息
  条件: courseStudentDao.selectByCourse(commonBusinessInfoVo.getBusinessId(), 0) == null
  动作: return ResultVo.fail("添加人员时,未获取到资源信息")
- 根据导入类型处理用户: 根据导入类型将用户分为需要删除和更新的两组
  条件: CollectionUtil.isNotEmpty(userByImportType)
  动作: 遍历userByImportType，根据externalImportMode将用户分为removeList和updateList
- 删除仅外部导入的用户: 分批删除仅外部导入的用户
  条件: CollectionUtil.isNotEmpty(removeList)
  动作: Lists.partition(removeList, 100).forEach(list -> baseMapper.removeOnlyExternalUser(commonBusinessInfoVo.getBusinessId(), list))
- 恢复之前被标记为外部导入但现在需要保留的用户: 恢复那些之前被标记为外部导入但现在需要保留的用户
  条件: CollectionUtil.isNotEmpty(rulerExistUser)
  动作: baseMapper.deleteUsersByAccountList(courseStudentPo.getId(), rulerExistUser, 0); baseMapper.restoreExternalUser(rulerExistUser, courseStudentPo.getId(), commonBusinessInfoVo.getImportType(), 1, Arrays.asList(1))
- 删除既内部又外部导入的用户: 分批删除既内部又外部导入的用户
  条件: CollectionUtil.isNotEmpty(updateList)
  动作: Lists.partition(updateList, 100).forEach(list -> baseMapper.removeBothExternalUser(commonBusinessInfoVo.getBusinessId(), list))

### CourseSectionDedaoController_queryArticleBySectionId_Rules
- 描述: 规则集用于验证和处理CourseSectionDedaoController_queryArticleBySectionId API的请求和响应
- 业务域: 课程内容管理

主要规则:
- Validate Section ID: 检查sectionId是否为空或无效
  条件: sectionId == null
  动作: 返回空字符串
- Validate User Account: 检查当前登录用户信息是否完整
  条件: tUserProxy == null
  动作: 抛出BizBaseException异常

### CourseStudentCustomListController_updateUser_RuleSet
- 描述: 规则集用于管理CourseStudentCustomListController_updateUser API的业务逻辑
- 业务域: 课程管理

主要规则:
- Check CourseStudentId Not Empty: 检查courseStudentCustomListDto中的courseStudentId字段是否为空
  条件: ObjectUtils.isEmpty(courseStudentCustomListDto.getCourseStudentId())
  动作: 抛出BizBaseException异常，提示'请传入学员管理id'
- Check CourseStudentPo Not Null: 检查通过courseStudentId查询到的courseStudentPo是否为空
  条件: courseStudentPo == null
  动作: 抛出BizBaseException异常，提示'请先保存课程管理信息'
- Process Category Codes: 如果importType不为0，对categoryTopCode和categoryTopName字段进行字符串分割处理
  条件: courseStudentCustomListDto.getImportType() != 0
  动作: 分割categoryTopCode和categoryTopName字段，并设置到courseStudentCustomListDto中
- Check Id Not Empty: 检查courseStudentCustomListDto中的id字段是否为空
  条件: ObjectUtils.isEmpty(courseStudentCustomListDto.getId())
  动作: 将courseStudentCustomListDto转换为CourseStudentCustomListPo，并插入数据库
- Check Import Type: 检查importType字段是否为0或1
  条件: courseStudentCustomListDto.getImportType() == 0 || courseStudentCustomListDto.getImportType() == 1
  动作: 删除指定account的用户

### CourseQrcodeSignController_Rules
- 描述: 规则集用于CourseQrcodeSignController_generateQRCodeByCourseId API的业务逻辑验证
- 业务域: 课程签到

主要规则:
- 验证课程ID有效性: 检查传入的courseId是否为null或负数，如果是则抛出异常
  条件: courseId == null || courseId < 0
  动作: 抛出异常

### RenovationOrgBannerController_Rules
- 描述: 该规则集定义了RenovationOrgBannerController_saveOrUpdate API的业务规则，包括参数验证、实体处理和缓存操作。
- 业务域: 组织装修管理

主要规则:
- 参数验证: 验证OrgBannerRequest对象及其domainCode字段是否为空
  条件: Objects.isNull(request) || Objects.isNull(request.getDomainCode())
  动作: throw new BizBaseException("参数异常!")
- RenovationPo存在性验证: 验证renovationId对应的RenovationPo是否存在
  条件: null != renovaId && null == renovationPo
  动作: throw new BizBaseException("请传入正确的装修ID")
- Banner列表为空处理: 验证bannerListMobile和bannerListPc是否都为空，若为空则删除相关RenovationBannerPo记录
  条件: CollectionUtils.isEmpty(request.getBannerListMobile()) && CollectionUtils.isEmpty(request.getBannerListPc())
  动作: 删除相关RenovationBannerPo记录并清空Redis缓存

### Validation Rules for StudentCollectionController
- 描述: This rule set contains validation rules for the StudentCollectionController API.
- 业务域: 课程管理

主要规则:
- Validate OnlineClassVo Object: Ensures that the OnlineClassVo object provided in the request body is valid according to the EditOnlineClassValid constraints.
  条件: onlineClassVo != null && onlineClassVo passes EditOnlineClassValid constraints
  动作: Proceed with the API execution
- Check User Information: Ensures that the current logged-in user information is available.
  条件: tltrewEmployee != null
  动作: Set domainCode and account from tltrewEmployee and proceed with the API execution

### TrainPlanningStudyController_Rules
- 描述: 规则集用于定义TrainPlanningStudyController_getMyPlanningData API的行为和验证逻辑。
- 业务域: 课程学习

主要规则:
- Validate MyPlanningResultVo Response: 验证studyService.getMyPlanningData()返回的学习计划数据是否有效。
  条件: studyService.getMyPlanningData() != null
  动作: 封装学习计划数据到ResultVo<MyPlanningResultVo>并返回

### CourseCategoryController_deleteCategories_RuleSet
- 描述: 规则集用于管理端批量删除课程分类的逻辑验证
- 业务域: 课程管理

主要规则:
- CheckForExistingCoursesInCategories: 检查待删除的课程分类下是否存在未删除的课程
  条件: batchCategory.getIds().stream().anyMatch(id -> courseService.getAllCategoryCourseNum(id) > 0)
  动作: throw new BizBaseException(unableDelList + "课程目录存在课程无法删除")

### OrganizationKanBanController_dimensionTree_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_dimensionTree API的业务规则。
- 业务域: 课程管理

主要规则:
- 获取数据权限树: 调用服务层的dimensionTree方法以获取组织看板的数据权限树。
  条件: 请求方法为POST且路径为/org/board/dimensionTree
  动作: 调用service.dimensionTree()方法获取数据权限树，并封装在ResultVo<List<OrgBoardDimensionResponse>>对象中返回。

### CourseController_getImportDesignatedInfo_Rules
- 描述: 规则集用于验证和处理CourseController_getImportDesignatedInfo API的请求和响应
- 业务域: 课程管理

主要规则:
- 验证课程学员ID: 检查传入的课程学员ID是否存在于数据库中
  条件: ObjectUtils.isEmpty(courseStudentPo)
  动作: 抛出BizBaseException异常，提示'请传入正确的课程学员ID'
- 验证URL: 检查传入的URL是否为空
  条件: StringUtils.isBlank(url)
  动作: 抛出BizBaseException异常，提示'请传入url'

### EceibsStudyRecord Rules
- 描述: 规则集用于验证和处理EceibsStudyRecord相关的业务逻辑。
- 业务域: 课程学习记录管理

主要规则:
- EceibsStudyRecordVo Validation Rule: 验证请求体是否符合EceibsStudyRecordVo格式。
  条件: recordVo != null && recordVo.isValid()
  动作: 继续处理请求

### VersionAnnouncementController_queryHistoryAnnoStu_RuleSet
- 描述: 规则集用于定义VersionAnnouncementController_queryHistoryAnnoStu API的业务规则。
- 业务域: 课程公告管理

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则抛出异常。
  条件: request == null
  动作: 抛出异常
- 查询历史公告: 根据请求体中的publishType查询未删除的历史公告。
  条件: request.getPublishType() != null
  动作: 查询符合条件的历史公告记录
- 转换公告详情: 将查询到的历史公告记录转换为VersionAnnoDetailVo列表。
  条件: versionAnnouncementPos != null && !versionAnnouncementPos.isEmpty()
  动作: 转换公告详情
- 设置发布类型字符串: 根据公告的publishType设置publishTypeStr字段。
  条件: v.getPublishType() != null
  动作: 设置publishTypeStr字段

### RenovationController_addRenovationOther_RuleSet
- 描述: 规则集用于管理RenovationController_addRenovationOther API的业务规则
- 业务域: 装修管理

主要规则:
- Check Haier Internal Web Links: 校验移动端和PC端的网页链接是否为海尔内部网站
  条件: Objects.equals(renovationWayOtherVO.getMoType(), 1) || Objects.equals(renovationWayOtherVO.getPcType(), 1)
  动作: allowListService.checkHaierWeb(renovationWayOtherVO.getMobileLink(), AllowTypeEnum.METHOD.getStatus()) && allowListService.checkHaierWeb(renovationWayOtherVO.getPcLink(), AllowTypeEnum.METHOD.getStatus())
- Check Required Fields: 校验必填字段
  条件: renovationWayOtherVO.getAddType() != null && renovationWayOtherVO.getAddType() == 1
  动作: checkRequired(renovationIdstr, renovationOld)
- Check At Least One Link or Picture: 校验至少填写一端主页链接或者图片
  条件: StringUtils.isBlank(renovationWayOtherVO.getMobileLink()) && StringUtils.isBlank(renovationWayOtherVO.getPcLink()) && StringUtils.isBlank(renovationWayOtherVO.getMobilePictureLink()) && StringUtils.isBlank(renovationWayOtherVO.getPcPictureLink())
  动作: throw new BizBaseException("需至少填写一端主页链接或者图片再发布")

### courseCommentDetailExport_RuleSet
- 描述: 该规则集定义了courseCommentDetailExport API的业务规则。
- 业务域: 课程满意度管理

主要规则:
- 请求体验证规则: 验证请求体是否为有效的OrgBoardThirdRequest对象。
  条件: request != null && request instanceof OrgBoardThirdRequest
  动作: 继续处理请求
- 设置默认分页参数规则: 设置请求体的分页参数current为0，size为150000。
  条件: true
  动作: request.setCurrent(0); request.setSize(150000);
- 获取课程满意度详情规则: 调用courseRatingDataService的courseCommentDetail方法获取课程满意度详情数据。
  条件: true
  动作: IPage<OrgBoardCourseCommentDetailResponse> iPage = courseRatingDataService.courseCommentDetail(request);
- 导出Excel文件规则: 调用EasyExcelUtils的exportExcel方法生成并导出Excel文件。
  条件: iPage != null && iPage.getRecords() != null
  动作: EasyExcelUtils.exportExcel(response, "课程满意度详情", "课程满意度详情", iPage.getRecords(), OrgBoardCourseCommentDetailResponse.class);

### RenovationController_getDynamicByModule_RuleSet
- 描述: 该规则集定义了RenovationController_getDynamicByModule API的业务规则。
- 业务域: 课程管理

主要规则:
- 请求体非空验证: 验证请求体RenovationPageQueryRequest是否为空
  条件: request == null
  动作: 抛出异常或返回错误信息

### TrainPlanningStudyController_RuleSet
- 描述: 与TrainPlanningStudyController相关的业务规则集合。
- 业务域: 课程学习管理

主要规则:
- Validate Planning ID: 验证传入的planningId是否为有效的Long类型。
  条件: planningId != null && planningId > 0
  动作: 继续处理请求，调用studyService.isPlanningStudy方法。

### WarningEducationController_queryWarningFilmm_RuleSet
- 描述: 规则集用于描述WarningEducationController_queryWarningFilmm API的业务规则。
- 业务域: 警示教育课程查询

主要规则:
- Validate Query Type: 验证请求体中的queryType字段是否有效
  条件: articleCourseVo.getQueryType() != null && WarningQueryTypeEnum.queryCodeOf(articleCourseVo.getQueryType()).isPresent()
  动作: 继续执行查询逻辑
- Check User Permissions: 检查当前登录用户的权限
  条件: employee != null
  动作: 继续执行查询逻辑
- Query Topics: 当queryType对应的waningType为'topic'时，查询topic表
  条件: StringUtils.equals('topic', warningEnum.getWaningType())
  动作: 查询topic表并获取课程ID
- Query Courses By Category: 根据categoryList查询课程ID
  条件: CollectionUtils.isNotEmpty(categoryList)
  动作: 查询课程ID并添加到courseIds列表
- Query Additional Content: 当module.getAddConten()等于1时，查询额外内容
  条件: Objects.equals(module.getAddConten(), 1)
  动作: 查询额外内容并添加到courseIds列表
- Order Courses By ID: 当module.getAddConten()等于2时，按照ID顺序排列课程
  条件: Objects.equals(module.getAddConten(), 2)
  动作: 按照ID顺序排列课程
- Query Dynamics: 当queryType对应的waningType为'dynamic'时，查询学习动态表
  条件: StringUtils.equals('dynamic', warningEnum.getWaningType())
  动作: 查询学习动态表并获取动态信息
- Mark Viewed Dynamics: 当queryType为特定类别时，标记已查看的学习动态
  条件: StringUtils.equalsAny(articleCourseVo.getQueryType(), WarningQueryTypeEnum.HOMEPAGE_DYNAMICS.getQueryCode(), WarningQueryTypeEnum.HOMEPAGE_NOTICE.getQueryCode(), WarningQueryTypeEnum.HOMEPAGE_RULES.getQueryCode())
  动作: 标记已查看的学习动态

### CourseController_queryCourses_RuleSet
- 描述: 规则集用于管理CourseController_queryCourses API的业务逻辑
- 业务域: 课程管理

主要规则:
- 权限码有效性验证: 验证权限码的有效性，权限码不能为空且必须包含两个部分，由'-'分隔
  条件: StringUtils.isEmpty(coursesVo.getPerCode()) || coursesVo.getPerCode().split("-").length != 2
  动作: 抛出BizBaseException异常
- 超管权限检查: 检查当前用户是否是超管，如果是超管且无操作权限，则返回空列表
  条件: isSuperAdmin && CharSequenceUtil.equals(coursesVo.getRight(), "0")
  动作: 返回emptyPage()
- 构建查询条件: 根据用户权限和请求参数构建查询条件
  条件: Objects.isNull(courseQueryDto)
  动作: 返回emptyPage()

### OrganizationKanBanController_planningCommentDetailExport_RuleSet
- 描述: 该规则集定义了OrganizationKanBanController_planningCommentDetailExport API的业务规则。
- 业务域: 课程满意度管理

主要规则:
- 请求体验证规则: 验证请求体是否符合OrgBoardThirdRequest的结构要求。
  条件: request != null && request.isValid()
  动作: 继续处理请求
- 设置默认分页参数规则: 设置请求体的current为0，size为150000。
  条件: true
  动作: request.setCurrent(0); request.setSize(150000);
- 获取数据规则: 调用orgplanningRatingDataService的planningCommentDetail方法获取数据。
  条件: true
  动作: IPage<OrgBoardPlanningCommentDetailResponse> iPage = orgplanningRatingDataService.planningCommentDetail(request);
- 导出Excel文件规则: 调用EasyExcelUtils的exportExcel方法将数据导出为Excel文件。
  条件: iPage != null && !iPage.getRecords().isEmpty()
  动作: EasyExcelUtils.exportExcel(response, "地图满意度详情", "地图满意度详情", iPage.getRecords(), OrgBoardPlanningCommentDetailResponse.class);

### StudentCollectionController_handleCollection_Rules
- 描述: 课程收藏管理相关的业务规则集合
- 业务域: 课程收藏管理

主要规则:
- 验证课程是否已被当前用户收藏: 在新增收藏时，检查数据库中是否存在相同的课程ID和用户账号的记录，以避免重复收藏。
  条件: status == 1 && baseMapper.selectByCourseIdAndAccount(id, userBaseInfo.getEmpsn()) != null
  动作: 抛出BizBaseException异常，提示'该课程已收藏，不要重复收藏'
- 取消课程收藏: 在取消收藏时，删除数据库中对应的课程ID和用户账号的记录，并减少课程的收藏数量。
  条件: status == 0
  动作: 删除收藏记录，并减少课程的收藏数量

### CourseController_getUserDomain_Rules
- 描述: 规则集用于管理端-获取用户领域的逻辑处理
- 业务域: 课程管理

主要规则:
- 验证超级管理员或组管理员权限: 检查用户是否具有超级管理员或组管理员权限
  条件: allPermissions.getRoleCodes().contains(courseRoleProperty.getSuperAdmin()) || allPermissions.getRoleCodes().contains(courseRoleProperty.getGroupAdmin())
  动作: 返回ResultVo.success(new UserDomainVo(CourseConstants.ALL, "全员可观看"))
- 收集用户权限信息: 收集用户的业务单元、产品团队、项目团队和分类顶级权限信息
  条件: CollectionUtils.isNotEmpty(allPermissions.getBuCodes()) || CollectionUtils.isNotEmpty(allPermissions.getPtCodes()) || CollectionUtils.isNotEmpty(allPermissions.getXwCodes()) || CollectionUtils.isNotEmpty(allPermissions.getCategoryTopCodes())
  动作: 遍历权限信息并添加到codes和names列表中

### MsgRecordController_getMsg_Rules
- 描述: 该规则集定义了MsgRecordController_getMsg API的业务规则，包括消息记录ID的验证。
- 业务域: 消息管理

主要规则:
- 消息记录ID验证: 验证消息记录ID是否存在并有效。
  条件: id != null && recordService.existsById(id)
  动作: 继续处理请求，调用recordService.getMsg(id)获取消息记录。

### CommitteeCommentController_RuleSet
- 描述: 规则集用于描述CommitteeCommentController_getCommitteeComments API的业务规则
- 业务域: 课程评论管理

主要规则:
- Validate Committee Code: 验证请求体中的专委会编码是否为空或格式正确
  条件: StringUtils.isEmpty(request.getPerCode())
  动作: throw new BizBaseException("请传入正确的专委会编码")
- Check User Permission: 检查当前登录用户是否有权查看指定专委会的评论
  条件: checkCanComment(userInfoRoleVo, perCodeSplit[1])
  动作: 允许查询评论

### CourseStudentStudyDurationController_Rules
- 描述: 规则集用于CourseStudentStudyDurationController_getPersonalStudy API的业务逻辑验证。
- 业务域: 课程学习统计

主要规则:
- Valid GET Request: 验证请求是否为有效的GET请求。
  条件: HTTP Method is GET
  动作: Proceed with request processing

### RenovationReportController_Rules
- 描述: 规则集用于描述RenovationReportController_exportGetReportCourseStudentList API的业务规则。
- 业务域: 课程管理

主要规则:
- Validate Request Body: 验证请求体RenvationCourseStudentVo是否为空。
  条件: renvationCourseVo == null
  动作: 抛出异常或返回错误响应。
- Set Pagination Parameters: 设置分页参数current为1，size为50000。
  条件: 请求到达
  动作: renvationCourseVo.setCurrent(1); renvationCourseVo.setSize(50000);
- Fetch Report Course Student List: 根据请求体中的参数获取报告课程学员列表。
  条件: 请求体有效
  动作: IPage<ReportStudentDetailsVo> reportCourseStudentList = getReportCourseStudentList(renvationCourseVo);
- Check If List Is Empty: 检查获取到的学员列表是否为空。
  条件: CollectionUtils.isEmpty(list)
  动作: 直接返回，不进行后续操作。
- Prepare Excel File: 准备Excel文件，设置响应头，获取模板文件。
  条件: 学员列表不为空
  动作: 设置响应头，获取模板文件。
- Fill Excel With Data: 使用EasyExcel将学员数据填充到Excel模板中。
  条件: 模板文件获取成功
  动作: writer.fill(list,fillConfig,sheet); writer.finish(); out.flush();

### CourseStudentController_getCourseStudentId_RuleSet
- 描述: 规则集用于管理CourseStudentController_getCourseStudentId API的业务逻辑。
- 业务域: 课程管理

主要规则:
- 课程映射ID验证规则: 如果课程存在映射ID，则使用映射ID。
  条件: coursePo.getIsMapping() != null && coursePo.getIsMapping() == PoConstants.DEL_FLAG_YES
  动作: courseId = coursePo.getMappingId();
- 课程学员存在性验证规则: 如果课程下存在状态为进行中的学员，则返回第一个学员的ID；否则，创建新的学员记录。
  条件: CollectionUtils.isNotEmpty(studentPoList)
  动作: return studentPoList.get(0).getId().toString();

### CourseCategoryLockingRules
- 描述: 规则集用于管理批量锁定课程分类的业务逻辑。
- 业务域: 课程管理

主要规则:
- CheckForNonExistentCategories: 检查请求体中的课程分类ID是否存在。
  条件: 存在至少一个在数据库中不存在的课程分类ID
  动作: 抛出异常或返回错误信息
- FilterUnlockedCategories: 筛选出未被锁定的课程分类。
  条件: 课程分类的锁定状态为未锁定
  动作: 将这些课程分类的状态更新为锁定

### UserLearningDurationDataController_job_RuleSet
- 描述: 规则集用于定义处理课程学习时长数据的API的业务规则
- 业务域: 课程管理

主要规则:
- ValidateRequestBody: 验证请求体是否符合UserLearningDurationDataServiceImpl.ParamObj的结构
  条件: request != null && request instanceof UserLearningDurationDataServiceImpl.ParamObj
  动作: 继续处理请求

### CourseController_checkCourseUsePermission_Rules
- 描述: 规则集用于定义CourseController_checkCourseUsePermission API的业务规则。
- 业务域: 课程权限管理

主要规则:
- 课程ID列表非空验证: 验证请求体中的课程ID列表是否为空。
  条件: CollectionUtils.isEmpty(courseIds)
  动作: 返回null
- 管理员角色权限码非空验证: 验证管理员角色权限码是否为空。
  条件: adminRolePermissionCodes == null || CollectionUtils.isEmpty(adminRolePermissionCodes.getAdminRoleCodes())
  动作: 返回null
- 超级管理员权限验证: 验证管理员是否为超级管理员。
  条件: adminRoleCodes.stream().anyMatch(item -> item != null && StringUtils.equals(item.getRoleCode(), Role.SUPERADMIN))
  动作: 设置ifHaveAllPermission为1并返回vo
- 课程使用权限验证: 验证每个课程是否可以被使用。
  条件: !canUseCourse(course, adminRoleCodes, courseStudents, "")
  动作: 设置ifHaveAllPermission为0并将课程名称添加到courseCodeList

### RecentStudyController_Rules
- 描述: 规则集用于RecentStudyController_queryRecentLearnList API的业务逻辑验证。
- 业务域: 课程学习

主要规则:
- Validate Query Field: 验证请求体中的queryField字段是否为1。
  条件: recentStudyVo.getQueryField() == null || recentStudyVo.getQueryField() != 1
  动作: 抛出BizBaseException异常，提示'最近在学查询范围有误'

### CourseSectionLearnController_delMyComment_Rules
- 描述: 规则集用于CourseSectionLearnController_delMyComment API的业务逻辑验证。
- 业务域: 课程学习

主要规则:
- 评论ID验证: 验证传入的评论ID是否有效并且属于当前用户。
  条件: id != null && sectionLearnService.commentExistsAndBelongsToUser(id)
  动作: 继续执行删除操作。

### CourseController_queryLikesAndFavorites_Rules
- 描述: 规则集用于CourseController_queryLikesAndFavorites API的业务逻辑验证。
- 业务域: 课程互动

主要规则:
- CourseId_Validation: 验证courseId是否有效，即是否存在于数据库中。
  条件: courseId != null && baseMapper.selectById(courseId) != null
  动作: 查询课程的点赞数和收藏数，并返回ResultVo<CourseLikesVo>。

### TestAAAController_statisticLearningSceneByCommittee_RuleSet
- 描述: 该规则集定义了TestAAAController_statisticLearningSceneByCommittee API的业务规则，包括如何从数据库中获取数据、如何对数据进行分组和计算以及如何返回结果。
- 业务域: 培训与学习管理

主要规则:
- 查询已发布且未删除的改造代码: 从数据库中查询已发布且未删除的改造代码
  条件: renovationPo.getStatus() == 1 && renovationPo.getIsDel() == 0
  动作: renovationDao.selectList(...)
- 获取规划信息: 通过zoneListQueryVo获取规划信息
  条件: zoneListQueryVo.getZoneList() != null
  动作: trainPlanningFeign.getPlanningByZoneIds(zoneListQueryVo)
- 统计学习场景: 统计各个委员会的学习场景
  条件: CollectionUtils.isNotEmpty(committeeCommentPos)
  动作: committeeService.statisticLearningSceneByCommittee()
- 统计响应速度: 统计各个委员会的响应速度
  条件: CollectionUtils.isNotEmpty(committeeCommentPos)
  动作: committeeService.statisticRespSpeedByCommittee()
- 统计培训满意度: 统计各个委员会的培训满意度
  条件: CollectionUtil.isNotEmpty(planningIdsMap)
  动作: committeeService.statisticTrainSatisfactionByCommittee(renovationCodes, planningIdsMap)
- 统计课程质量评分: 统计各个委员会的课程质量评分
  条件: CollectionUtil.isNotEmpty(dimensionCourseMap)
  动作: committeeService.statisticCourseRatingsByCommittee(dimensionCourseMap)
- 统计目标人才覆盖率: 统计各个委员会的目标人才覆盖率
  条件: CollectionUtil.isNotEmpty(dimensionCourseMap)
  动作: committeeService.statisticTargetTalentCoverRateByCommittee(dimensionCourseMap)
- 统计促学体验: 统计各个委员会的促学体验
  条件: CollectionUtil.isNotEmpty(dimensionPlanningMap)
  动作: committeeService.statisticPromotingLearningExperienceByCommittee(dimensionPlanningMap)
- 统计培训计划完成率: 统计各个委员会的培训计划完成率
  条件: CollectionUtil.isNotEmpty(dimensionPlanningMap)
  动作: committeeService.statisticPlanningCompletionRateByCommittee(dimensionPlanningMap)

### CourseCategoryController_getPlanCourseCategoryTree_RuleSet
- 描述: 规则集用于管理CourseCategoryController_getPlanCourseCategoryTree API的业务逻辑和验证。
- 业务域: 课程管理

主要规则:
- PerCodeNotEmptyValidation: 验证perCode参数是否为空。
  条件: perCode == null || perCode.isEmpty()
  动作: 抛出异常，提示领域或者专委会编码不能为空。
- DetermineServiceMethodCall: 根据perCode参数的值决定调用哪个服务方法。
  条件: StringUtils.equals(perCode, CourseConstants.ORG_DIMENSION_TYPE + "-" + CourseConstants.CHAIN_DOMAIN)
  动作: 调用getCategoryCatalogList方法。

### CourseCategoryEditValidationRules
- 描述: 规则集用于验证课程分类编辑请求的有效性
- 业务域: 课程管理

主要规则:
- CheckIfCategoryExists: 验证指定ID的课程分类是否存在
  条件: categoryPo == null
  动作: throw new BizBaseException("该目录不存在")
- CheckCategoryPermissions: 验证课程目录权限是否正确
  条件: dimensionCodes.length == 0
  动作: throw new BizBaseException("课程目录权限错误")
- CheckForDuplicateCategoryName: 验证同一级别的目录名称是否重复
  条件: this.hasSameLevelName(categoryPo.getCategoryLevel(), courseCategoryVO.getCategoryName(), categoryPo.getCategoryParentId(), categoryPo.getDimensionType() + "-" + categoryPo.getDimensionCodes()) && !StringUtils.equals(categoryPo.getCategoryName(), courseCategoryVO.getCategoryName())
  动作: throw new BizBaseException("同一级别不允许重名，请重新填写类别名称")

### OrganizationKanBanController_planningBoard_RuleSet
- 描述: 该规则集定义了处理组织看板三级页面请求的具体业务规则。
- 业务域: 课程满意度评价

主要规则:
- 请求体验证规则: 验证传入的请求体是否符合OrgBoardThirdRequest的结构要求。
  条件: 请求体为null或不符合OrgBoardThirdRequest的结构
  动作: 抛出异常或返回错误响应
- 处理评论看板规则: 调用service.commentBoard方法处理请求体中的数据，并生成CommentBoardResponse。
  条件: 请求体验证通过
  动作: 调用service.commentBoard(request, OrgBoardBaseConstants.PLANNING)生成CommentBoardResponse
- 返回成功响应规则: 将生成的CommentBoardResponse封装到ResultVo中并返回。
  条件: service.commentBoard方法成功执行
  动作: 返回ResultVo.success(response)

### Validation Ruleset for Course Study Rank API
- 描述: This rule set contains validation rules for the Course Study Rank API.
- 业务域: 课程学习统计

主要规则:
- Validate Request Body: Ensure that the request body conforms to the OrgBoardBaseRequest schema.
  条件: request != null && request instanceof OrgBoardBaseRequest
  动作: Proceed with processing the request.

### CourseController_updateIsLinks_Rules
- 描述: 规则集用于验证和处理CourseController_updateIsLinks API的业务逻辑
- 业务域: 课程管理

主要规则:
- 课程存在验证: 验证给定的课程ID对应的课程是否存在
  条件: courseService.selectById(courseId) == null
  动作: 抛出BizBaseException异常，提示'根据课程id未查询到相关课程'
- isLinks参数有效性验证: 验证isLinks参数的有效性，1表示是外链课，其他值表示不是外链课
  条件: isLinks != null && isLinks == 1
  动作: 设置coursePo.setIsLinks(isLinks)

### CourseStudyDataValidationRules
- 描述: 该规则集定义了对CourseStudyDataVo对象的验证规则，以确保查询条件的有效性。
- 业务域: 课程学习管理

主要规则:
- Course Study Data Validation: 验证请求体中的CourseStudyDataVo对象是否符合CourseStudyValid约束。
  条件: @Validated(CourseStudyDataVo.CourseStudyValid.class)
  动作: 通过验证，允许继续处理请求。

### CourseStudentApi_RuleSet
- 描述: 该规则集定义了CourseStudentApi_get API的业务规则，包括序列号刷新、学习数据查询、课程资源和学习状态更新等。
- 业务域: 课程管理

主要规则:
- CheckSyncListNotEmpty: 检查从同步中间表中查询的学习数据是否为空
  条件: CollectionUtils.isEmpty(syncListBySeqNo)
  动作: return null
- RefreshSequenceNumber: 刷新序列号，删除旧的缓存并插入新的序列号
  条件: 调用refreshSeqEntity方法
  动作: 生成新的序列号并更新Redis缓存和数据库中的序列号实体

### CourseCommentReplyController_RuleSet
- 描述: 规则集用于管理CourseCommentReplyController中的业务规则。
- 业务域: 课程评论管理

主要规则:
- 验证当前用户信息是否为空: 在处理课程评论回复之前，必须验证当前用户信息是否存在。如果用户信息为空，则抛出BizBaseException异常。
  条件: userInfo == null
  动作: throw new BizBaseException("当前用户信息为空")
- 填充用户信息和评论日期: 将当前登录用户的编号、用户名以及评论日期填充到评论回复对象中。
  条件: userInfo != null
  动作: courseCommentReplyVo.setUserNo(userInfo.getEmpsn()); courseCommentReplyVo.setUserName(userInfo.getEmpname()); courseCommentReplyVo.setCommentDate(LocalDateTime.now());
- 处理回复ID: 如果评论回复对象中存在replyId，则查找对应的评论回复记录，并将原回复的用户编号和用户名设置到新的评论回复对象中。
  条件: !Objects.isNull(courseCommentReplyVo.getReplyId())
  动作: CourseCommentReplyPo replyPo = this.baseMapper.selectById(courseCommentReplyVo.getReplyId()); if(!Objects.isNull(replyPo)){ courseCommentReplyPo.setReplyUserNo(replyPo.getUserNo()); courseCommentReplyPo.setReplyUserName(replyPo.getUserName()); }
- 保存评论回复对象: 将新的评论回复对象保存到数据库。
  条件: courseCommentReplyPo != null
  动作: this.save(courseCommentReplyPo);

### CourseController_queryAllFields_RuleSet
- 描述: 规则集用于管理CourseController_queryAllFields API的业务逻辑和权限验证
- 业务域: 课程管理与权限控制

主要规则:
- Validate Data Permissions: 检查用户是否有数据权限范围，如果没有则抛出异常
  条件: dimensions == null
  动作: throw new BizBaseException("获取数据权限范围失败")
- Process Super Admin or Group Admin Permissions: 如果用户角色是超级管理员或集团管理员，则查询所有字段并返回
  条件: roleCodes.contains("super-admin") || roleCodes.contains("group-admin")
  动作: return handleSuperAdmin(fields)
- Group Fields by Business Unit and Platform: 根据业务单元和平台对查询到的字段进行分组
  条件: fields != null && !fields.isEmpty()
  动作: 按照业务单元和平台对字段进行分组，并设置FieldDetailVo的相关属性
- Group Fields by Platform and Micro Unit: 根据平台和小微对查询到的字段进行分组
  条件: field != null && !field.isEmpty()
  动作: 按照平台和小微对字段进行分组，并设置FieldDetailVo的相关属性

### CourseStudentCustomListController_Rules
- 描述: 该规则集定义了CourseStudentCustomListController_getUserByImportType API的业务规则。
- 业务域: 课程学生管理

主要规则:
- 请求体非空验证: 验证请求体是否为空，如果为空则返回错误信息。
  条件: businessResource == null
  动作: 返回错误信息

### BannerController_delBanner_RuleSet
- 描述: 规则集用于管理BannerController_delBanner API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- Validate Banner ID: 检查传入的'id'参数是否为空或无效。
  条件: id == null || id.isEmpty()
  动作: 抛出异常或返回错误信息

### CourseStudentController_getTemplates_Rules
- 描述: 该规则集定义了CourseStudentController_getTemplates API的业务规则。
- 业务域: 学员管理

主要规则:
- 获取模板URL: 当客户端发送GET请求到/course/student/getTemplates时，服务器调用courseStudentService的getTemplates方法以获取模板URL。
  条件: 客户端发送GET请求到/course/student/getTemplates
  动作: 调用courseStudentService.getTemplates()方法，返回包含模板URL的ResultVo对象。

### SceneCourseBindingRules
- 描述: 绑定场景课程主题及其关联课程的业务规则集合
- 业务域: 课程管理

主要规则:
- 主题列表非空验证: 验证传入的主题列表是否为空
  条件: CollectionUtil.isEmpty(themeList)
  动作: 抛出BizBaseException异常，提示'专题不能为空'
- 课程重复验证: 验证传入的课程是否有重复
  条件: hasDuplicate(themeList)
  动作: 抛出BizBaseException异常，提示'课程重复'

### CourseFilterByViewPermissions_RuleSet
- 描述: 该规则集定义了根据用户的查看权限过滤课程列表的具体业务规则。
- 业务域: 课程管理

主要规则:
- 验证课程ID列表是否为空: 检查请求体中的课程ID列表是否为空，如果为空则返回空列表。
  条件: CollectionUtils.isEmpty(vo.getCourseIdList())
  动作: return Collections.emptyList()
- 验证用户是否有权限查看全员可观看的课程: 检查用户是否有权限查看所有标记为全员可观看的课程。
  条件: o.getVisibleType() == 1
  动作: collectIds.addAll(collectItems)
- 验证用户是否有权限查看指定人可观看的课程: 检查用户是否有权限查看所有标记为指定人可观看的课程。
  条件: o.getVisibleType() == 5
  动作: collectIds.addAll(collect)
- 验证用户是否有权限查看权限范围可观看的课程: 检查用户是否有权限查看所有标记为权限范围可观看的课程。
  条件: o.getVisibleType() != 5 && o.getVisibleType() != 1
  动作: collectIds.addAll(collect)
- 移除用户不可查看的课程: 从收集的课程ID列表中移除用户不可查看的课程。
  条件: !CollectionUtils.isEmpty(unVisableList)
  动作: collectIds.removeAll(accountUnVisible)

### TestAAAController_refreshCourseSourceType_Rules
- 描述: 规则集用于定义TestAAAController_refreshCourseSourceType API的业务规则
- 业务域: 课程管理

主要规则:
- 验证课程是否存在且状态为已发布且未映射: 检查课程ID对应的课程是否存在，且状态为已发布且未映射
  条件: courseId != null && coursePo.getStatus() == CourseStatusEnum.PUBLISHED.getStatus() && coursePo.getIsMapping() == 0
  动作: 继续处理课程
- 验证课程的所有节是否都是外部链接: 检查课程的所有节是否都是外部链接（taskType == 4）
  条件: courseSectionPos.stream().allMatch(po -> po.getTaskType() == 4)
  动作: 将课程来源类型设置为外部（1）

### CourseStudentStudyDurationController_getTeamDurationByDay_RuleSet
- 描述: 该规则集定义了CourseStudentStudyDurationController_getTeamDurationByDay API的业务规则。
- 业务域: 课程学习统计

主要规则:
- 请求有效性验证: 验证请求是否有效，由于该API没有请求参数和请求体，因此主要验证请求方法和路径是否正确。
  条件: 请求方法为GET && 请求路径为/course/study/duration/team-study
  动作: 继续处理请求，调用courseStudentStudyDurationService.getTeamDurationByDay方法获取数据。

### CourseStudentStudyDurationController_Rules
- 描述: 管理端-团队每日学习时长接口相关的业务规则集合
- 业务域: 课程管理

主要规则:
- 检查Redis缓存: 检查Redis缓存中是否存在指定团队的学习时长数据
  条件: redisService.getString(redisKey, TeamStudyDurationVo.class) != null
  动作: 返回缓存中的TeamStudyDurationVo数据
- 根据权限类型选择服务: 根据管理员权限类型选择合适的课程学习时长服务获取学习时长数据
  条件: adminPermission.getPerType().equals("org")
  动作: 调用courseStudyDomainDurationService.getTeamDurationByDay(adminPermission)

### TestAAAController_refreshStudentConfigVisibleBy3_RuleSet
- 描述: 该规则集定义了TestAAAController_refreshStudentConfigVisibleBy3 API的业务规则。
- 业务域: 课程管理

主要规则:
- 验证courseId有效性: 检查传入的courseId是否为空或无效。
  条件: courseId == null
  动作: 跳过courseId相关的操作，处理所有相关配置。
- 验证coursePo有效性: 检查查询出的coursePo是否为空或createRole是否有效。
  条件: coursePo == null || StringUtils.isEmpty(coursePo.getCreateRole())
  动作: 跳过当前courseStudentPo的处理。
- 验证buildDataAccessBuAndCa方法: 检查buildDataAccessBuAndCa方法是否成功。
  条件: !buildDataAccessBuAndCa(coursePo, courseStudentPo)
  动作: 记录错误的courseId，并跳过当前courseStudentPo的更新。

### CourseSectionLearnController_RuleSet
- 描述: 该规则集定义了CourseSectionLearnController_updateCourseLearnInfo API的业务规则。
- 业务域: 课程学习管理

主要规则:
- 验证课程学习信息: 验证请求体中的课程学习信息是否有效。
  条件: sectionLearn != null && sectionLearn.isValid()
  动作: 继续处理，调用sectionLearnService.updateCourseLearnInfoUseRedis(sectionLearn)

### CourseSectionDeletionRules
- 描述: 规则集用于管理课程节删除操作的业务规则。
- 业务域: 课程管理

主要规则:
- 课程节存在性验证: 验证传入的课程节ID是否对应有效的课程节数据。
  条件: courseSectionPo == null
  动作: throw new BizBaseException("根据id未查询到有效课程节数据")
- 章节内唯一节验证: 验证要删除的课程节是否为章节内的唯一节，如果是则不允许删除。
  条件: CollectionUtils.isNotEmpty(idList) && idList.size() == 1
  动作: throw new BizBaseException("最后一节不可删除")

### CourseMappingController_refreshCategoryMapping_Rules
- 描述: 规则集用于描述CourseMappingController_refreshCategoryMapping API的业务规则
- 业务域: 课程管理

主要规则:
- 课程列表非空验证: 验证从数据库中获取的课程列表是否为空，如果不为空则进行课程映射同步。
  条件: CollectionUtils.isEmpty(courseList)
  动作: return

### CourseController_refresh_RuleSet
- 描述: 规则集用于管理CourseController_refresh API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- Permission Check Rule: 检查调用者是否有权限进行课程映射刷新操作。
  条件: isUserAuthorized(request.getUser())
  动作: allowRefreshOperation()

### CourseCommentReplyController_queryComments_Rules
- 描述: 规则集用于CourseCommentReplyController_queryComments API的业务逻辑验证。
- 业务域: 课程评价管理

主要规则:
- 验证当前用户信息是否为空: 检查当前用户信息是否为空，如果为空则抛出BizBaseException异常。
  条件: userInfo == null
  动作: throw new BizBaseException("当前用户信息为空")
- 验证用户是否为超级管理员: 检查用户角色列表中是否包含超级管理员角色，如果是则设置查询标志。
  条件: roleCodeList.contains(Role.SUPERADMIN)
  动作: courseCommentQueryVo.setIsSuperAdmin(1)

### Course Publish Rules
- 描述: 规则集用于管理端批量发布课程的验证逻辑
- 业务域: 课程管理

主要规则:
- 课程ID列表非空验证: 验证请求体中的课程ID列表是否为空
  条件: CollectionUtils.isEmpty(courseIds)
  动作: 抛出BizBaseException异常，提示'课程id不能为空'
- 可发布课程验证: 验证数据库中是否存在待发布的课程
  条件: CollectionUtils.isEmpty(courses)
  动作: 抛出BizBaseException异常，提示'没有可发布的课程'
- 课程目录存在验证: 验证课程目录是否存在
  条件: CollectionUtils.isEmpty(courseCategorys)
  动作: 抛出BizBaseException异常，提示'选择的课程的课程目录不存在'
- 课程内容配置完成验证: 验证课程内容是否配置完成
  条件: CollectionUtils.isEmpty(courseChapterList) || hasNotSection
  动作: 添加PublishError，提示'课程内容未配置完成'
- 学员范围配置完成验证: 验证学员范围是否配置完成
  条件: courseStudentPo == null || courseStudentPo.getVisibleType() == null
  动作: 添加PublishError，提示'未完成学员范围配置'
- 共享范围配置完成验证: 验证共享范围是否配置完成
  条件: courseStudentPo.getShareFieldType() == null
  动作: 添加PublishError，提示'未完成共享范围配置'
- 用户登录验证: 验证当前用户是否已登录
  条件: user == null
  动作: 抛出BizBaseException异常，提示'用户未登录'

### BannerController_saveBanner_RuleSet
- 描述: 规则集用于管理端保存banner图的逻辑验证和处理
- 业务域: 课程管理

主要规则:
- 验证管理员权限: 检查当前管理员的权限角色，如果是超级管理员，则设置isCreatedSuper为1，否则设置为0
  条件: adminPermissionVO.getRoleCode().equalsIgnoreCase("super-admin")
  动作: bannerPo.setIsCreatedSuper(1)

### Validation Rules for Committee KanBan Learn Rate Distribution Query
- 描述: This rule set contains validation rules for the Committee KanBan Learn Rate Distribution Query API.
- 业务域: 课程管理

主要规则:
- Validate Committee KanBan Learn Rate VO: Ensure that the CommitteeKanBanLearnRateVO object is valid and all required fields are present.
  条件: @RequestBody @Validated CommitteeKanBanLearnRateVO committeeKanBanLearnRateVO
  动作: Proceed with processing the request
- Process Permission Codes: Split the code from CommitteeKanBanLearnRateVO, fetch highest permission options, and prepare code list.
  条件: String codeSplit = committeeKanBanLearnRateVO.getCode(); String[] split = codeSplit.split(",");
  动作: Prepare codeList for further processing
- Fetch Yesterday's Date: Calculate yesterday's date using DateUtil and DateUtils.
  条件: String yesterday = DateUtil.format(org.apache.commons.lang.time.DateUtils.addDays(new Date(), -1), DatePattern.NORM_DATE_PATTERN);
  动作: Set yesterday's date for query
- Query Learn Rate Distribution: Invoke baseMapper to query learn rate distribution data based on provided parameters.
  条件: IPage<LearnRateDistributionResponse> pageRec = this.baseMapper.queryLearnRateDistribution(ipage, codeList, employeeType, queryType, yesterday);
  动作: Retrieve learn rate distribution data
- Convert Rate to Double: Convert rate percentage in LearnRateDistributionResponse to double value.
  条件: pageRec.getRecords().forEach(c -> c.setRateDouble(Double.parseDouble(StringUtils.isBlank(c.getRate()) ? "0" : c.getRate().replace("%", ""))));
  动作: Update rateDouble field in each response record

### CourseSectionLearnController_exportCourseLearnDetail_RuleSet
- 描述: 该规则集定义了CourseSectionLearnController_exportCourseLearnDetail API的业务规则。
- 业务域: 课程学习管理

主要规则:
- 验证请求体: 验证传入的CourseLearnDetailRequest对象是否符合预期格式。
  条件: request != null && request.isValid()
  动作: 继续处理请求
- 设置默认分页参数: 如果没有提供分页参数，则设置默认的current为0，size为150000。
  条件: request.getCurrent() == null || request.getSize() == null
  动作: request.setCurrent(0); request.setSize(150000);
- 查询课程学习详情: 调用sectionLearnService的queryCourseLearnDetail方法来获取课程学习详情。
  条件: request != null
  动作: IPage<CourseStudyRankVo> iPage = sectionLearnService.queryCourseLearnDetail(request);
- 导出Excel文件: 使用EasyExcelUtils的exportExcel方法将查询结果导出为Excel文件。
  条件: iPage != null && iPage.getRecords() != null
  动作: EasyExcelUtils.exportExcel(response, "课程详情", "课程详情", iPage.getRecords(), CourseStudyRankVo.class);

### CourseStudentController_importUser_Rules
- 描述: 规则集用于管理端导入学员API的业务逻辑
- 业务域: 课程管理

主要规则:
- 验证课程学员ID是否存在: 在导入学员信息之前，检查提供的课程学员ID是否存在于数据库中。如果不存在，则抛出异常。
  条件: ObjectUtils.isEmpty(courseStudentPo)
  动作: throw new BizBaseException("请传入正确的课程学员ID")
- 根据导入类型删除已存在的学员信息: 如果导入类型指示需要删除已存在的学员信息，则调用deleteUsers方法删除相关记录。
  条件: !CollectionUtils.isEmpty(userList)
  动作: courseStudentCustomListDao.deleteUsers(courseStudentId, importType, null, null)
- 保存新的学员信息: 尝试保存上传文件中的学员信息。如果保存过程中发生异常，则打印堆栈跟踪并抛出异常。
  条件: try { saveUser(file, courseStudentId, importType, dataAccess, resultMap); } catch (Exception e) { ... }
  动作: saveUser(file, courseStudentId, importType, dataAccess, resultMap)
- 更新课程学员记录的状态: 在成功保存新的学员信息后，更新课程学员记录的状态为已导入。
  条件: saveUser成功执行
  动作: courseStudentPo.setImportStatus(BooleanEnum.YES.getValue()); this.baseMapper.updateById(courseStudentPo)

### CourseSectionLearnController_Rules
- 描述: 规则集用于CourseSectionLearnController_getLearnByUser API的验证和业务逻辑处理。
- 业务域: 课程学习管理

主要规则:
- 用户身份验证: 验证用户是否已登录并且有权限访问该API。
  条件: 用户已通过身份验证
  动作: 允许访问API
- 获取学习详情: 根据提供的courseId和account参数，调用sectionLearnService.getLearnByUser方法获取学习详情。
  条件: courseId和account参数有效
  动作: 调用sectionLearnService.getLearnByUser(courseId, account)

### CourseSectionController_RuleSet
- 描述: 规则集用于定义CourseSectionController_getCourseSection API的业务规则。
- 业务域: 课程管理

主要规则:
- 课程节ID存在性验证: 验证传入的课程节ID是否存在于数据库中。
  条件: courseSectionService.getCourseSection(id) != null
  动作: 返回ResultVo.success(CourseSectionVo)

### CourseQrcodeSignController_Rules
- 描述: 课程二维码签到相关的业务规则集合
- 业务域: 课程签到

主要规则:
- 二维码有效期验证: 验证二维码的时间戳是否在有效范围内（不超过30分钟）
  条件: timeBetween > 30
  动作: 返回'二维码过期!'消息
- 重复签到验证: 验证用户是否已经在此课程下签到过
  条件: signCount > 0
  动作: 返回'已在该课程下签到过，请勿重复签到!'消息

### CourseSectionLearnController_RuleSet
- 描述: 该规则集定义了CourseSectionLearnController_updateCourseLearnInfoNew API的业务规则。
- 业务域: 课程学习管理

主要规则:
- 验证CourseSectionLearnNewVo对象: 验证请求体中的CourseSectionLearnNewVo对象是否符合要求。
  条件: sectionLearn != null && sectionLearn.isValid()
  动作: 继续处理请求
- 处理更新课程学习信息: 调用sectionLearnService的updateCourseLearnInfoNew方法来更新课程学习信息。
  条件: validateCourseSectionLearnNewVo成功
  动作: this.sectionLearnService.updateCourseLearnInfoNew(sectionLearn)
- 记录错误日志并返回失败响应: 如果在处理过程中发生异常，记录错误日志并返回失败响应。
  条件: try块中抛出异常
  动作: ex.printStackTrace(); log.error("updateCourseLearnInfoErrorEnd", ex); return ResultVo.fail("updateCourseLearnInfo error");

### NewComerEventSkipRules
- 描述: 新手活动跳过相关的业务规则集合。
- 业务域: 新手引导

主要规则:
- 检查新手活动跳过: 根据当前用户的账号信息查询新手活动记录，判断用户是否可以跳过新手活动。
  条件: CollectionUtils.isNotEmpty(eventList) && eventList.size() > 0
  动作: 返回ResultVo.success(true)

### CommitteeCommentController_getLatestCommitteeComment_RuleSet
- 描述: 规则集用于验证CommitteeCommentController_getLatestCommitteeComment API的输入和执行逻辑
- 业务域: 课程评价

主要规则:
- 用户登录验证: 验证用户是否已登录，通过检查Access-Token获取的用户工号是否存在
  条件: userInfoRoleVo == null
  动作: 抛出BizBaseException异常，提示'评论时，未获取到用户工号'
- 专委会编码验证: 验证传入的专委会编码是否为空或格式正确
  条件: StringUtils.isEmpty(perCode)
  动作: 抛出BizBaseException异常，提示'请传入正确的专委会编码'
- 用户专委会归属验证: 验证当前用户是否属于指定专委会
  条件: checkCanComment(userInfoRoleVo, perCodeSplit[1])失败
  动作: 抛出BizBaseException异常，提示'用户不属于该专委会'

### ThirdPartyController_syncYunXueTangAccount_RuleSet
- 描述: 该规则集定义了ThirdPartyController_syncYunXueTangAccount API的业务规则。
- 业务域: 课程管理

主要规则:
- 账户列表非空验证: 验证请求体中的账户列表是否为空。如果为空，则返回错误响应。
  条件: accountList.isEmpty()
  动作: 返回错误响应

### CourseSectionLearnController_refreshLikeToCourse_RuleSet
- 描述: 规则集用于管理CourseSectionLearnController_refreshLikeToCourse API的业务逻辑和验证规则。
- 业务域: 课程管理

主要规则:
- 请求有效性验证: 验证请求是否符合预期格式和条件。
  条件: 请求方法为POST且路径为/learn/refreshLikeToCourse
  动作: 继续处理请求

### MsgRecordController_importUser_RuleSet
- 描述: 该规则集定义了MsgRecordController_importUser API的业务规则，包括文件上传验证和导入结果封装。
- 业务域: 用户管理

主要规则:
- 文件上传验证: 验证上传的文件是否为空，如果为空则抛出异常。
  条件: file == null || file.isEmpty()
  动作: throw new Exception("上传文件不能为空")

### Validation Rules for EvaluateCourse API
- 描述: This rule set contains validation rules for the EvaluateCourse API to ensure that the request body is correctly formatted and contains all necessary information.
- 业务域: 课程学习与评价

主要规则:
- Validate EvaluateCourseVo Object: Ensure that the EvaluateCourseVo object in the request body is valid and contains all required fields.
  条件: @Validated annotation ensures that the EvaluateCourseVo object meets the constraints defined in its class.
  动作: Proceed with the evaluation process if the object is valid.

### RenovationReportController_Rules
- 描述: 规则集用于描述RenovationReportController_exportGetRenovationList API的业务规则。
- 业务域: 课程管理

主要规则:
- CheckIfRenovationReportListIsEmpty: 检查根据族群编码查询到的专业专区数据列表是否为空。
  条件: CollectionUtils.isEmpty(list)
  动作: return;

### TrainPlanningController_refreshPlanningRecords_Rules
- 描述: 规则集用于描述TrainPlanningController_refreshPlanningRecords API的业务规则
- 业务域: 课程规划管理

主要规则:
- 检查新增学习记录: 对比课程学习记录与规划学习记录，找出新增的学习记录
  条件: CollectionUtils.isNotEmpty(differenceList)
  动作: 将differenceList中的记录刷入数据库
- 获取课程和作业完成情况: 查询每个规划下的课程和作业完成情况
  条件: CollectionUtils.isNotEmpty(courseworkStatus) && CollectionUtils.isNotEmpty(status)
  动作: 计算每个规划下的总完成数
- 更新规划状态: 根据课程和作业的完成情况更新规划状态
  条件: planningFinishList.size() > 0 或 planningNotFinishList.size() > 0
  动作: 更新规划状态为完成或进行中或未开始

### BannerController_queryBanner_RuleSet
- 描述: 规则集用于管理BannerController_queryBanner API的业务逻辑
- 业务域: 课程管理

主要规则:
- Validate User and BuCode: 验证用户是否存在以及buCode是否为空
  条件: employee == null || StringUtils.isBlank(employee.getBuCode())
  动作: return Collections.emptyList()

### Course Deletion Rules
- 描述: 规则集用于管理课程删除操作中的各种业务规则。
- 业务域: 课程管理

主要规则:
- 课程使用检查: 检查指定ID的课程是否正在被某个地图中的任务使用。
  条件: judgeCourseInPlanningDto.getFlag() == true
  动作: 返回ResultVo<JudgeCourseInPlanningDto>，提示需要先删除地图中的任务

### RenovationDynamicRules
- 描述: 该规则集定义了RenovationController_renovationDynamic API的业务规则。
- 业务域: 课程管理

主要规则:
- 验证翻新动态ID是否存在: 检查传入的翻新动态ID是否存在于数据库中。
  条件: renovationLearningDynamicsService.getById(id) != null
  动作: 将获取到的RenovationLearningDynamicsPo对象属性复制到RenovationDynamicVo对象，并将日期格式化为字符串后返回。

### ThirdPartyController_batchSaveXimalayaCourseStudyRecords_RuleSet
- 描述: 规则集用于ThirdPartyController_batchSaveXimalayaCourseStudyRecords API的请求体验证和业务逻辑处理
- 业务域: 课程学习记录管理

主要规则:
- 验证请求体格式: 验证请求体是否符合BatchSaveXimalayaCourseStudyRecordsRequest格式
  条件: 请求体格式正确
  动作: 继续处理请求
- 调用syncService批量保存课程学习记录: 调用syncService的batchSaveXimalayaCourseStudyRecords方法来处理批量保存操作
  条件: 请求体验证通过
  动作: 调用syncService.batchSaveXimalayaCourseStudyRecords()
- 返回成功响应: 返回一个ResultVo<Boolean>对象表示操作是否成功
  条件: syncService.batchSaveXimalayaCourseStudyRecords()执行成功
  动作: 返回ResultVo.success(true)

### CourseController_updateCourseStatus_RuleSet
- 描述: 规则集用于管理端-修改课程状态（下架）API的业务逻辑
- 业务域: 课程管理

主要规则:
- 课程状态验证规则: 验证课程是否处于已发布状态，只有已发布的课程才能被下架。
  条件: courseStatus == PUBLISHED
  动作: 允许下架课程
- 课程引用验证规则: 验证课程是否在进行中的地图任务中被引用，如果被引用则不允许下架。
  条件: judge.getFlag() == false
  动作: 返回ResultVo.success(judge)，提示管理员先删除地图中的任务

### CourseCommentReplyController_argee_RuleSet
- 描述: 规则集用于处理/courseCommentReply/argee API的业务逻辑
- 业务域: 课程评论互动

主要规则:
- Validate Type Parameter: 验证type参数是否为1或2
  条件: !Objects.equals(type,new Integer(1)) && !Objects.equals(type,new Integer(2))
  动作: throw new BizBaseException("请传入正确的类型！");
- Validate Comment Existence: 验证评论是否存在
  条件: Objects.isNull(commentPo)
  动作: throw new BizBaseException("评论不存在！");
- Validate User Login Status: 验证用户是否已登录
  条件: Objects.isNull(userInfo)
  动作: throw new BizBaseException("请重新登陆！");
- Insert New Agree Record: 如果用户之前没有对该评论进行过点赞或点踩，则插入一条新的记录
  条件: Objects.isNull(agreePo)
  动作: baseMapper.insert(po);
- Update Existing Agree Record: 如果用户已经进行了操作，则根据当前type参数更新记录，实现点赞与点踩之间的切换
  条件: !Objects.isNull(agreePo)
  动作: if(Objects.equals(agreePo.getType(), 0)) { agreePo.setType(type); } else if(Objects.equals(agreePo.getType(), type)) { agreePo.setType(0); } else { throw new BizBaseException("参数异常!"); } baseMapper.updateById(agreePo);

### RenovationReportController_Rules
- 描述: 规则集用于描述RenovationReportController_getRenovationCourse API的业务规则。
- 业务域: 课程管理

主要规则:
- Validate_Code_Not_Empty: 验证专区code是否为空，如果为空则抛出异常。
  条件: StringUtils.isBlank(code)
  动作: throw new BizBaseException("专区code不能为空")

### CourseCommentReplyController_delReplyComment_Rules
- 描述: 规则集用于CourseCommentReplyController_delReplyComment API的验证和业务逻辑处理
- 业务域: 课程评论管理

主要规则:
- 章节存在性验证: 验证章节是否存在，如果不存在则抛出异常
  条件: courseSectionPo == null
  动作: throw new BizBaseException("该章节已经不存在")
- 课程存在性验证: 验证课程是否存在，如果不存在则抛出异常
  条件: coursePo == null
  动作: throw new BizBaseException("该课程已经不存在")
- 用户信息验证: 验证当前用户信息是否为空，如果为空则抛出异常
  条件: userInfo == null
  动作: throw new BizBaseException("当前用户信息为空")
- 用户权限验证: 验证用户是否有权限删除评论或回复，如果无权限则抛出异常
  条件: !userInfo.getEmpsn().equals(userNo) && (CollectionUtils.isEmpty(roleList) || (CollectionUtils.isNotEmpty(roleCodeList) && !roleCodeList.contains(Role.SUPERADMIN)))
  动作: throw new BizBaseException("当前用户没有权限删除")

### UserScoreTrendRules
- 描述: 员工满意度趋势API相关的业务规则集合
- 业务域: 员工满意度管理

主要规则:
- 请求体非空验证: 验证请求体OrgBoardBaseRequest是否为空
  条件: request == null
  动作: 抛出异常或返回错误信息

### CommitteeRankingRules
- 描述: 专委会得分排名相关的业务规则。
- 业务域: 课程管理

主要规则:
- Validate Committee Code: 检查查询参数committeeCode是否为空，以决定调用哪个服务方法。
  条件: StringUtils.isBlank(committeeCode)
  动作: 调用committeeRankingService.getList(localDate, null)获取所有专委会的得分排名信息。
- Handle Empty Response: 如果查询结果为空，则创建一个新的CommitteeRankingVo对象，并设置其committeeCode属性。
  条件: CollectionUtils.isEmpty(list)
  动作: 创建新的CommitteeRankingVo对象，设置committeeCode属性，并调用odsCategoryTopFeign.getNameByCode(committeeCode)获取委员会名称。
- Determine Committee Star Rating: 根据专委会得分自动评定星级，并设置相应的星级描述和图标URL。
  条件: 根据committeeRankingVo.getCommitteeScore()的值进行判断
  动作: 根据得分范围设置committeeRankingVo的committeeStar和committeeStarUrl属性。

### CourseSectionLearnController_queryMyCommentList_RuleSet
- 描述: 规则集用于CourseSectionLearnController_queryMyCommentList API的业务逻辑验证。
- 业务域: 课程学习与评论

主要规则:
- Validate Course ID: 验证传入的courseId是否为空或无效。
  条件: courseId == null || courseId.isEmpty()
  动作: 返回错误信息：'Invalid course ID'

### TestAAAController_test_Rule_Set
- 描述: 规则集用于处理TestAAAController_test API中的业务逻辑，包括验证课程列表、课程ID以及学生信息是否符合规则。
- 业务域: 课程管理

主要规则:
- 课程列表非空验证: 验证传入的课程列表是否为空
  条件: CollectionUtils.isNotEmpty(courseIds)
  动作: 继续处理
- 课程ID存在验证: 验证传入的课程ID是否存在
  条件: courseStudentPos != null && !courseStudentPos.isEmpty()
  动作: 继续处理
- 学生信息规则验证: 验证学生信息是否符合预设规则
  条件: cal
  动作: 继续处理

### VersionAnnouncementController_Rules
- 描述: 规则集用于处理VersionAnnouncementController中的业务逻辑
- 业务域: 课程公告管理

主要规则:
- 公告存在性验证: 验证给定的公告ID对应的公告是否存在
  条件: versionPo == null
  动作: 抛出BizBaseException异常，错误信息为'公告异常！'
- 学员信息有效性验证: 验证通过Access-Token获取的学员信息是否有效
  条件: userInfoRoleVo == null
  动作: 返回null

### CourseQrcodeSignController_Rules
- 描述: 该规则集定义了CourseQrcodeSignController_signDetailPage API的业务规则。
- 业务域: 课程签到管理

主要规则:
- 验证courseId是否为空: 如果请求体中的courseId为空，则直接返回空的IPage对象。
  条件: Objects.isNull(request.getCourseId())
  动作: return ipage;

### CourseSectionLearnController_Rules
- 描述: 与CourseSectionLearnController_getCourseLearnRank API相关的业务规则集合。
- 业务域: 课程学习统计

主要规则:
- Validate Request Parameters: 验证请求参数committeeCode和type的有效性。
  条件: committeeCode != null && !committeeCode.isEmpty() && type != null && !type.isEmpty()
  动作: 继续处理请求，调用sectionLearnService.getCourseLearnRank(committeeCode, type)。

### BannerController_updateBanner_RuleSet
- 描述: 规则集用于验证和处理BannerController_updateBanner API的逻辑。
- 业务域: 课程管理

主要规则:
- Validate Banner ID: 检查请求参数'id'是否为空或无效。
  条件: id == null || id.isEmpty()
  动作: 抛出异常或返回错误响应

### Validation Rules for OrganizationKanBanController
- 描述: This rule set contains validation rules for the OrganizationKanBanController API.
- 业务域: 课程管理

主要规则:
- Request Body Not Null: Ensure that the request body is not null.
  条件: request == null
  动作: throw new IllegalArgumentException("Request body cannot be null")

### CommitteeDataRefreshRules
- 描述: 专委会排序数据刷新相关的业务规则集合
- 业务域: 课程管理

主要规则:
- ValidateRefreshTimeFormat: 验证refreshTime参数是否为空或符合日期格式yyyy-MM-dd
  条件: StringUtils.isBlank(refreshTime) || !LocalDate.parse(refreshTime)
  动作: 使用前一天的日期作为statisticalDate
- DeleteExistingData: 删除已存在的对应日期的数据
  条件: CollectionUtils.isNotEmpty(list)
  动作: committeeRankingService.removeBatchByIds(ids)
- CalculateAndSaveNewData: 重新计算并保存新的专委会排序数据
  条件: CollectionUtils.isNotEmpty(committeeRankingPos)
  动作: committeeRankingService.saveBatch(committeeRankingPos)

### TrainPlanningStudyController_Rules
- 描述: 规则集用于定义TrainPlanningStudyController_addPlanningStudy API的业务规则。
- 业务域: 课程学习规划

主要规则:
- Validate TrainPlanningStudyVo: 验证请求体中的TrainPlanningStudyVo对象是否符合要求，包括字段的非空性、格式等。
  条件: @RequestBody @Validated TrainPlanningStudyVo planningStudyVo
  动作: 通过验证

### WarningEducationController_RuleSet
- 描述: 规则集用于描述WarningEducationController中的业务规则。
- 业务域: 警示教育

主要规则:
- Validate Source Parameter: 验证请求参数'source'的有效性，确保其符合预期的格式或预设值。
  条件: source != null && !source.isEmpty()
  动作: 继续处理请求

### CommitteeQueryRules
- 描述: 规则集用于处理查询专委会及其相关课程信息的业务逻辑
- 业务域: 课程管理

主要规则:
- 查询专委会列表: 从CommitteeDao中获取所有专委会的详细信息
  条件: 调用committeeDao.queryCommittees()
  动作: 返回专委会列表
- 获取课程分类信息: 根据专委会列表从CourseCategoryDao中获取课程分类信息
  条件: 调用courseCategoryDao.getCategoriesForCommittee(committees)
  动作: 返回课程分类信息
- 查询课程数量: 根据课程分类信息从CourseDao中获取课程数量信息
  条件: 调用courseDao.queryCourseCount(oneCategories)
  动作: 返回课程数量信息
- 设置是否有课程标志: 根据课程数量信息设置每个专委会的hasCourse标志
  条件: 遍历committees和courseCount，比较committee.getCommitteeCode()和vo.getDimensionCodes()
  动作: 如果课程数量为0，设置committee.setHasCourse(0); 否则设置committee.setHasCourse(1)

### StudentCollectionController_queryLibraryClassList_RuleSet
- 描述: 规则集用于描述StudentCollectionController_queryLibraryClassList API的业务规则
- 业务域: 课程管理

主要规则:
- Validate OnlineClassVo: 验证请求体OnlineClassVo是否符合EditOnlineClassValid约束
  条件: @Validated(OnlineClassVo.EditOnlineClassValid.class)
  动作: 通过验证
- Check Current User: 检查当前登录人是否存在
  条件: tltrewEmployee == null
  动作: 抛出BizBaseException异常
- Set Authentication Domain Code: 根据当前登录人信息设置认证域代码
  条件: tltrewEmployee != null
  动作: 设置authDomainCode、account、buCode
- Query Course List: 根据条件查询在线课程列表
  条件: coursesVO.getIsSuperAdmin() == 0
  动作: 调用baseMapper.queryOnlineClassList(onlineClassVo)
- Filter Course List: 过滤掉不符合查看条件的课程
  条件: checkLibraryClass(onlineClassDetailsVo.getCourseId()) || !canLook(Long.parseLong(onlineClassDetailsVo.getCourseId()), onlineClassVo.getIsAdmin())
  动作: 从列表中移除课程
- Return Paginated Course List: 返回分页后的在线课程详情列表
  条件: list != null && !list.isEmpty()
  动作: 调用PageListUtils.pageHelper(list, onlineClassVo.getCurrent(), onlineClassVo.getSize())

### SceneCourseController_swapOrder_Rules
- 描述: 该规则集定义了SceneCourseController_swapOrder API的业务规则，包括参数验证、场景存在性验证以及同级场景分类验证。
- 业务域: 课程管理

主要规则:
- 参数非空验证: 验证传入的id和targetId参数是否为空
  条件: id == null || targetId == null
  动作: 抛出BizBaseException异常，提示'参数不能为空'
- 场景存在性验证: 验证传入的id和targetId对应的场景分类是否存在
  条件: po1 == null || po2 == null
  动作: 抛出BizBaseException异常，提示'场景不存在'
- 同级场景分类验证: 验证传入的id和targetId对应的场景分类是否属于同一父级场景分类
  条件: !Objects.equals(po1.getParentId(), po2.getParentId())
  动作: 抛出BizBaseException异常，提示'只能同级场景交换'

## 分析要求

1. 分析这些API之间的关系，识别它们组成的完整业务流程。只根据已经提供的API资产信息推断流程，不要进行任何假设
2. 将多个相关的API组成一个业务流程，分析步骤：
   - 业务域划分
     * 将API按业务领域分类（如：用户管理、订单管理等）
     * 标识每个业务域的核心功能
   - 流程节点识别
     * 识别每个业务域中的起始节点
     * 识别终止节点
     * 标记关键中间节点
   - 依赖关系分析
     * 分析API之间的调用顺序
     * 识别前置依赖关系
     * 标注并行可执行的节点
3. 对于每个识别出的流程，如果其由一个API组成，则需要判断该流程的正确和完整性，对于不正确和完整的流程不要析出。对于正确且完整的流程请提供：
   - 流程名称和描述
   - 流程中涉及的API及其调用顺序
   - 流程的开始条件和结束状态
   - 流程中的关键决策点和分支条件
## 返回格式

请将**所有识别出的流程**按照如下格式**在同一个JSON数组格式中返回**：

```json
[
  {
    "assetId": "资产ID",
    "assetType": "LOGIC",
    "assetSubType": "PROCESS",
    "name": "流程名称",
    "description": "详细的业务流程描述以及mermaid时序图",
    "version": "1.0.0",
    "status": "PUBLISHED",
    "tags": ["标签1", "标签2"],
    "businessDomain": "业务域",
    "createdInfo": {
      "creator": "system",
      "createdAt": "YYYY-MM-DDTHH:MM:SSZ",
      "source": "GENERATED"
    },
    "modifiedInfo": {
      "lastModifier": "system",
      "lastModifiedAt": "YYYY-MM-DDTHH:MM:SSZ"
    },
    "logicInfo": {
      "purpose": "流程目的",
      "scope": "流程范围",
      "executionContext": "执行上下文"
    },
    "ruleInfo": {
      "domain": "规则领域",
      "category": "规则类别",
      "priority": "规则优先级策略",
      "executionMode": "规则执行模式(ALL/FIRST_MATCH/PRIORITY)"
    },
    "content": {
      "process": {
        "startEvent": {
          "id": "start_001",
          "name": "起始事件名称"
        },
        "activities": [
          {
            "id": "act_001",
            "name": "活动名称",
            "type": "ServiceTask",
            "description": "活动描述",
            "inputs": ["输入1", "输入2"],
            "outputs": ["输出1"]
          }
        ],
        "gateways": [
          {
            "id": "gw_001",
            "type": "ExclusiveGateway",
            "condition": "分支条件"
          }
        ],
        "sequenceFlows": [
          {
            "id": "flow_001",
            "sourceRef": "start_001",
            "targetRef": "act_001"
          }
        ],
        "endEvents": [
          {
            "id": "end_001",
            "name": "结束状态描述"
          }
        ]
      }
    },
    "relationships": [
      {
        "targetAssetId": "api-id",
        "targetAssetType": "LOGIC",
        "relationshipType": "CALLS",
        "direction": "OUTGOING",
        "description": "调用关系描述"
      }
    ]
  }
]
```
/no think
